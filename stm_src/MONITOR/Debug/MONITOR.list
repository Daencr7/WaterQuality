
MONITOR.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000198  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000040bc  080001a0  080001a0  000011a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000003b4  08004260  08004260  00005260  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08004614  08004614  000061c8  2**0
                  CONTENTS, READONLY
  4 .ARM          00000008  08004614  08004614  00005614  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  0800461c  0800461c  000061c8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800461c  0800461c  0000561c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08004620  08004620  00005620  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         000001c8  20000000  08004624  00006000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000017c  200001c8  080047ec  000061c8  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  20000344  080047ec  00006344  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  000061c8  2**0
                  CONTENTS, READONLY
 12 .debug_info   00001835  00000000  00000000  000061f8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 0000081e  00000000  00000000  00007a2d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000001e8  00000000  00000000  00008250  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 0000014d  00000000  00000000  00008438  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  000100d8  00000000  00000000  00008585  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   000028d7  00000000  00000000  0001865d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00055ee1  00000000  00000000  0001af34  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  00070e15  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000016c8  00000000  00000000  00070e58  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000004a  00000000  00000000  00072520  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a0 <__do_global_dtors_aux>:
 80001a0:	b510      	push	{r4, lr}
 80001a2:	4c05      	ldr	r4, [pc, #20]	@ (80001b8 <__do_global_dtors_aux+0x18>)
 80001a4:	7823      	ldrb	r3, [r4, #0]
 80001a6:	b933      	cbnz	r3, 80001b6 <__do_global_dtors_aux+0x16>
 80001a8:	4b04      	ldr	r3, [pc, #16]	@ (80001bc <__do_global_dtors_aux+0x1c>)
 80001aa:	b113      	cbz	r3, 80001b2 <__do_global_dtors_aux+0x12>
 80001ac:	4804      	ldr	r0, [pc, #16]	@ (80001c0 <__do_global_dtors_aux+0x20>)
 80001ae:	f3af 8000 	nop.w
 80001b2:	2301      	movs	r3, #1
 80001b4:	7023      	strb	r3, [r4, #0]
 80001b6:	bd10      	pop	{r4, pc}
 80001b8:	200001c8 	.word	0x200001c8
 80001bc:	00000000 	.word	0x00000000
 80001c0:	08004244 	.word	0x08004244

080001c4 <frame_dummy>:
 80001c4:	b508      	push	{r3, lr}
 80001c6:	4b03      	ldr	r3, [pc, #12]	@ (80001d4 <frame_dummy+0x10>)
 80001c8:	b11b      	cbz	r3, 80001d2 <frame_dummy+0xe>
 80001ca:	4903      	ldr	r1, [pc, #12]	@ (80001d8 <frame_dummy+0x14>)
 80001cc:	4803      	ldr	r0, [pc, #12]	@ (80001dc <frame_dummy+0x18>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	bd08      	pop	{r3, pc}
 80001d4:	00000000 	.word	0x00000000
 80001d8:	200001cc 	.word	0x200001cc
 80001dc:	08004244 	.word	0x08004244

080001e0 <memchr>:
 80001e0:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 80001e4:	2a10      	cmp	r2, #16
 80001e6:	db2b      	blt.n	8000240 <memchr+0x60>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	d008      	beq.n	8000200 <memchr+0x20>
 80001ee:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001f2:	3a01      	subs	r2, #1
 80001f4:	428b      	cmp	r3, r1
 80001f6:	d02d      	beq.n	8000254 <memchr+0x74>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	b342      	cbz	r2, 8000250 <memchr+0x70>
 80001fe:	d1f6      	bne.n	80001ee <memchr+0xe>
 8000200:	b4f0      	push	{r4, r5, r6, r7}
 8000202:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000206:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800020a:	f022 0407 	bic.w	r4, r2, #7
 800020e:	f07f 0700 	mvns.w	r7, #0
 8000212:	2300      	movs	r3, #0
 8000214:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000218:	3c08      	subs	r4, #8
 800021a:	ea85 0501 	eor.w	r5, r5, r1
 800021e:	ea86 0601 	eor.w	r6, r6, r1
 8000222:	fa85 f547 	uadd8	r5, r5, r7
 8000226:	faa3 f587 	sel	r5, r3, r7
 800022a:	fa86 f647 	uadd8	r6, r6, r7
 800022e:	faa5 f687 	sel	r6, r5, r7
 8000232:	b98e      	cbnz	r6, 8000258 <memchr+0x78>
 8000234:	d1ee      	bne.n	8000214 <memchr+0x34>
 8000236:	bcf0      	pop	{r4, r5, r6, r7}
 8000238:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800023c:	f002 0207 	and.w	r2, r2, #7
 8000240:	b132      	cbz	r2, 8000250 <memchr+0x70>
 8000242:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000246:	3a01      	subs	r2, #1
 8000248:	ea83 0301 	eor.w	r3, r3, r1
 800024c:	b113      	cbz	r3, 8000254 <memchr+0x74>
 800024e:	d1f8      	bne.n	8000242 <memchr+0x62>
 8000250:	2000      	movs	r0, #0
 8000252:	4770      	bx	lr
 8000254:	3801      	subs	r0, #1
 8000256:	4770      	bx	lr
 8000258:	2d00      	cmp	r5, #0
 800025a:	bf06      	itte	eq
 800025c:	4635      	moveq	r5, r6
 800025e:	3803      	subeq	r0, #3
 8000260:	3807      	subne	r0, #7
 8000262:	f015 0f01 	tst.w	r5, #1
 8000266:	d107      	bne.n	8000278 <memchr+0x98>
 8000268:	3001      	adds	r0, #1
 800026a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800026e:	bf02      	ittt	eq
 8000270:	3001      	addeq	r0, #1
 8000272:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 8000276:	3001      	addeq	r0, #1
 8000278:	bcf0      	pop	{r4, r5, r6, r7}
 800027a:	3801      	subs	r0, #1
 800027c:	4770      	bx	lr
 800027e:	bf00      	nop

08000280 <strlen>:
 8000280:	4603      	mov	r3, r0
 8000282:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000286:	2a00      	cmp	r2, #0
 8000288:	d1fb      	bne.n	8000282 <strlen+0x2>
 800028a:	1a18      	subs	r0, r3, r0
 800028c:	3801      	subs	r0, #1
 800028e:	4770      	bx	lr

08000290 <__aeabi_drsub>:
 8000290:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
 8000294:	e002      	b.n	800029c <__adddf3>
 8000296:	bf00      	nop

08000298 <__aeabi_dsub>:
 8000298:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

0800029c <__adddf3>:
 800029c:	b530      	push	{r4, r5, lr}
 800029e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002a2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002a6:	ea94 0f05 	teq	r4, r5
 80002aa:	bf08      	it	eq
 80002ac:	ea90 0f02 	teqeq	r0, r2
 80002b0:	bf1f      	itttt	ne
 80002b2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002b6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002ba:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002be:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002c2:	f000 80e2 	beq.w	800048a <__adddf3+0x1ee>
 80002c6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002ca:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002ce:	bfb8      	it	lt
 80002d0:	426d      	neglt	r5, r5
 80002d2:	dd0c      	ble.n	80002ee <__adddf3+0x52>
 80002d4:	442c      	add	r4, r5
 80002d6:	ea80 0202 	eor.w	r2, r0, r2
 80002da:	ea81 0303 	eor.w	r3, r1, r3
 80002de:	ea82 0000 	eor.w	r0, r2, r0
 80002e2:	ea83 0101 	eor.w	r1, r3, r1
 80002e6:	ea80 0202 	eor.w	r2, r0, r2
 80002ea:	ea81 0303 	eor.w	r3, r1, r3
 80002ee:	2d36      	cmp	r5, #54	@ 0x36
 80002f0:	bf88      	it	hi
 80002f2:	bd30      	pophi	{r4, r5, pc}
 80002f4:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 80002f8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80002fc:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
 8000300:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000304:	d002      	beq.n	800030c <__adddf3+0x70>
 8000306:	4240      	negs	r0, r0
 8000308:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800030c:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
 8000310:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000314:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000318:	d002      	beq.n	8000320 <__adddf3+0x84>
 800031a:	4252      	negs	r2, r2
 800031c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000320:	ea94 0f05 	teq	r4, r5
 8000324:	f000 80a7 	beq.w	8000476 <__adddf3+0x1da>
 8000328:	f1a4 0401 	sub.w	r4, r4, #1
 800032c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000330:	db0d      	blt.n	800034e <__adddf3+0xb2>
 8000332:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000336:	fa22 f205 	lsr.w	r2, r2, r5
 800033a:	1880      	adds	r0, r0, r2
 800033c:	f141 0100 	adc.w	r1, r1, #0
 8000340:	fa03 f20e 	lsl.w	r2, r3, lr
 8000344:	1880      	adds	r0, r0, r2
 8000346:	fa43 f305 	asr.w	r3, r3, r5
 800034a:	4159      	adcs	r1, r3
 800034c:	e00e      	b.n	800036c <__adddf3+0xd0>
 800034e:	f1a5 0520 	sub.w	r5, r5, #32
 8000352:	f10e 0e20 	add.w	lr, lr, #32
 8000356:	2a01      	cmp	r2, #1
 8000358:	fa03 fc0e 	lsl.w	ip, r3, lr
 800035c:	bf28      	it	cs
 800035e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000362:	fa43 f305 	asr.w	r3, r3, r5
 8000366:	18c0      	adds	r0, r0, r3
 8000368:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800036c:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000370:	d507      	bpl.n	8000382 <__adddf3+0xe6>
 8000372:	f04f 0e00 	mov.w	lr, #0
 8000376:	f1dc 0c00 	rsbs	ip, ip, #0
 800037a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800037e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000382:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
 8000386:	d31b      	bcc.n	80003c0 <__adddf3+0x124>
 8000388:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
 800038c:	d30c      	bcc.n	80003a8 <__adddf3+0x10c>
 800038e:	0849      	lsrs	r1, r1, #1
 8000390:	ea5f 0030 	movs.w	r0, r0, rrx
 8000394:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000398:	f104 0401 	add.w	r4, r4, #1
 800039c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003a0:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
 80003a4:	f080 809a 	bcs.w	80004dc <__adddf3+0x240>
 80003a8:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 80003ac:	bf08      	it	eq
 80003ae:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003b2:	f150 0000 	adcs.w	r0, r0, #0
 80003b6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003ba:	ea41 0105 	orr.w	r1, r1, r5
 80003be:	bd30      	pop	{r4, r5, pc}
 80003c0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003c4:	4140      	adcs	r0, r0
 80003c6:	eb41 0101 	adc.w	r1, r1, r1
 80003ca:	3c01      	subs	r4, #1
 80003cc:	bf28      	it	cs
 80003ce:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
 80003d2:	d2e9      	bcs.n	80003a8 <__adddf3+0x10c>
 80003d4:	f091 0f00 	teq	r1, #0
 80003d8:	bf04      	itt	eq
 80003da:	4601      	moveq	r1, r0
 80003dc:	2000      	moveq	r0, #0
 80003de:	fab1 f381 	clz	r3, r1
 80003e2:	bf08      	it	eq
 80003e4:	3320      	addeq	r3, #32
 80003e6:	f1a3 030b 	sub.w	r3, r3, #11
 80003ea:	f1b3 0220 	subs.w	r2, r3, #32
 80003ee:	da0c      	bge.n	800040a <__adddf3+0x16e>
 80003f0:	320c      	adds	r2, #12
 80003f2:	dd08      	ble.n	8000406 <__adddf3+0x16a>
 80003f4:	f102 0c14 	add.w	ip, r2, #20
 80003f8:	f1c2 020c 	rsb	r2, r2, #12
 80003fc:	fa01 f00c 	lsl.w	r0, r1, ip
 8000400:	fa21 f102 	lsr.w	r1, r1, r2
 8000404:	e00c      	b.n	8000420 <__adddf3+0x184>
 8000406:	f102 0214 	add.w	r2, r2, #20
 800040a:	bfd8      	it	le
 800040c:	f1c2 0c20 	rsble	ip, r2, #32
 8000410:	fa01 f102 	lsl.w	r1, r1, r2
 8000414:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000418:	bfdc      	itt	le
 800041a:	ea41 010c 	orrle.w	r1, r1, ip
 800041e:	4090      	lslle	r0, r2
 8000420:	1ae4      	subs	r4, r4, r3
 8000422:	bfa2      	ittt	ge
 8000424:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000428:	4329      	orrge	r1, r5
 800042a:	bd30      	popge	{r4, r5, pc}
 800042c:	ea6f 0404 	mvn.w	r4, r4
 8000430:	3c1f      	subs	r4, #31
 8000432:	da1c      	bge.n	800046e <__adddf3+0x1d2>
 8000434:	340c      	adds	r4, #12
 8000436:	dc0e      	bgt.n	8000456 <__adddf3+0x1ba>
 8000438:	f104 0414 	add.w	r4, r4, #20
 800043c:	f1c4 0220 	rsb	r2, r4, #32
 8000440:	fa20 f004 	lsr.w	r0, r0, r4
 8000444:	fa01 f302 	lsl.w	r3, r1, r2
 8000448:	ea40 0003 	orr.w	r0, r0, r3
 800044c:	fa21 f304 	lsr.w	r3, r1, r4
 8000450:	ea45 0103 	orr.w	r1, r5, r3
 8000454:	bd30      	pop	{r4, r5, pc}
 8000456:	f1c4 040c 	rsb	r4, r4, #12
 800045a:	f1c4 0220 	rsb	r2, r4, #32
 800045e:	fa20 f002 	lsr.w	r0, r0, r2
 8000462:	fa01 f304 	lsl.w	r3, r1, r4
 8000466:	ea40 0003 	orr.w	r0, r0, r3
 800046a:	4629      	mov	r1, r5
 800046c:	bd30      	pop	{r4, r5, pc}
 800046e:	fa21 f004 	lsr.w	r0, r1, r4
 8000472:	4629      	mov	r1, r5
 8000474:	bd30      	pop	{r4, r5, pc}
 8000476:	f094 0f00 	teq	r4, #0
 800047a:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
 800047e:	bf06      	itte	eq
 8000480:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
 8000484:	3401      	addeq	r4, #1
 8000486:	3d01      	subne	r5, #1
 8000488:	e74e      	b.n	8000328 <__adddf3+0x8c>
 800048a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800048e:	bf18      	it	ne
 8000490:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000494:	d029      	beq.n	80004ea <__adddf3+0x24e>
 8000496:	ea94 0f05 	teq	r4, r5
 800049a:	bf08      	it	eq
 800049c:	ea90 0f02 	teqeq	r0, r2
 80004a0:	d005      	beq.n	80004ae <__adddf3+0x212>
 80004a2:	ea54 0c00 	orrs.w	ip, r4, r0
 80004a6:	bf04      	itt	eq
 80004a8:	4619      	moveq	r1, r3
 80004aa:	4610      	moveq	r0, r2
 80004ac:	bd30      	pop	{r4, r5, pc}
 80004ae:	ea91 0f03 	teq	r1, r3
 80004b2:	bf1e      	ittt	ne
 80004b4:	2100      	movne	r1, #0
 80004b6:	2000      	movne	r0, #0
 80004b8:	bd30      	popne	{r4, r5, pc}
 80004ba:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004be:	d105      	bne.n	80004cc <__adddf3+0x230>
 80004c0:	0040      	lsls	r0, r0, #1
 80004c2:	4149      	adcs	r1, r1
 80004c4:	bf28      	it	cs
 80004c6:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
 80004ca:	bd30      	pop	{r4, r5, pc}
 80004cc:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
 80004d0:	bf3c      	itt	cc
 80004d2:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
 80004d6:	bd30      	popcc	{r4, r5, pc}
 80004d8:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80004dc:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
 80004e0:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 80004e4:	f04f 0000 	mov.w	r0, #0
 80004e8:	bd30      	pop	{r4, r5, pc}
 80004ea:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004ee:	bf1a      	itte	ne
 80004f0:	4619      	movne	r1, r3
 80004f2:	4610      	movne	r0, r2
 80004f4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80004f8:	bf1c      	itt	ne
 80004fa:	460b      	movne	r3, r1
 80004fc:	4602      	movne	r2, r0
 80004fe:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000502:	bf06      	itte	eq
 8000504:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000508:	ea91 0f03 	teqeq	r1, r3
 800050c:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
 8000510:	bd30      	pop	{r4, r5, pc}
 8000512:	bf00      	nop

08000514 <__aeabi_ui2d>:
 8000514:	f090 0f00 	teq	r0, #0
 8000518:	bf04      	itt	eq
 800051a:	2100      	moveq	r1, #0
 800051c:	4770      	bxeq	lr
 800051e:	b530      	push	{r4, r5, lr}
 8000520:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000524:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000528:	f04f 0500 	mov.w	r5, #0
 800052c:	f04f 0100 	mov.w	r1, #0
 8000530:	e750      	b.n	80003d4 <__adddf3+0x138>
 8000532:	bf00      	nop

08000534 <__aeabi_i2d>:
 8000534:	f090 0f00 	teq	r0, #0
 8000538:	bf04      	itt	eq
 800053a:	2100      	moveq	r1, #0
 800053c:	4770      	bxeq	lr
 800053e:	b530      	push	{r4, r5, lr}
 8000540:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000544:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000548:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
 800054c:	bf48      	it	mi
 800054e:	4240      	negmi	r0, r0
 8000550:	f04f 0100 	mov.w	r1, #0
 8000554:	e73e      	b.n	80003d4 <__adddf3+0x138>
 8000556:	bf00      	nop

08000558 <__aeabi_f2d>:
 8000558:	0042      	lsls	r2, r0, #1
 800055a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800055e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000562:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000566:	bf1f      	itttt	ne
 8000568:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
 800056c:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
 8000570:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
 8000574:	4770      	bxne	lr
 8000576:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
 800057a:	bf08      	it	eq
 800057c:	4770      	bxeq	lr
 800057e:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
 8000582:	bf04      	itt	eq
 8000584:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
 8000588:	4770      	bxeq	lr
 800058a:	b530      	push	{r4, r5, lr}
 800058c:	f44f 7460 	mov.w	r4, #896	@ 0x380
 8000590:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000594:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000598:	e71c      	b.n	80003d4 <__adddf3+0x138>
 800059a:	bf00      	nop

0800059c <__aeabi_ul2d>:
 800059c:	ea50 0201 	orrs.w	r2, r0, r1
 80005a0:	bf08      	it	eq
 80005a2:	4770      	bxeq	lr
 80005a4:	b530      	push	{r4, r5, lr}
 80005a6:	f04f 0500 	mov.w	r5, #0
 80005aa:	e00a      	b.n	80005c2 <__aeabi_l2d+0x16>

080005ac <__aeabi_l2d>:
 80005ac:	ea50 0201 	orrs.w	r2, r0, r1
 80005b0:	bf08      	it	eq
 80005b2:	4770      	bxeq	lr
 80005b4:	b530      	push	{r4, r5, lr}
 80005b6:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
 80005ba:	d502      	bpl.n	80005c2 <__aeabi_l2d+0x16>
 80005bc:	4240      	negs	r0, r0
 80005be:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005c2:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 80005c6:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 80005ca:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005ce:	f43f aed8 	beq.w	8000382 <__adddf3+0xe6>
 80005d2:	f04f 0203 	mov.w	r2, #3
 80005d6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005da:	bf18      	it	ne
 80005dc:	3203      	addne	r2, #3
 80005de:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005e2:	bf18      	it	ne
 80005e4:	3203      	addne	r2, #3
 80005e6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80005ea:	f1c2 0320 	rsb	r3, r2, #32
 80005ee:	fa00 fc03 	lsl.w	ip, r0, r3
 80005f2:	fa20 f002 	lsr.w	r0, r0, r2
 80005f6:	fa01 fe03 	lsl.w	lr, r1, r3
 80005fa:	ea40 000e 	orr.w	r0, r0, lr
 80005fe:	fa21 f102 	lsr.w	r1, r1, r2
 8000602:	4414      	add	r4, r2
 8000604:	e6bd      	b.n	8000382 <__adddf3+0xe6>
 8000606:	bf00      	nop

08000608 <__aeabi_dmul>:
 8000608:	b570      	push	{r4, r5, r6, lr}
 800060a:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 800060e:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000612:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000616:	bf1d      	ittte	ne
 8000618:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800061c:	ea94 0f0c 	teqne	r4, ip
 8000620:	ea95 0f0c 	teqne	r5, ip
 8000624:	f000 f8de 	bleq	80007e4 <__aeabi_dmul+0x1dc>
 8000628:	442c      	add	r4, r5
 800062a:	ea81 0603 	eor.w	r6, r1, r3
 800062e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000632:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000636:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800063a:	bf18      	it	ne
 800063c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000640:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000644:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8000648:	d038      	beq.n	80006bc <__aeabi_dmul+0xb4>
 800064a:	fba0 ce02 	umull	ip, lr, r0, r2
 800064e:	f04f 0500 	mov.w	r5, #0
 8000652:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000656:	f006 4200 	and.w	r2, r6, #2147483648	@ 0x80000000
 800065a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800065e:	f04f 0600 	mov.w	r6, #0
 8000662:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000666:	f09c 0f00 	teq	ip, #0
 800066a:	bf18      	it	ne
 800066c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000670:	f1a4 04ff 	sub.w	r4, r4, #255	@ 0xff
 8000674:	f5b6 7f00 	cmp.w	r6, #512	@ 0x200
 8000678:	f564 7440 	sbc.w	r4, r4, #768	@ 0x300
 800067c:	d204      	bcs.n	8000688 <__aeabi_dmul+0x80>
 800067e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000682:	416d      	adcs	r5, r5
 8000684:	eb46 0606 	adc.w	r6, r6, r6
 8000688:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800068c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000690:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000694:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000698:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800069c:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 80006a0:	bf88      	it	hi
 80006a2:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 80006a6:	d81e      	bhi.n	80006e6 <__aeabi_dmul+0xde>
 80006a8:	f1be 4f00 	cmp.w	lr, #2147483648	@ 0x80000000
 80006ac:	bf08      	it	eq
 80006ae:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006b2:	f150 0000 	adcs.w	r0, r0, #0
 80006b6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006ba:	bd70      	pop	{r4, r5, r6, pc}
 80006bc:	f006 4600 	and.w	r6, r6, #2147483648	@ 0x80000000
 80006c0:	ea46 0101 	orr.w	r1, r6, r1
 80006c4:	ea40 0002 	orr.w	r0, r0, r2
 80006c8:	ea81 0103 	eor.w	r1, r1, r3
 80006cc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80006d0:	bfc2      	ittt	gt
 80006d2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80006d6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80006da:	bd70      	popgt	{r4, r5, r6, pc}
 80006dc:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80006e0:	f04f 0e00 	mov.w	lr, #0
 80006e4:	3c01      	subs	r4, #1
 80006e6:	f300 80ab 	bgt.w	8000840 <__aeabi_dmul+0x238>
 80006ea:	f114 0f36 	cmn.w	r4, #54	@ 0x36
 80006ee:	bfde      	ittt	le
 80006f0:	2000      	movle	r0, #0
 80006f2:	f001 4100 	andle.w	r1, r1, #2147483648	@ 0x80000000
 80006f6:	bd70      	pople	{r4, r5, r6, pc}
 80006f8:	f1c4 0400 	rsb	r4, r4, #0
 80006fc:	3c20      	subs	r4, #32
 80006fe:	da35      	bge.n	800076c <__aeabi_dmul+0x164>
 8000700:	340c      	adds	r4, #12
 8000702:	dc1b      	bgt.n	800073c <__aeabi_dmul+0x134>
 8000704:	f104 0414 	add.w	r4, r4, #20
 8000708:	f1c4 0520 	rsb	r5, r4, #32
 800070c:	fa00 f305 	lsl.w	r3, r0, r5
 8000710:	fa20 f004 	lsr.w	r0, r0, r4
 8000714:	fa01 f205 	lsl.w	r2, r1, r5
 8000718:	ea40 0002 	orr.w	r0, r0, r2
 800071c:	f001 4200 	and.w	r2, r1, #2147483648	@ 0x80000000
 8000720:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000724:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000728:	fa21 f604 	lsr.w	r6, r1, r4
 800072c:	eb42 0106 	adc.w	r1, r2, r6
 8000730:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000734:	bf08      	it	eq
 8000736:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800073a:	bd70      	pop	{r4, r5, r6, pc}
 800073c:	f1c4 040c 	rsb	r4, r4, #12
 8000740:	f1c4 0520 	rsb	r5, r4, #32
 8000744:	fa00 f304 	lsl.w	r3, r0, r4
 8000748:	fa20 f005 	lsr.w	r0, r0, r5
 800074c:	fa01 f204 	lsl.w	r2, r1, r4
 8000750:	ea40 0002 	orr.w	r0, r0, r2
 8000754:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000758:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800075c:	f141 0100 	adc.w	r1, r1, #0
 8000760:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000764:	bf08      	it	eq
 8000766:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800076a:	bd70      	pop	{r4, r5, r6, pc}
 800076c:	f1c4 0520 	rsb	r5, r4, #32
 8000770:	fa00 f205 	lsl.w	r2, r0, r5
 8000774:	ea4e 0e02 	orr.w	lr, lr, r2
 8000778:	fa20 f304 	lsr.w	r3, r0, r4
 800077c:	fa01 f205 	lsl.w	r2, r1, r5
 8000780:	ea43 0302 	orr.w	r3, r3, r2
 8000784:	fa21 f004 	lsr.w	r0, r1, r4
 8000788:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 800078c:	fa21 f204 	lsr.w	r2, r1, r4
 8000790:	ea20 0002 	bic.w	r0, r0, r2
 8000794:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000798:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800079c:	bf08      	it	eq
 800079e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007a2:	bd70      	pop	{r4, r5, r6, pc}
 80007a4:	f094 0f00 	teq	r4, #0
 80007a8:	d10f      	bne.n	80007ca <__aeabi_dmul+0x1c2>
 80007aa:	f001 4600 	and.w	r6, r1, #2147483648	@ 0x80000000
 80007ae:	0040      	lsls	r0, r0, #1
 80007b0:	eb41 0101 	adc.w	r1, r1, r1
 80007b4:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 80007b8:	bf08      	it	eq
 80007ba:	3c01      	subeq	r4, #1
 80007bc:	d0f7      	beq.n	80007ae <__aeabi_dmul+0x1a6>
 80007be:	ea41 0106 	orr.w	r1, r1, r6
 80007c2:	f095 0f00 	teq	r5, #0
 80007c6:	bf18      	it	ne
 80007c8:	4770      	bxne	lr
 80007ca:	f003 4600 	and.w	r6, r3, #2147483648	@ 0x80000000
 80007ce:	0052      	lsls	r2, r2, #1
 80007d0:	eb43 0303 	adc.w	r3, r3, r3
 80007d4:	f413 1f80 	tst.w	r3, #1048576	@ 0x100000
 80007d8:	bf08      	it	eq
 80007da:	3d01      	subeq	r5, #1
 80007dc:	d0f7      	beq.n	80007ce <__aeabi_dmul+0x1c6>
 80007de:	ea43 0306 	orr.w	r3, r3, r6
 80007e2:	4770      	bx	lr
 80007e4:	ea94 0f0c 	teq	r4, ip
 80007e8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80007ec:	bf18      	it	ne
 80007ee:	ea95 0f0c 	teqne	r5, ip
 80007f2:	d00c      	beq.n	800080e <__aeabi_dmul+0x206>
 80007f4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80007f8:	bf18      	it	ne
 80007fa:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80007fe:	d1d1      	bne.n	80007a4 <__aeabi_dmul+0x19c>
 8000800:	ea81 0103 	eor.w	r1, r1, r3
 8000804:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000808:	f04f 0000 	mov.w	r0, #0
 800080c:	bd70      	pop	{r4, r5, r6, pc}
 800080e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000812:	bf06      	itte	eq
 8000814:	4610      	moveq	r0, r2
 8000816:	4619      	moveq	r1, r3
 8000818:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800081c:	d019      	beq.n	8000852 <__aeabi_dmul+0x24a>
 800081e:	ea94 0f0c 	teq	r4, ip
 8000822:	d102      	bne.n	800082a <__aeabi_dmul+0x222>
 8000824:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000828:	d113      	bne.n	8000852 <__aeabi_dmul+0x24a>
 800082a:	ea95 0f0c 	teq	r5, ip
 800082e:	d105      	bne.n	800083c <__aeabi_dmul+0x234>
 8000830:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000834:	bf1c      	itt	ne
 8000836:	4610      	movne	r0, r2
 8000838:	4619      	movne	r1, r3
 800083a:	d10a      	bne.n	8000852 <__aeabi_dmul+0x24a>
 800083c:	ea81 0103 	eor.w	r1, r1, r3
 8000840:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000844:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000848:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 800084c:	f04f 0000 	mov.w	r0, #0
 8000850:	bd70      	pop	{r4, r5, r6, pc}
 8000852:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000856:	f441 0178 	orr.w	r1, r1, #16252928	@ 0xf80000
 800085a:	bd70      	pop	{r4, r5, r6, pc}

0800085c <__aeabi_ddiv>:
 800085c:	b570      	push	{r4, r5, r6, lr}
 800085e:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000862:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000866:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800086a:	bf1d      	ittte	ne
 800086c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000870:	ea94 0f0c 	teqne	r4, ip
 8000874:	ea95 0f0c 	teqne	r5, ip
 8000878:	f000 f8a7 	bleq	80009ca <__aeabi_ddiv+0x16e>
 800087c:	eba4 0405 	sub.w	r4, r4, r5
 8000880:	ea81 0e03 	eor.w	lr, r1, r3
 8000884:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000888:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800088c:	f000 8088 	beq.w	80009a0 <__aeabi_ddiv+0x144>
 8000890:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000894:	f04f 5580 	mov.w	r5, #268435456	@ 0x10000000
 8000898:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800089c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80008a0:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80008a4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80008a8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80008ac:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008b0:	f00e 4100 	and.w	r1, lr, #2147483648	@ 0x80000000
 80008b4:	429d      	cmp	r5, r3
 80008b6:	bf08      	it	eq
 80008b8:	4296      	cmpeq	r6, r2
 80008ba:	f144 04fd 	adc.w	r4, r4, #253	@ 0xfd
 80008be:	f504 7440 	add.w	r4, r4, #768	@ 0x300
 80008c2:	d202      	bcs.n	80008ca <__aeabi_ddiv+0x6e>
 80008c4:	085b      	lsrs	r3, r3, #1
 80008c6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008ca:	1ab6      	subs	r6, r6, r2
 80008cc:	eb65 0503 	sbc.w	r5, r5, r3
 80008d0:	085b      	lsrs	r3, r3, #1
 80008d2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008d6:	f44f 1080 	mov.w	r0, #1048576	@ 0x100000
 80008da:	f44f 2c00 	mov.w	ip, #524288	@ 0x80000
 80008de:	ebb6 0e02 	subs.w	lr, r6, r2
 80008e2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008e6:	bf22      	ittt	cs
 80008e8:	1ab6      	subcs	r6, r6, r2
 80008ea:	4675      	movcs	r5, lr
 80008ec:	ea40 000c 	orrcs.w	r0, r0, ip
 80008f0:	085b      	lsrs	r3, r3, #1
 80008f2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008f6:	ebb6 0e02 	subs.w	lr, r6, r2
 80008fa:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008fe:	bf22      	ittt	cs
 8000900:	1ab6      	subcs	r6, r6, r2
 8000902:	4675      	movcs	r5, lr
 8000904:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000908:	085b      	lsrs	r3, r3, #1
 800090a:	ea4f 0232 	mov.w	r2, r2, rrx
 800090e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000912:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000916:	bf22      	ittt	cs
 8000918:	1ab6      	subcs	r6, r6, r2
 800091a:	4675      	movcs	r5, lr
 800091c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000920:	085b      	lsrs	r3, r3, #1
 8000922:	ea4f 0232 	mov.w	r2, r2, rrx
 8000926:	ebb6 0e02 	subs.w	lr, r6, r2
 800092a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800092e:	bf22      	ittt	cs
 8000930:	1ab6      	subcs	r6, r6, r2
 8000932:	4675      	movcs	r5, lr
 8000934:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000938:	ea55 0e06 	orrs.w	lr, r5, r6
 800093c:	d018      	beq.n	8000970 <__aeabi_ddiv+0x114>
 800093e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000942:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000946:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800094a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800094e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000952:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000956:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800095a:	d1c0      	bne.n	80008de <__aeabi_ddiv+0x82>
 800095c:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000960:	d10b      	bne.n	800097a <__aeabi_ddiv+0x11e>
 8000962:	ea41 0100 	orr.w	r1, r1, r0
 8000966:	f04f 0000 	mov.w	r0, #0
 800096a:	f04f 4c00 	mov.w	ip, #2147483648	@ 0x80000000
 800096e:	e7b6      	b.n	80008de <__aeabi_ddiv+0x82>
 8000970:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000974:	bf04      	itt	eq
 8000976:	4301      	orreq	r1, r0
 8000978:	2000      	moveq	r0, #0
 800097a:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 800097e:	bf88      	it	hi
 8000980:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 8000984:	f63f aeaf 	bhi.w	80006e6 <__aeabi_dmul+0xde>
 8000988:	ebb5 0c03 	subs.w	ip, r5, r3
 800098c:	bf04      	itt	eq
 800098e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000992:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000996:	f150 0000 	adcs.w	r0, r0, #0
 800099a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800099e:	bd70      	pop	{r4, r5, r6, pc}
 80009a0:	f00e 4e00 	and.w	lr, lr, #2147483648	@ 0x80000000
 80009a4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80009a8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80009ac:	bfc2      	ittt	gt
 80009ae:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009b2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009b6:	bd70      	popgt	{r4, r5, r6, pc}
 80009b8:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80009bc:	f04f 0e00 	mov.w	lr, #0
 80009c0:	3c01      	subs	r4, #1
 80009c2:	e690      	b.n	80006e6 <__aeabi_dmul+0xde>
 80009c4:	ea45 0e06 	orr.w	lr, r5, r6
 80009c8:	e68d      	b.n	80006e6 <__aeabi_dmul+0xde>
 80009ca:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009ce:	ea94 0f0c 	teq	r4, ip
 80009d2:	bf08      	it	eq
 80009d4:	ea95 0f0c 	teqeq	r5, ip
 80009d8:	f43f af3b 	beq.w	8000852 <__aeabi_dmul+0x24a>
 80009dc:	ea94 0f0c 	teq	r4, ip
 80009e0:	d10a      	bne.n	80009f8 <__aeabi_ddiv+0x19c>
 80009e2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80009e6:	f47f af34 	bne.w	8000852 <__aeabi_dmul+0x24a>
 80009ea:	ea95 0f0c 	teq	r5, ip
 80009ee:	f47f af25 	bne.w	800083c <__aeabi_dmul+0x234>
 80009f2:	4610      	mov	r0, r2
 80009f4:	4619      	mov	r1, r3
 80009f6:	e72c      	b.n	8000852 <__aeabi_dmul+0x24a>
 80009f8:	ea95 0f0c 	teq	r5, ip
 80009fc:	d106      	bne.n	8000a0c <__aeabi_ddiv+0x1b0>
 80009fe:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a02:	f43f aefd 	beq.w	8000800 <__aeabi_dmul+0x1f8>
 8000a06:	4610      	mov	r0, r2
 8000a08:	4619      	mov	r1, r3
 8000a0a:	e722      	b.n	8000852 <__aeabi_dmul+0x24a>
 8000a0c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a10:	bf18      	it	ne
 8000a12:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a16:	f47f aec5 	bne.w	80007a4 <__aeabi_dmul+0x19c>
 8000a1a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a1e:	f47f af0d 	bne.w	800083c <__aeabi_dmul+0x234>
 8000a22:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a26:	f47f aeeb 	bne.w	8000800 <__aeabi_dmul+0x1f8>
 8000a2a:	e712      	b.n	8000852 <__aeabi_dmul+0x24a>

08000a2c <__gedf2>:
 8000a2c:	f04f 3cff 	mov.w	ip, #4294967295	@ 0xffffffff
 8000a30:	e006      	b.n	8000a40 <__cmpdf2+0x4>
 8000a32:	bf00      	nop

08000a34 <__ledf2>:
 8000a34:	f04f 0c01 	mov.w	ip, #1
 8000a38:	e002      	b.n	8000a40 <__cmpdf2+0x4>
 8000a3a:	bf00      	nop

08000a3c <__cmpdf2>:
 8000a3c:	f04f 0c01 	mov.w	ip, #1
 8000a40:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a44:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a48:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a4c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a50:	bf18      	it	ne
 8000a52:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a56:	d01b      	beq.n	8000a90 <__cmpdf2+0x54>
 8000a58:	b001      	add	sp, #4
 8000a5a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a5e:	bf0c      	ite	eq
 8000a60:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a64:	ea91 0f03 	teqne	r1, r3
 8000a68:	bf02      	ittt	eq
 8000a6a:	ea90 0f02 	teqeq	r0, r2
 8000a6e:	2000      	moveq	r0, #0
 8000a70:	4770      	bxeq	lr
 8000a72:	f110 0f00 	cmn.w	r0, #0
 8000a76:	ea91 0f03 	teq	r1, r3
 8000a7a:	bf58      	it	pl
 8000a7c:	4299      	cmppl	r1, r3
 8000a7e:	bf08      	it	eq
 8000a80:	4290      	cmpeq	r0, r2
 8000a82:	bf2c      	ite	cs
 8000a84:	17d8      	asrcs	r0, r3, #31
 8000a86:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000a8a:	f040 0001 	orr.w	r0, r0, #1
 8000a8e:	4770      	bx	lr
 8000a90:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a94:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a98:	d102      	bne.n	8000aa0 <__cmpdf2+0x64>
 8000a9a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a9e:	d107      	bne.n	8000ab0 <__cmpdf2+0x74>
 8000aa0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000aa4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000aa8:	d1d6      	bne.n	8000a58 <__cmpdf2+0x1c>
 8000aaa:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000aae:	d0d3      	beq.n	8000a58 <__cmpdf2+0x1c>
 8000ab0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000ab4:	4770      	bx	lr
 8000ab6:	bf00      	nop

08000ab8 <__aeabi_cdrcmple>:
 8000ab8:	4684      	mov	ip, r0
 8000aba:	4610      	mov	r0, r2
 8000abc:	4662      	mov	r2, ip
 8000abe:	468c      	mov	ip, r1
 8000ac0:	4619      	mov	r1, r3
 8000ac2:	4663      	mov	r3, ip
 8000ac4:	e000      	b.n	8000ac8 <__aeabi_cdcmpeq>
 8000ac6:	bf00      	nop

08000ac8 <__aeabi_cdcmpeq>:
 8000ac8:	b501      	push	{r0, lr}
 8000aca:	f7ff ffb7 	bl	8000a3c <__cmpdf2>
 8000ace:	2800      	cmp	r0, #0
 8000ad0:	bf48      	it	mi
 8000ad2:	f110 0f00 	cmnmi.w	r0, #0
 8000ad6:	bd01      	pop	{r0, pc}

08000ad8 <__aeabi_dcmpeq>:
 8000ad8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000adc:	f7ff fff4 	bl	8000ac8 <__aeabi_cdcmpeq>
 8000ae0:	bf0c      	ite	eq
 8000ae2:	2001      	moveq	r0, #1
 8000ae4:	2000      	movne	r0, #0
 8000ae6:	f85d fb08 	ldr.w	pc, [sp], #8
 8000aea:	bf00      	nop

08000aec <__aeabi_dcmplt>:
 8000aec:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000af0:	f7ff ffea 	bl	8000ac8 <__aeabi_cdcmpeq>
 8000af4:	bf34      	ite	cc
 8000af6:	2001      	movcc	r0, #1
 8000af8:	2000      	movcs	r0, #0
 8000afa:	f85d fb08 	ldr.w	pc, [sp], #8
 8000afe:	bf00      	nop

08000b00 <__aeabi_dcmple>:
 8000b00:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b04:	f7ff ffe0 	bl	8000ac8 <__aeabi_cdcmpeq>
 8000b08:	bf94      	ite	ls
 8000b0a:	2001      	movls	r0, #1
 8000b0c:	2000      	movhi	r0, #0
 8000b0e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b12:	bf00      	nop

08000b14 <__aeabi_dcmpge>:
 8000b14:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b18:	f7ff ffce 	bl	8000ab8 <__aeabi_cdrcmple>
 8000b1c:	bf94      	ite	ls
 8000b1e:	2001      	movls	r0, #1
 8000b20:	2000      	movhi	r0, #0
 8000b22:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b26:	bf00      	nop

08000b28 <__aeabi_dcmpgt>:
 8000b28:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b2c:	f7ff ffc4 	bl	8000ab8 <__aeabi_cdrcmple>
 8000b30:	bf34      	ite	cc
 8000b32:	2001      	movcc	r0, #1
 8000b34:	2000      	movcs	r0, #0
 8000b36:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b3a:	bf00      	nop

08000b3c <__aeabi_dcmpun>:
 8000b3c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b40:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b44:	d102      	bne.n	8000b4c <__aeabi_dcmpun+0x10>
 8000b46:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b4a:	d10a      	bne.n	8000b62 <__aeabi_dcmpun+0x26>
 8000b4c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b50:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b54:	d102      	bne.n	8000b5c <__aeabi_dcmpun+0x20>
 8000b56:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b5a:	d102      	bne.n	8000b62 <__aeabi_dcmpun+0x26>
 8000b5c:	f04f 0000 	mov.w	r0, #0
 8000b60:	4770      	bx	lr
 8000b62:	f04f 0001 	mov.w	r0, #1
 8000b66:	4770      	bx	lr

08000b68 <__aeabi_d2iz>:
 8000b68:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b6c:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 8000b70:	d215      	bcs.n	8000b9e <__aeabi_d2iz+0x36>
 8000b72:	d511      	bpl.n	8000b98 <__aeabi_d2iz+0x30>
 8000b74:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 8000b78:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000b7c:	d912      	bls.n	8000ba4 <__aeabi_d2iz+0x3c>
 8000b7e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b82:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8000b86:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000b8a:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000b8e:	fa23 f002 	lsr.w	r0, r3, r2
 8000b92:	bf18      	it	ne
 8000b94:	4240      	negne	r0, r0
 8000b96:	4770      	bx	lr
 8000b98:	f04f 0000 	mov.w	r0, #0
 8000b9c:	4770      	bx	lr
 8000b9e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000ba2:	d105      	bne.n	8000bb0 <__aeabi_d2iz+0x48>
 8000ba4:	f011 4000 	ands.w	r0, r1, #2147483648	@ 0x80000000
 8000ba8:	bf08      	it	eq
 8000baa:	f06f 4000 	mvneq.w	r0, #2147483648	@ 0x80000000
 8000bae:	4770      	bx	lr
 8000bb0:	f04f 0000 	mov.w	r0, #0
 8000bb4:	4770      	bx	lr
 8000bb6:	bf00      	nop

08000bb8 <__aeabi_ldivmod>:
 8000bb8:	b97b      	cbnz	r3, 8000bda <__aeabi_ldivmod+0x22>
 8000bba:	b972      	cbnz	r2, 8000bda <__aeabi_ldivmod+0x22>
 8000bbc:	2900      	cmp	r1, #0
 8000bbe:	bfbe      	ittt	lt
 8000bc0:	2000      	movlt	r0, #0
 8000bc2:	f04f 4100 	movlt.w	r1, #2147483648	@ 0x80000000
 8000bc6:	e006      	blt.n	8000bd6 <__aeabi_ldivmod+0x1e>
 8000bc8:	bf08      	it	eq
 8000bca:	2800      	cmpeq	r0, #0
 8000bcc:	bf1c      	itt	ne
 8000bce:	f06f 4100 	mvnne.w	r1, #2147483648	@ 0x80000000
 8000bd2:	f04f 30ff 	movne.w	r0, #4294967295	@ 0xffffffff
 8000bd6:	f000 b9bb 	b.w	8000f50 <__aeabi_idiv0>
 8000bda:	f1ad 0c08 	sub.w	ip, sp, #8
 8000bde:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000be2:	2900      	cmp	r1, #0
 8000be4:	db09      	blt.n	8000bfa <__aeabi_ldivmod+0x42>
 8000be6:	2b00      	cmp	r3, #0
 8000be8:	db1a      	blt.n	8000c20 <__aeabi_ldivmod+0x68>
 8000bea:	f000 f835 	bl	8000c58 <__udivmoddi4>
 8000bee:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000bf2:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000bf6:	b004      	add	sp, #16
 8000bf8:	4770      	bx	lr
 8000bfa:	4240      	negs	r0, r0
 8000bfc:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000c00:	2b00      	cmp	r3, #0
 8000c02:	db1b      	blt.n	8000c3c <__aeabi_ldivmod+0x84>
 8000c04:	f000 f828 	bl	8000c58 <__udivmoddi4>
 8000c08:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000c0c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000c10:	b004      	add	sp, #16
 8000c12:	4240      	negs	r0, r0
 8000c14:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000c18:	4252      	negs	r2, r2
 8000c1a:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000c1e:	4770      	bx	lr
 8000c20:	4252      	negs	r2, r2
 8000c22:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000c26:	f000 f817 	bl	8000c58 <__udivmoddi4>
 8000c2a:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000c2e:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000c32:	b004      	add	sp, #16
 8000c34:	4240      	negs	r0, r0
 8000c36:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000c3a:	4770      	bx	lr
 8000c3c:	4252      	negs	r2, r2
 8000c3e:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000c42:	f000 f809 	bl	8000c58 <__udivmoddi4>
 8000c46:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000c4a:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000c4e:	b004      	add	sp, #16
 8000c50:	4252      	negs	r2, r2
 8000c52:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000c56:	4770      	bx	lr

08000c58 <__udivmoddi4>:
 8000c58:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000c5c:	9d08      	ldr	r5, [sp, #32]
 8000c5e:	468e      	mov	lr, r1
 8000c60:	4604      	mov	r4, r0
 8000c62:	4688      	mov	r8, r1
 8000c64:	2b00      	cmp	r3, #0
 8000c66:	d14a      	bne.n	8000cfe <__udivmoddi4+0xa6>
 8000c68:	428a      	cmp	r2, r1
 8000c6a:	4617      	mov	r7, r2
 8000c6c:	d962      	bls.n	8000d34 <__udivmoddi4+0xdc>
 8000c6e:	fab2 f682 	clz	r6, r2
 8000c72:	b14e      	cbz	r6, 8000c88 <__udivmoddi4+0x30>
 8000c74:	f1c6 0320 	rsb	r3, r6, #32
 8000c78:	fa01 f806 	lsl.w	r8, r1, r6
 8000c7c:	fa20 f303 	lsr.w	r3, r0, r3
 8000c80:	40b7      	lsls	r7, r6
 8000c82:	ea43 0808 	orr.w	r8, r3, r8
 8000c86:	40b4      	lsls	r4, r6
 8000c88:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000c8c:	fa1f fc87 	uxth.w	ip, r7
 8000c90:	fbb8 f1fe 	udiv	r1, r8, lr
 8000c94:	0c23      	lsrs	r3, r4, #16
 8000c96:	fb0e 8811 	mls	r8, lr, r1, r8
 8000c9a:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 8000c9e:	fb01 f20c 	mul.w	r2, r1, ip
 8000ca2:	429a      	cmp	r2, r3
 8000ca4:	d909      	bls.n	8000cba <__udivmoddi4+0x62>
 8000ca6:	18fb      	adds	r3, r7, r3
 8000ca8:	f101 30ff 	add.w	r0, r1, #4294967295	@ 0xffffffff
 8000cac:	f080 80ea 	bcs.w	8000e84 <__udivmoddi4+0x22c>
 8000cb0:	429a      	cmp	r2, r3
 8000cb2:	f240 80e7 	bls.w	8000e84 <__udivmoddi4+0x22c>
 8000cb6:	3902      	subs	r1, #2
 8000cb8:	443b      	add	r3, r7
 8000cba:	1a9a      	subs	r2, r3, r2
 8000cbc:	b2a3      	uxth	r3, r4
 8000cbe:	fbb2 f0fe 	udiv	r0, r2, lr
 8000cc2:	fb0e 2210 	mls	r2, lr, r0, r2
 8000cc6:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8000cca:	fb00 fc0c 	mul.w	ip, r0, ip
 8000cce:	459c      	cmp	ip, r3
 8000cd0:	d909      	bls.n	8000ce6 <__udivmoddi4+0x8e>
 8000cd2:	18fb      	adds	r3, r7, r3
 8000cd4:	f100 32ff 	add.w	r2, r0, #4294967295	@ 0xffffffff
 8000cd8:	f080 80d6 	bcs.w	8000e88 <__udivmoddi4+0x230>
 8000cdc:	459c      	cmp	ip, r3
 8000cde:	f240 80d3 	bls.w	8000e88 <__udivmoddi4+0x230>
 8000ce2:	443b      	add	r3, r7
 8000ce4:	3802      	subs	r0, #2
 8000ce6:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8000cea:	eba3 030c 	sub.w	r3, r3, ip
 8000cee:	2100      	movs	r1, #0
 8000cf0:	b11d      	cbz	r5, 8000cfa <__udivmoddi4+0xa2>
 8000cf2:	40f3      	lsrs	r3, r6
 8000cf4:	2200      	movs	r2, #0
 8000cf6:	e9c5 3200 	strd	r3, r2, [r5]
 8000cfa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000cfe:	428b      	cmp	r3, r1
 8000d00:	d905      	bls.n	8000d0e <__udivmoddi4+0xb6>
 8000d02:	b10d      	cbz	r5, 8000d08 <__udivmoddi4+0xb0>
 8000d04:	e9c5 0100 	strd	r0, r1, [r5]
 8000d08:	2100      	movs	r1, #0
 8000d0a:	4608      	mov	r0, r1
 8000d0c:	e7f5      	b.n	8000cfa <__udivmoddi4+0xa2>
 8000d0e:	fab3 f183 	clz	r1, r3
 8000d12:	2900      	cmp	r1, #0
 8000d14:	d146      	bne.n	8000da4 <__udivmoddi4+0x14c>
 8000d16:	4573      	cmp	r3, lr
 8000d18:	d302      	bcc.n	8000d20 <__udivmoddi4+0xc8>
 8000d1a:	4282      	cmp	r2, r0
 8000d1c:	f200 8105 	bhi.w	8000f2a <__udivmoddi4+0x2d2>
 8000d20:	1a84      	subs	r4, r0, r2
 8000d22:	eb6e 0203 	sbc.w	r2, lr, r3
 8000d26:	2001      	movs	r0, #1
 8000d28:	4690      	mov	r8, r2
 8000d2a:	2d00      	cmp	r5, #0
 8000d2c:	d0e5      	beq.n	8000cfa <__udivmoddi4+0xa2>
 8000d2e:	e9c5 4800 	strd	r4, r8, [r5]
 8000d32:	e7e2      	b.n	8000cfa <__udivmoddi4+0xa2>
 8000d34:	2a00      	cmp	r2, #0
 8000d36:	f000 8090 	beq.w	8000e5a <__udivmoddi4+0x202>
 8000d3a:	fab2 f682 	clz	r6, r2
 8000d3e:	2e00      	cmp	r6, #0
 8000d40:	f040 80a4 	bne.w	8000e8c <__udivmoddi4+0x234>
 8000d44:	1a8a      	subs	r2, r1, r2
 8000d46:	0c03      	lsrs	r3, r0, #16
 8000d48:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000d4c:	b280      	uxth	r0, r0
 8000d4e:	b2bc      	uxth	r4, r7
 8000d50:	2101      	movs	r1, #1
 8000d52:	fbb2 fcfe 	udiv	ip, r2, lr
 8000d56:	fb0e 221c 	mls	r2, lr, ip, r2
 8000d5a:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8000d5e:	fb04 f20c 	mul.w	r2, r4, ip
 8000d62:	429a      	cmp	r2, r3
 8000d64:	d907      	bls.n	8000d76 <__udivmoddi4+0x11e>
 8000d66:	18fb      	adds	r3, r7, r3
 8000d68:	f10c 38ff 	add.w	r8, ip, #4294967295	@ 0xffffffff
 8000d6c:	d202      	bcs.n	8000d74 <__udivmoddi4+0x11c>
 8000d6e:	429a      	cmp	r2, r3
 8000d70:	f200 80e0 	bhi.w	8000f34 <__udivmoddi4+0x2dc>
 8000d74:	46c4      	mov	ip, r8
 8000d76:	1a9b      	subs	r3, r3, r2
 8000d78:	fbb3 f2fe 	udiv	r2, r3, lr
 8000d7c:	fb0e 3312 	mls	r3, lr, r2, r3
 8000d80:	ea40 4303 	orr.w	r3, r0, r3, lsl #16
 8000d84:	fb02 f404 	mul.w	r4, r2, r4
 8000d88:	429c      	cmp	r4, r3
 8000d8a:	d907      	bls.n	8000d9c <__udivmoddi4+0x144>
 8000d8c:	18fb      	adds	r3, r7, r3
 8000d8e:	f102 30ff 	add.w	r0, r2, #4294967295	@ 0xffffffff
 8000d92:	d202      	bcs.n	8000d9a <__udivmoddi4+0x142>
 8000d94:	429c      	cmp	r4, r3
 8000d96:	f200 80ca 	bhi.w	8000f2e <__udivmoddi4+0x2d6>
 8000d9a:	4602      	mov	r2, r0
 8000d9c:	1b1b      	subs	r3, r3, r4
 8000d9e:	ea42 400c 	orr.w	r0, r2, ip, lsl #16
 8000da2:	e7a5      	b.n	8000cf0 <__udivmoddi4+0x98>
 8000da4:	f1c1 0620 	rsb	r6, r1, #32
 8000da8:	408b      	lsls	r3, r1
 8000daa:	fa22 f706 	lsr.w	r7, r2, r6
 8000dae:	431f      	orrs	r7, r3
 8000db0:	fa0e f401 	lsl.w	r4, lr, r1
 8000db4:	fa20 f306 	lsr.w	r3, r0, r6
 8000db8:	fa2e fe06 	lsr.w	lr, lr, r6
 8000dbc:	ea4f 4917 	mov.w	r9, r7, lsr #16
 8000dc0:	4323      	orrs	r3, r4
 8000dc2:	fa00 f801 	lsl.w	r8, r0, r1
 8000dc6:	fa1f fc87 	uxth.w	ip, r7
 8000dca:	fbbe f0f9 	udiv	r0, lr, r9
 8000dce:	0c1c      	lsrs	r4, r3, #16
 8000dd0:	fb09 ee10 	mls	lr, r9, r0, lr
 8000dd4:	ea44 440e 	orr.w	r4, r4, lr, lsl #16
 8000dd8:	fb00 fe0c 	mul.w	lr, r0, ip
 8000ddc:	45a6      	cmp	lr, r4
 8000dde:	fa02 f201 	lsl.w	r2, r2, r1
 8000de2:	d909      	bls.n	8000df8 <__udivmoddi4+0x1a0>
 8000de4:	193c      	adds	r4, r7, r4
 8000de6:	f100 3aff 	add.w	sl, r0, #4294967295	@ 0xffffffff
 8000dea:	f080 809c 	bcs.w	8000f26 <__udivmoddi4+0x2ce>
 8000dee:	45a6      	cmp	lr, r4
 8000df0:	f240 8099 	bls.w	8000f26 <__udivmoddi4+0x2ce>
 8000df4:	3802      	subs	r0, #2
 8000df6:	443c      	add	r4, r7
 8000df8:	eba4 040e 	sub.w	r4, r4, lr
 8000dfc:	fa1f fe83 	uxth.w	lr, r3
 8000e00:	fbb4 f3f9 	udiv	r3, r4, r9
 8000e04:	fb09 4413 	mls	r4, r9, r3, r4
 8000e08:	ea4e 4404 	orr.w	r4, lr, r4, lsl #16
 8000e0c:	fb03 fc0c 	mul.w	ip, r3, ip
 8000e10:	45a4      	cmp	ip, r4
 8000e12:	d908      	bls.n	8000e26 <__udivmoddi4+0x1ce>
 8000e14:	193c      	adds	r4, r7, r4
 8000e16:	f103 3eff 	add.w	lr, r3, #4294967295	@ 0xffffffff
 8000e1a:	f080 8082 	bcs.w	8000f22 <__udivmoddi4+0x2ca>
 8000e1e:	45a4      	cmp	ip, r4
 8000e20:	d97f      	bls.n	8000f22 <__udivmoddi4+0x2ca>
 8000e22:	3b02      	subs	r3, #2
 8000e24:	443c      	add	r4, r7
 8000e26:	ea43 4000 	orr.w	r0, r3, r0, lsl #16
 8000e2a:	eba4 040c 	sub.w	r4, r4, ip
 8000e2e:	fba0 ec02 	umull	lr, ip, r0, r2
 8000e32:	4564      	cmp	r4, ip
 8000e34:	4673      	mov	r3, lr
 8000e36:	46e1      	mov	r9, ip
 8000e38:	d362      	bcc.n	8000f00 <__udivmoddi4+0x2a8>
 8000e3a:	d05f      	beq.n	8000efc <__udivmoddi4+0x2a4>
 8000e3c:	b15d      	cbz	r5, 8000e56 <__udivmoddi4+0x1fe>
 8000e3e:	ebb8 0203 	subs.w	r2, r8, r3
 8000e42:	eb64 0409 	sbc.w	r4, r4, r9
 8000e46:	fa04 f606 	lsl.w	r6, r4, r6
 8000e4a:	fa22 f301 	lsr.w	r3, r2, r1
 8000e4e:	431e      	orrs	r6, r3
 8000e50:	40cc      	lsrs	r4, r1
 8000e52:	e9c5 6400 	strd	r6, r4, [r5]
 8000e56:	2100      	movs	r1, #0
 8000e58:	e74f      	b.n	8000cfa <__udivmoddi4+0xa2>
 8000e5a:	fbb1 fcf2 	udiv	ip, r1, r2
 8000e5e:	0c01      	lsrs	r1, r0, #16
 8000e60:	ea41 410e 	orr.w	r1, r1, lr, lsl #16
 8000e64:	b280      	uxth	r0, r0
 8000e66:	ea40 4201 	orr.w	r2, r0, r1, lsl #16
 8000e6a:	463b      	mov	r3, r7
 8000e6c:	4638      	mov	r0, r7
 8000e6e:	463c      	mov	r4, r7
 8000e70:	46b8      	mov	r8, r7
 8000e72:	46be      	mov	lr, r7
 8000e74:	2620      	movs	r6, #32
 8000e76:	fbb1 f1f7 	udiv	r1, r1, r7
 8000e7a:	eba2 0208 	sub.w	r2, r2, r8
 8000e7e:	ea41 410c 	orr.w	r1, r1, ip, lsl #16
 8000e82:	e766      	b.n	8000d52 <__udivmoddi4+0xfa>
 8000e84:	4601      	mov	r1, r0
 8000e86:	e718      	b.n	8000cba <__udivmoddi4+0x62>
 8000e88:	4610      	mov	r0, r2
 8000e8a:	e72c      	b.n	8000ce6 <__udivmoddi4+0x8e>
 8000e8c:	f1c6 0220 	rsb	r2, r6, #32
 8000e90:	fa2e f302 	lsr.w	r3, lr, r2
 8000e94:	40b7      	lsls	r7, r6
 8000e96:	40b1      	lsls	r1, r6
 8000e98:	fa20 f202 	lsr.w	r2, r0, r2
 8000e9c:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000ea0:	430a      	orrs	r2, r1
 8000ea2:	fbb3 f8fe 	udiv	r8, r3, lr
 8000ea6:	b2bc      	uxth	r4, r7
 8000ea8:	fb0e 3318 	mls	r3, lr, r8, r3
 8000eac:	0c11      	lsrs	r1, r2, #16
 8000eae:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000eb2:	fb08 f904 	mul.w	r9, r8, r4
 8000eb6:	40b0      	lsls	r0, r6
 8000eb8:	4589      	cmp	r9, r1
 8000eba:	ea4f 4310 	mov.w	r3, r0, lsr #16
 8000ebe:	b280      	uxth	r0, r0
 8000ec0:	d93e      	bls.n	8000f40 <__udivmoddi4+0x2e8>
 8000ec2:	1879      	adds	r1, r7, r1
 8000ec4:	f108 3cff 	add.w	ip, r8, #4294967295	@ 0xffffffff
 8000ec8:	d201      	bcs.n	8000ece <__udivmoddi4+0x276>
 8000eca:	4589      	cmp	r9, r1
 8000ecc:	d81f      	bhi.n	8000f0e <__udivmoddi4+0x2b6>
 8000ece:	eba1 0109 	sub.w	r1, r1, r9
 8000ed2:	fbb1 f9fe 	udiv	r9, r1, lr
 8000ed6:	fb09 f804 	mul.w	r8, r9, r4
 8000eda:	fb0e 1119 	mls	r1, lr, r9, r1
 8000ede:	b292      	uxth	r2, r2
 8000ee0:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000ee4:	4542      	cmp	r2, r8
 8000ee6:	d229      	bcs.n	8000f3c <__udivmoddi4+0x2e4>
 8000ee8:	18ba      	adds	r2, r7, r2
 8000eea:	f109 31ff 	add.w	r1, r9, #4294967295	@ 0xffffffff
 8000eee:	d2c4      	bcs.n	8000e7a <__udivmoddi4+0x222>
 8000ef0:	4542      	cmp	r2, r8
 8000ef2:	d2c2      	bcs.n	8000e7a <__udivmoddi4+0x222>
 8000ef4:	f1a9 0102 	sub.w	r1, r9, #2
 8000ef8:	443a      	add	r2, r7
 8000efa:	e7be      	b.n	8000e7a <__udivmoddi4+0x222>
 8000efc:	45f0      	cmp	r8, lr
 8000efe:	d29d      	bcs.n	8000e3c <__udivmoddi4+0x1e4>
 8000f00:	ebbe 0302 	subs.w	r3, lr, r2
 8000f04:	eb6c 0c07 	sbc.w	ip, ip, r7
 8000f08:	3801      	subs	r0, #1
 8000f0a:	46e1      	mov	r9, ip
 8000f0c:	e796      	b.n	8000e3c <__udivmoddi4+0x1e4>
 8000f0e:	eba7 0909 	sub.w	r9, r7, r9
 8000f12:	4449      	add	r1, r9
 8000f14:	f1a8 0c02 	sub.w	ip, r8, #2
 8000f18:	fbb1 f9fe 	udiv	r9, r1, lr
 8000f1c:	fb09 f804 	mul.w	r8, r9, r4
 8000f20:	e7db      	b.n	8000eda <__udivmoddi4+0x282>
 8000f22:	4673      	mov	r3, lr
 8000f24:	e77f      	b.n	8000e26 <__udivmoddi4+0x1ce>
 8000f26:	4650      	mov	r0, sl
 8000f28:	e766      	b.n	8000df8 <__udivmoddi4+0x1a0>
 8000f2a:	4608      	mov	r0, r1
 8000f2c:	e6fd      	b.n	8000d2a <__udivmoddi4+0xd2>
 8000f2e:	443b      	add	r3, r7
 8000f30:	3a02      	subs	r2, #2
 8000f32:	e733      	b.n	8000d9c <__udivmoddi4+0x144>
 8000f34:	f1ac 0c02 	sub.w	ip, ip, #2
 8000f38:	443b      	add	r3, r7
 8000f3a:	e71c      	b.n	8000d76 <__udivmoddi4+0x11e>
 8000f3c:	4649      	mov	r1, r9
 8000f3e:	e79c      	b.n	8000e7a <__udivmoddi4+0x222>
 8000f40:	eba1 0109 	sub.w	r1, r1, r9
 8000f44:	46c4      	mov	ip, r8
 8000f46:	fbb1 f9fe 	udiv	r9, r1, lr
 8000f4a:	fb09 f804 	mul.w	r8, r9, r4
 8000f4e:	e7c4      	b.n	8000eda <__udivmoddi4+0x282>

08000f50 <__aeabi_idiv0>:
 8000f50:	4770      	bx	lr
 8000f52:	bf00      	nop

08000f54 <ADC_Init_Scan_DMA>:
/**
 * @brief Cấu hình ADC1 để hoạt động ở chế độ Quét, Liên tục, và dùng DMA
 * để đọc 4 kênh PA1, PA5, PA3, PA4.
 */
void ADC_Init_Scan_DMA(void)
{
 8000f54:	b480      	push	{r7}
 8000f56:	b083      	sub	sp, #12
 8000f58:	af00      	add	r7, sp, #0
    // --- 1. Cấu hình GPIO (PA1, PA3, PA4, PA5 -> Analog Mode) ---
    RCC->AHB1ENR |= RCC_AHB1ENR_GPIOAEN;
 8000f5a:	4b5a      	ldr	r3, [pc, #360]	@ (80010c4 <ADC_Init_Scan_DMA+0x170>)
 8000f5c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000f5e:	4a59      	ldr	r2, [pc, #356]	@ (80010c4 <ADC_Init_Scan_DMA+0x170>)
 8000f60:	f043 0301 	orr.w	r3, r3, #1
 8000f64:	6313      	str	r3, [r2, #48]	@ 0x30
    
    // Đặt PA1, PA3, PA4, PA5 vào chế độ Analog (0b11)
    GPIOA->MODER |= (0x03 << (2 * 1)) | // PA1 (Ch.1)
 8000f66:	4b58      	ldr	r3, [pc, #352]	@ (80010c8 <ADC_Init_Scan_DMA+0x174>)
 8000f68:	681b      	ldr	r3, [r3, #0]
 8000f6a:	4a57      	ldr	r2, [pc, #348]	@ (80010c8 <ADC_Init_Scan_DMA+0x174>)
 8000f6c:	f443 637c 	orr.w	r3, r3, #4032	@ 0xfc0
 8000f70:	f043 030c 	orr.w	r3, r3, #12
 8000f74:	6013      	str	r3, [r2, #0]
                    (0x03 << (2 * 5));  // PA5 (Ch.5)


    // --- 2. Cấu hình DMA2 Stream 0 (cho ADC1) ---
    // Bật clock cho DMA2
    RCC->AHB1ENR |= RCC_AHB1ENR_DMA2EN;
 8000f76:	4b53      	ldr	r3, [pc, #332]	@ (80010c4 <ADC_Init_Scan_DMA+0x170>)
 8000f78:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000f7a:	4a52      	ldr	r2, [pc, #328]	@ (80010c4 <ADC_Init_Scan_DMA+0x170>)
 8000f7c:	f443 0380 	orr.w	r3, r3, #4194304	@ 0x400000
 8000f80:	6313      	str	r3, [r2, #48]	@ 0x30
    
    // Tắt Stream 0 trước khi cấu hình
    DMA2_Stream0->CR &= ~DMA_SxCR_EN; 
 8000f82:	4b52      	ldr	r3, [pc, #328]	@ (80010cc <ADC_Init_Scan_DMA+0x178>)
 8000f84:	681b      	ldr	r3, [r3, #0]
 8000f86:	4a51      	ldr	r2, [pc, #324]	@ (80010cc <ADC_Init_Scan_DMA+0x178>)
 8000f88:	f023 0301 	bic.w	r3, r3, #1
 8000f8c:	6013      	str	r3, [r2, #0]
    while ((DMA2_Stream0->CR & DMA_SxCR_EN) != 0); 
 8000f8e:	bf00      	nop
 8000f90:	4b4e      	ldr	r3, [pc, #312]	@ (80010cc <ADC_Init_Scan_DMA+0x178>)
 8000f92:	681b      	ldr	r3, [r3, #0]
 8000f94:	f003 0301 	and.w	r3, r3, #1
 8000f98:	2b00      	cmp	r3, #0
 8000f9a:	d1f9      	bne.n	8000f90 <ADC_Init_Scan_DMA+0x3c>
    
    // Đặt Channel 0 (ADC1)
    DMA2_Stream0->CR &= ~DMA_SxCR_CHSEL; 
 8000f9c:	4b4b      	ldr	r3, [pc, #300]	@ (80010cc <ADC_Init_Scan_DMA+0x178>)
 8000f9e:	681b      	ldr	r3, [r3, #0]
 8000fa0:	4a4a      	ldr	r2, [pc, #296]	@ (80010cc <ADC_Init_Scan_DMA+0x178>)
 8000fa2:	f023 6360 	bic.w	r3, r3, #234881024	@ 0xe000000
 8000fa6:	6013      	str	r3, [r2, #0]

    // Chế độ Vòng tròn (CIRC), P2M, Data size 16-bit, Memory Increment (MINC)
    DMA2_Stream0->CR |= DMA_SxCR_CIRC | DMA_SxCR_PSIZE_0 | 
 8000fa8:	4b48      	ldr	r3, [pc, #288]	@ (80010cc <ADC_Init_Scan_DMA+0x178>)
 8000faa:	681b      	ldr	r3, [r3, #0]
 8000fac:	4a47      	ldr	r2, [pc, #284]	@ (80010cc <ADC_Init_Scan_DMA+0x178>)
 8000fae:	f443 5334 	orr.w	r3, r3, #11520	@ 0x2d00
 8000fb2:	6013      	str	r3, [r2, #0]
                        DMA_SxCR_MSIZE_0 | DMA_SxCR_MINC;
    
    // Số lượng dữ liệu cần truyền (4 kênh)
    DMA2_Stream0->NDTR = ADC_NUM_CHANNELS;
 8000fb4:	4b45      	ldr	r3, [pc, #276]	@ (80010cc <ADC_Init_Scan_DMA+0x178>)
 8000fb6:	2204      	movs	r2, #4
 8000fb8:	605a      	str	r2, [r3, #4]
    
    // Địa chỉ nguồn (Thanh ghi dữ liệu ADC)
    DMA2_Stream0->PAR = (uint32_t)&(ADC1->DR);
 8000fba:	4b44      	ldr	r3, [pc, #272]	@ (80010cc <ADC_Init_Scan_DMA+0x178>)
 8000fbc:	4a44      	ldr	r2, [pc, #272]	@ (80010d0 <ADC_Init_Scan_DMA+0x17c>)
 8000fbe:	609a      	str	r2, [r3, #8]
    
    // Địa chỉ đích (Mảng trong RAM)
    DMA2_Stream0->M0AR = (uint32_t)adc_values;
 8000fc0:	4b42      	ldr	r3, [pc, #264]	@ (80010cc <ADC_Init_Scan_DMA+0x178>)
 8000fc2:	4a44      	ldr	r2, [pc, #272]	@ (80010d4 <ADC_Init_Scan_DMA+0x180>)
 8000fc4:	60da      	str	r2, [r3, #12]
    
    // Kích hoạt DMA Stream
    DMA2_Stream0->CR |= DMA_SxCR_EN;
 8000fc6:	4b41      	ldr	r3, [pc, #260]	@ (80010cc <ADC_Init_Scan_DMA+0x178>)
 8000fc8:	681b      	ldr	r3, [r3, #0]
 8000fca:	4a40      	ldr	r2, [pc, #256]	@ (80010cc <ADC_Init_Scan_DMA+0x178>)
 8000fcc:	f043 0301 	orr.w	r3, r3, #1
 8000fd0:	6013      	str	r3, [r2, #0]


    // --- 3. Cấu hình ADC1 ---
    // Bật clock cho ADC1
    RCC->APB2ENR |= RCC_APB2ENR_ADC1EN;
 8000fd2:	4b3c      	ldr	r3, [pc, #240]	@ (80010c4 <ADC_Init_Scan_DMA+0x170>)
 8000fd4:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8000fd6:	4a3b      	ldr	r2, [pc, #236]	@ (80010c4 <ADC_Init_Scan_DMA+0x170>)
 8000fd8:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8000fdc:	6453      	str	r3, [r2, #68]	@ 0x44
    
    // Cấu hình CR1 & CR2: Kích hoạt SCAN, CONT, DMA, DDS
    ADC1->CR1 |= ADC_CR1_SCAN;          // Scan mode ON
 8000fde:	4b3e      	ldr	r3, [pc, #248]	@ (80010d8 <ADC_Init_Scan_DMA+0x184>)
 8000fe0:	685b      	ldr	r3, [r3, #4]
 8000fe2:	4a3d      	ldr	r2, [pc, #244]	@ (80010d8 <ADC_Init_Scan_DMA+0x184>)
 8000fe4:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8000fe8:	6053      	str	r3, [r2, #4]
    ADC1->CR2 |= ADC_CR2_CONT;          // Continuous mode ON
 8000fea:	4b3b      	ldr	r3, [pc, #236]	@ (80010d8 <ADC_Init_Scan_DMA+0x184>)
 8000fec:	689b      	ldr	r3, [r3, #8]
 8000fee:	4a3a      	ldr	r2, [pc, #232]	@ (80010d8 <ADC_Init_Scan_DMA+0x184>)
 8000ff0:	f043 0302 	orr.w	r3, r3, #2
 8000ff4:	6093      	str	r3, [r2, #8]
    ADC1->CR2 |= ADC_CR2_DMA;           // Enable DMA for ADC
 8000ff6:	4b38      	ldr	r3, [pc, #224]	@ (80010d8 <ADC_Init_Scan_DMA+0x184>)
 8000ff8:	689b      	ldr	r3, [r3, #8]
 8000ffa:	4a37      	ldr	r2, [pc, #220]	@ (80010d8 <ADC_Init_Scan_DMA+0x184>)
 8000ffc:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8001000:	6093      	str	r3, [r2, #8]
    ADC1->CR2 |= ADC_CR2_DDS;           // Continuous DMA requests
 8001002:	4b35      	ldr	r3, [pc, #212]	@ (80010d8 <ADC_Init_Scan_DMA+0x184>)
 8001004:	689b      	ldr	r3, [r3, #8]
 8001006:	4a34      	ldr	r2, [pc, #208]	@ (80010d8 <ADC_Init_Scan_DMA+0x184>)
 8001008:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 800100c:	6093      	str	r3, [r2, #8]
    
    // Thiết lập tổng số chuyển đổi là 4 (L = 3)
    ADC1->SQR1 &= ~ADC_SQR1_L;          
 800100e:	4b32      	ldr	r3, [pc, #200]	@ (80010d8 <ADC_Init_Scan_DMA+0x184>)
 8001010:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8001012:	4a31      	ldr	r2, [pc, #196]	@ (80010d8 <ADC_Init_Scan_DMA+0x184>)
 8001014:	f423 0370 	bic.w	r3, r3, #15728640	@ 0xf00000
 8001018:	62d3      	str	r3, [r2, #44]	@ 0x2c
    ADC1->SQR1 |= ((ADC_NUM_CHANNELS - 1) << 20); 
 800101a:	4b2f      	ldr	r3, [pc, #188]	@ (80010d8 <ADC_Init_Scan_DMA+0x184>)
 800101c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800101e:	4a2e      	ldr	r2, [pc, #184]	@ (80010d8 <ADC_Init_Scan_DMA+0x184>)
 8001020:	f443 1340 	orr.w	r3, r3, #3145728	@ 0x300000
 8001024:	62d3      	str	r3, [r2, #44]	@ 0x2c

    // Đặt thứ tự các kênh trong SQR3
    // Rank 1: Ch.1, Rank 2: Ch.5, Rank 3: Ch.3, Rank 4: Ch.4
    ADC1->SQR3 = 0;
 8001026:	4b2c      	ldr	r3, [pc, #176]	@ (80010d8 <ADC_Init_Scan_DMA+0x184>)
 8001028:	2200      	movs	r2, #0
 800102a:	635a      	str	r2, [r3, #52]	@ 0x34
    ADC1->SQR3 |= (1 << 0);     // SQ1 = Channel 1 (PA1)
 800102c:	4b2a      	ldr	r3, [pc, #168]	@ (80010d8 <ADC_Init_Scan_DMA+0x184>)
 800102e:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8001030:	4a29      	ldr	r2, [pc, #164]	@ (80010d8 <ADC_Init_Scan_DMA+0x184>)
 8001032:	f043 0301 	orr.w	r3, r3, #1
 8001036:	6353      	str	r3, [r2, #52]	@ 0x34
    ADC1->SQR3 |= (5 << 5);     // SQ2 = Channel 5 (PA5)
 8001038:	4b27      	ldr	r3, [pc, #156]	@ (80010d8 <ADC_Init_Scan_DMA+0x184>)
 800103a:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800103c:	4a26      	ldr	r2, [pc, #152]	@ (80010d8 <ADC_Init_Scan_DMA+0x184>)
 800103e:	f043 03a0 	orr.w	r3, r3, #160	@ 0xa0
 8001042:	6353      	str	r3, [r2, #52]	@ 0x34
    ADC1->SQR3 |= (3 << 10);    // SQ3 = Channel 3 (PA3)
 8001044:	4b24      	ldr	r3, [pc, #144]	@ (80010d8 <ADC_Init_Scan_DMA+0x184>)
 8001046:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8001048:	4a23      	ldr	r2, [pc, #140]	@ (80010d8 <ADC_Init_Scan_DMA+0x184>)
 800104a:	f443 6340 	orr.w	r3, r3, #3072	@ 0xc00
 800104e:	6353      	str	r3, [r2, #52]	@ 0x34
    ADC1->SQR3 |= (4 << 15);    // SQ4 = Channel 4 (PA4)
 8001050:	4b21      	ldr	r3, [pc, #132]	@ (80010d8 <ADC_Init_Scan_DMA+0x184>)
 8001052:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8001054:	4a20      	ldr	r2, [pc, #128]	@ (80010d8 <ADC_Init_Scan_DMA+0x184>)
 8001056:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 800105a:	6353      	str	r3, [r2, #52]	@ 0x34

    // Cấu hình thời gian lấy mẫu (Ví dụ: 144 chu kỳ = 0b100)
    uint32_t sampling_time = 0x04; 
 800105c:	2304      	movs	r3, #4
 800105e:	607b      	str	r3, [r7, #4]
    ADC1->SMPR2 = 0;
 8001060:	4b1d      	ldr	r3, [pc, #116]	@ (80010d8 <ADC_Init_Scan_DMA+0x184>)
 8001062:	2200      	movs	r2, #0
 8001064:	611a      	str	r2, [r3, #16]
    ADC1->SMPR2 |= (sampling_time << (3 * 1)); // Ch.1
 8001066:	4b1c      	ldr	r3, [pc, #112]	@ (80010d8 <ADC_Init_Scan_DMA+0x184>)
 8001068:	691a      	ldr	r2, [r3, #16]
 800106a:	687b      	ldr	r3, [r7, #4]
 800106c:	00db      	lsls	r3, r3, #3
 800106e:	491a      	ldr	r1, [pc, #104]	@ (80010d8 <ADC_Init_Scan_DMA+0x184>)
 8001070:	4313      	orrs	r3, r2
 8001072:	610b      	str	r3, [r1, #16]
    ADC1->SMPR2 |= (sampling_time << (3 * 3)); // Ch.3
 8001074:	4b18      	ldr	r3, [pc, #96]	@ (80010d8 <ADC_Init_Scan_DMA+0x184>)
 8001076:	691a      	ldr	r2, [r3, #16]
 8001078:	687b      	ldr	r3, [r7, #4]
 800107a:	025b      	lsls	r3, r3, #9
 800107c:	4916      	ldr	r1, [pc, #88]	@ (80010d8 <ADC_Init_Scan_DMA+0x184>)
 800107e:	4313      	orrs	r3, r2
 8001080:	610b      	str	r3, [r1, #16]
    ADC1->SMPR2 |= (sampling_time << (3 * 4)); // Ch.4
 8001082:	4b15      	ldr	r3, [pc, #84]	@ (80010d8 <ADC_Init_Scan_DMA+0x184>)
 8001084:	691a      	ldr	r2, [r3, #16]
 8001086:	687b      	ldr	r3, [r7, #4]
 8001088:	031b      	lsls	r3, r3, #12
 800108a:	4913      	ldr	r1, [pc, #76]	@ (80010d8 <ADC_Init_Scan_DMA+0x184>)
 800108c:	4313      	orrs	r3, r2
 800108e:	610b      	str	r3, [r1, #16]
    ADC1->SMPR2 |= (sampling_time << (3 * 5)); // Ch.5
 8001090:	4b11      	ldr	r3, [pc, #68]	@ (80010d8 <ADC_Init_Scan_DMA+0x184>)
 8001092:	691a      	ldr	r2, [r3, #16]
 8001094:	687b      	ldr	r3, [r7, #4]
 8001096:	03db      	lsls	r3, r3, #15
 8001098:	490f      	ldr	r1, [pc, #60]	@ (80010d8 <ADC_Init_Scan_DMA+0x184>)
 800109a:	4313      	orrs	r3, r2
 800109c:	610b      	str	r3, [r1, #16]

    // --- 4. Bắt đầu Chuyển đổi ---
    // Bật ADC1 (ADON)
    ADC1->CR2 |= ADC_CR2_ADON;
 800109e:	4b0e      	ldr	r3, [pc, #56]	@ (80010d8 <ADC_Init_Scan_DMA+0x184>)
 80010a0:	689b      	ldr	r3, [r3, #8]
 80010a2:	4a0d      	ldr	r2, [pc, #52]	@ (80010d8 <ADC_Init_Scan_DMA+0x184>)
 80010a4:	f043 0301 	orr.w	r3, r3, #1
 80010a8:	6093      	str	r3, [r2, #8]

    // Bắt đầu chuyển đổi Regular Group (SWSTART)
    ADC1->CR2 |= ADC_CR2_SWSTART;
 80010aa:	4b0b      	ldr	r3, [pc, #44]	@ (80010d8 <ADC_Init_Scan_DMA+0x184>)
 80010ac:	689b      	ldr	r3, [r3, #8]
 80010ae:	4a0a      	ldr	r2, [pc, #40]	@ (80010d8 <ADC_Init_Scan_DMA+0x184>)
 80010b0:	f043 4380 	orr.w	r3, r3, #1073741824	@ 0x40000000
 80010b4:	6093      	str	r3, [r2, #8]
}
 80010b6:	bf00      	nop
 80010b8:	370c      	adds	r7, #12
 80010ba:	46bd      	mov	sp, r7
 80010bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80010c0:	4770      	bx	lr
 80010c2:	bf00      	nop
 80010c4:	40023800 	.word	0x40023800
 80010c8:	40020000 	.word	0x40020000
 80010cc:	40026410 	.word	0x40026410
 80010d0:	4001204c 	.word	0x4001204c
 80010d4:	200001e4 	.word	0x200001e4
 80010d8:	40012000 	.word	0x40012000

080010dc <ADC_GetValue>:
 * @param channel_rank: Vị trí (0-3) trong mảng DMA.
 * 0: Ch.1 (PA1), 1: Ch.5 (PA5), 2: Ch.3 (PA3), 3: Ch.4 (PA4)
 * @return Giá trị ADC 12-bit (0-4095).
 */
uint16_t ADC_GetValue(uint8_t channel_rank)
{
 80010dc:	b480      	push	{r7}
 80010de:	b083      	sub	sp, #12
 80010e0:	af00      	add	r7, sp, #0
 80010e2:	4603      	mov	r3, r0
 80010e4:	71fb      	strb	r3, [r7, #7]
    if (channel_rank < ADC_NUM_CHANNELS)
 80010e6:	79fb      	ldrb	r3, [r7, #7]
 80010e8:	2b03      	cmp	r3, #3
 80010ea:	d805      	bhi.n	80010f8 <ADC_GetValue+0x1c>
    {
        return adc_values[channel_rank];
 80010ec:	79fb      	ldrb	r3, [r7, #7]
 80010ee:	4a06      	ldr	r2, [pc, #24]	@ (8001108 <ADC_GetValue+0x2c>)
 80010f0:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 80010f4:	b29b      	uxth	r3, r3
 80010f6:	e000      	b.n	80010fa <ADC_GetValue+0x1e>
    }
    return 0; // Trả về 0 nếu Rank không hợp lệ
 80010f8:	2300      	movs	r3, #0
 80010fa:	4618      	mov	r0, r3
 80010fc:	370c      	adds	r7, #12
 80010fe:	46bd      	mov	sp, r7
 8001100:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001104:	4770      	bx	lr
 8001106:	bf00      	nop
 8001108:	200001e4 	.word	0x200001e4

0800110c <systick_msec_delay>:
// **********************************************
// Hàm Delay (Phương pháp Blocking Polling)
// **********************************************

void systick_msec_delay(uint32_t delay)
{
 800110c:	b480      	push	{r7}
 800110e:	b085      	sub	sp, #20
 8001110:	af00      	add	r7, sp, #0
 8001112:	6078      	str	r0, [r7, #4]
    // 1. Tải số chu kỳ clock cho 1 mili giây. SysTick sẽ đếm từ giá trị này về 0.
    SysTick->LOAD = ONE_MSEC_LOAD - 1; 
 8001114:	4b14      	ldr	r3, [pc, #80]	@ (8001168 <systick_msec_delay+0x5c>)
 8001116:	f643 627f 	movw	r2, #15999	@ 0x3e7f
 800111a:	605a      	str	r2, [r3, #4]

    // 2. Xóa thanh ghi giá trị hiện tại (Bắt đầu đếm từ đầu)
    SysTick->VAL = 0;
 800111c:	4b12      	ldr	r3, [pc, #72]	@ (8001168 <systick_msec_delay+0x5c>)
 800111e:	2200      	movs	r2, #0
 8001120:	609a      	str	r2, [r3, #8]

    // 3. Chọn nguồn xung clock (sử dụng xung clock nội của hệ thống)
    //    Cũng có thể bao gồm CTRL_INTEN (1U<<1) để bật ngắt, nhưng ở đây chỉ dùng polling
    SysTick->CTRL = CTRL_CLCKSRC;
 8001122:	4b11      	ldr	r3, [pc, #68]	@ (8001168 <systick_msec_delay+0x5c>)
 8001124:	2204      	movs	r2, #4
 8001126:	601a      	str	r2, [r3, #0]

    // 4. Bật SysTick (SysTick bắt đầu đếm ngược)
    SysTick->CTRL |= CTRL_ENABLE;
 8001128:	4b0f      	ldr	r3, [pc, #60]	@ (8001168 <systick_msec_delay+0x5c>)
 800112a:	681b      	ldr	r3, [r3, #0]
 800112c:	4a0e      	ldr	r2, [pc, #56]	@ (8001168 <systick_msec_delay+0x5c>)
 800112e:	f043 0301 	orr.w	r3, r3, #1
 8001132:	6013      	str	r3, [r2, #0]

    // Vòng lặp chính: Chờ đợi số mili giây (delay)
    for(uint32_t i = 0; i < delay; i++)
 8001134:	2300      	movs	r3, #0
 8001136:	60fb      	str	r3, [r7, #12]
 8001138:	e009      	b.n	800114e <systick_msec_delay+0x42>
    {
        // Chờ cho đến khi cờ COUNTFLAG được bật (nghĩa là đếm xong 1ms)
        // Đây là cơ chế Polling (CPU bị chặn)
        while((SysTick->CTRL & CTRL_COUNTFLAG) == 0)
 800113a:	bf00      	nop
 800113c:	4b0a      	ldr	r3, [pc, #40]	@ (8001168 <systick_msec_delay+0x5c>)
 800113e:	681b      	ldr	r3, [r3, #0]
 8001140:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8001144:	2b00      	cmp	r3, #0
 8001146:	d0f9      	beq.n	800113c <systick_msec_delay+0x30>
    for(uint32_t i = 0; i < delay; i++)
 8001148:	68fb      	ldr	r3, [r7, #12]
 800114a:	3301      	adds	r3, #1
 800114c:	60fb      	str	r3, [r7, #12]
 800114e:	68fa      	ldr	r2, [r7, #12]
 8001150:	687b      	ldr	r3, [r7, #4]
 8001152:	429a      	cmp	r2, r3
 8001154:	d3f1      	bcc.n	800113a <systick_msec_delay+0x2e>
            // Do nothing
        }
    }

    // 5. Tắt SysTick khi hoàn thành
    SysTick->CTRL = 0;
 8001156:	4b04      	ldr	r3, [pc, #16]	@ (8001168 <systick_msec_delay+0x5c>)
 8001158:	2200      	movs	r2, #0
 800115a:	601a      	str	r2, [r3, #0]
 800115c:	bf00      	nop
 800115e:	3714      	adds	r7, #20
 8001160:	46bd      	mov	sp, r7
 8001162:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001166:	4770      	bx	lr
 8001168:	e000e010 	.word	0xe000e010

0800116c <compute_uart_bd>:
// **********************************************
// Định nghĩa và Triển khai các Hàm Static
// **********************************************

static uint16_t compute_uart_bd(uint32_t periph_clk, uint32_t baudrate)
{
 800116c:	b480      	push	{r7}
 800116e:	b083      	sub	sp, #12
 8001170:	af00      	add	r7, sp, #0
 8001172:	6078      	str	r0, [r7, #4]
 8001174:	6039      	str	r1, [r7, #0]
    /* Công thức tính USARTDIV cho chế độ Over-sampling by 16, sử dụng kỹ thuật làm tròn (Rounding) */
    return ((periph_clk + (baudrate / 2U)) / baudrate);
 8001176:	683b      	ldr	r3, [r7, #0]
 8001178:	085a      	lsrs	r2, r3, #1
 800117a:	687b      	ldr	r3, [r7, #4]
 800117c:	441a      	add	r2, r3
 800117e:	683b      	ldr	r3, [r7, #0]
 8001180:	fbb2 f3f3 	udiv	r3, r2, r3
 8001184:	b29b      	uxth	r3, r3
}
 8001186:	4618      	mov	r0, r3
 8001188:	370c      	adds	r7, #12
 800118a:	46bd      	mov	sp, r7
 800118c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001190:	4770      	bx	lr
	...

08001194 <uart_set_baudrate>:

static void uart_set_baudrate(uint32_t periph_clk, uint32_t baudrate)
{
 8001194:	b580      	push	{r7, lr}
 8001196:	b082      	sub	sp, #8
 8001198:	af00      	add	r7, sp, #0
 800119a:	6078      	str	r0, [r7, #4]
 800119c:	6039      	str	r1, [r7, #0]
    // Ghi giá trị USARTDIV đã tính toán vào thanh ghi BRR (Baud Rate Register)
    USART2->BRR = compute_uart_bd(periph_clk, baudrate);
 800119e:	6839      	ldr	r1, [r7, #0]
 80011a0:	6878      	ldr	r0, [r7, #4]
 80011a2:	f7ff ffe3 	bl	800116c <compute_uart_bd>
 80011a6:	4603      	mov	r3, r0
 80011a8:	461a      	mov	r2, r3
 80011aa:	4b03      	ldr	r3, [pc, #12]	@ (80011b8 <uart_set_baudrate+0x24>)
 80011ac:	609a      	str	r2, [r3, #8]
}
 80011ae:	bf00      	nop
 80011b0:	3708      	adds	r7, #8
 80011b2:	46bd      	mov	sp, r7
 80011b4:	bd80      	pop	{r7, pc}
 80011b6:	bf00      	nop
 80011b8:	40004400 	.word	0x40004400

080011bc <uart_write>:

static void uart_write(int ch)
{
 80011bc:	b480      	push	{r7}
 80011be:	b083      	sub	sp, #12
 80011c0:	af00      	add	r7, sp, #0
 80011c2:	6078      	str	r0, [r7, #4]
    /* Chờ cho đến khi cờ TXE (Transmit data register Empty) được bật */
    while(!(USART2->SR & SR_TXE)) {}
 80011c4:	bf00      	nop
 80011c6:	4b08      	ldr	r3, [pc, #32]	@ (80011e8 <uart_write+0x2c>)
 80011c8:	681b      	ldr	r3, [r3, #0]
 80011ca:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80011ce:	2b00      	cmp	r3, #0
 80011d0:	d0f9      	beq.n	80011c6 <uart_write+0xa>

    /* Ghi dữ liệu vào thanh ghi DR (Data Register) */
    USART2->DR = (uint8_t)(ch & 0xFF);
 80011d2:	687b      	ldr	r3, [r7, #4]
 80011d4:	b2da      	uxtb	r2, r3
 80011d6:	4b04      	ldr	r3, [pc, #16]	@ (80011e8 <uart_write+0x2c>)
 80011d8:	605a      	str	r2, [r3, #4]
}
 80011da:	bf00      	nop
 80011dc:	370c      	adds	r7, #12
 80011de:	46bd      	mov	sp, r7
 80011e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80011e4:	4770      	bx	lr
 80011e6:	bf00      	nop
 80011e8:	40004400 	.word	0x40004400

080011ec <__io_putchar>:
// **********************************************
// Hàm Retargeting (cho phép dùng printf)
// **********************************************

int __io_putchar(int ch)
{
 80011ec:	b580      	push	{r7, lr}
 80011ee:	b082      	sub	sp, #8
 80011f0:	af00      	add	r7, sp, #0
 80011f2:	6078      	str	r0, [r7, #4]
    uart_write(ch);
 80011f4:	6878      	ldr	r0, [r7, #4]
 80011f6:	f7ff ffe1 	bl	80011bc <uart_write>
    return ch;
 80011fa:	687b      	ldr	r3, [r7, #4]
}
 80011fc:	4618      	mov	r0, r3
 80011fe:	3708      	adds	r7, #8
 8001200:	46bd      	mov	sp, r7
 8001202:	bd80      	pop	{r7, pc}

08001204 <uart_init>:
// **********************************************
// Hàm Khởi tạo UART2
// **********************************************

void uart_init(void)
{
 8001204:	b580      	push	{r7, lr}
 8001206:	af00      	add	r7, sp, #0
    /* 1. Kích hoạt và cấu hình GPIOA pin 2 (TX) */

    // Bật xung clock cho GPIOA (Bus AHB1)
    RCC->AHB1ENR |= GPIOAEN;
 8001208:	4b1f      	ldr	r3, [pc, #124]	@ (8001288 <uart_init+0x84>)
 800120a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800120c:	4a1e      	ldr	r2, [pc, #120]	@ (8001288 <uart_init+0x84>)
 800120e:	f043 0301 	orr.w	r3, r3, #1
 8001212:	6313      	str	r3, [r2, #48]	@ 0x30

    // Đặt chế độ PA2 thành Alternate Function mode (10)
    GPIOA->MODER &= ~(1U<<4);
 8001214:	4b1d      	ldr	r3, [pc, #116]	@ (800128c <uart_init+0x88>)
 8001216:	681b      	ldr	r3, [r3, #0]
 8001218:	4a1c      	ldr	r2, [pc, #112]	@ (800128c <uart_init+0x88>)
 800121a:	f023 0310 	bic.w	r3, r3, #16
 800121e:	6013      	str	r3, [r2, #0]
    GPIOA->MODER |= (1U<<5);
 8001220:	4b1a      	ldr	r3, [pc, #104]	@ (800128c <uart_init+0x88>)
 8001222:	681b      	ldr	r3, [r3, #0]
 8001224:	4a19      	ldr	r2, [pc, #100]	@ (800128c <uart_init+0x88>)
 8001226:	f043 0320 	orr.w	r3, r3, #32
 800122a:	6013      	str	r3, [r2, #0]

    // Đặt kiểu Alternate Function cho PA2 là AF7 (USART2)
    // Pin 2 là AFR2 (bit 8-11)
    // Giá trị 0111 (7)
    GPIOA->AFR[0] |= (1U<<8);
 800122c:	4b17      	ldr	r3, [pc, #92]	@ (800128c <uart_init+0x88>)
 800122e:	6a1b      	ldr	r3, [r3, #32]
 8001230:	4a16      	ldr	r2, [pc, #88]	@ (800128c <uart_init+0x88>)
 8001232:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8001236:	6213      	str	r3, [r2, #32]
    GPIOA->AFR[0] |= (1U<<9);
 8001238:	4b14      	ldr	r3, [pc, #80]	@ (800128c <uart_init+0x88>)
 800123a:	6a1b      	ldr	r3, [r3, #32]
 800123c:	4a13      	ldr	r2, [pc, #76]	@ (800128c <uart_init+0x88>)
 800123e:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8001242:	6213      	str	r3, [r2, #32]
    GPIOA->AFR[0] |= (1U<<10);
 8001244:	4b11      	ldr	r3, [pc, #68]	@ (800128c <uart_init+0x88>)
 8001246:	6a1b      	ldr	r3, [r3, #32]
 8001248:	4a10      	ldr	r2, [pc, #64]	@ (800128c <uart_init+0x88>)
 800124a:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 800124e:	6213      	str	r3, [r2, #32]
    GPIOA->AFR[0] &= ~(1U<<11); // Xóa bit 11 để đảm bảo giá trị là 7
 8001250:	4b0e      	ldr	r3, [pc, #56]	@ (800128c <uart_init+0x88>)
 8001252:	6a1b      	ldr	r3, [r3, #32]
 8001254:	4a0d      	ldr	r2, [pc, #52]	@ (800128c <uart_init+0x88>)
 8001256:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 800125a:	6213      	str	r3, [r2, #32]

    /* 2. Kích hoạt và cấu hình USART2 */

    // Bật xung clock cho USART2 (Bus APB1)
    RCC->APB1ENR |= UART2EN;
 800125c:	4b0a      	ldr	r3, [pc, #40]	@ (8001288 <uart_init+0x84>)
 800125e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001260:	4a09      	ldr	r2, [pc, #36]	@ (8001288 <uart_init+0x84>)
 8001262:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8001266:	6413      	str	r3, [r2, #64]	@ 0x40

    // Cấu hình Baudrate (BRR)
    uart_set_baudrate(APB1_CLK, DBG_UART_BAUDRATE);
 8001268:	f44f 31e1 	mov.w	r1, #115200	@ 0x1c200
 800126c:	4808      	ldr	r0, [pc, #32]	@ (8001290 <uart_init+0x8c>)
 800126e:	f7ff ff91 	bl	8001194 <uart_set_baudrate>

    // Cấu hình hướng truyền: Chỉ bật Transmitter (CR1_TE)
    USART2->CR1 = CR1_TE;
 8001272:	4b08      	ldr	r3, [pc, #32]	@ (8001294 <uart_init+0x90>)
 8001274:	2208      	movs	r2, #8
 8001276:	60da      	str	r2, [r3, #12]

    // Kích hoạt Module UART (CR1_UE)
    USART2->CR1 |= CR1_UE;
 8001278:	4b06      	ldr	r3, [pc, #24]	@ (8001294 <uart_init+0x90>)
 800127a:	68db      	ldr	r3, [r3, #12]
 800127c:	4a05      	ldr	r2, [pc, #20]	@ (8001294 <uart_init+0x90>)
 800127e:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 8001282:	60d3      	str	r3, [r2, #12]
}
 8001284:	bf00      	nop
 8001286:	bd80      	pop	{r7, pc}
 8001288:	40023800 	.word	0x40023800
 800128c:	40020000 	.word	0x40020000
 8001290:	00f42400 	.word	0x00f42400
 8001294:	40004400 	.word	0x40004400

08001298 <raw_to_v_fp>:

// ====================================================================
// HÀM TÍNH TOÁN FIXED-POINT (Giữ nguyên)
// ====================================================================

int32_t raw_to_v_fp(uint16_t adc_raw) {
 8001298:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800129c:	b089      	sub	sp, #36	@ 0x24
 800129e:	af00      	add	r7, sp, #0
 80012a0:	4601      	mov	r1, r0
 80012a2:	82f9      	strh	r1, [r7, #22]
    int64_t numerator = (int64_t)adc_raw * V_REF_VOLTAGE_FIXED;
 80012a4:	8af9      	ldrh	r1, [r7, #22]
 80012a6:	2000      	movs	r0, #0
 80012a8:	4688      	mov	r8, r1
 80012aa:	4681      	mov	r9, r0
 80012ac:	e9c7 8902 	strd	r8, r9, [r7, #8]
 80012b0:	f04f 0000 	mov.w	r0, #0
 80012b4:	f04f 0100 	mov.w	r1, #0
 80012b8:	e9c7 0100 	strd	r0, r1, [r7]
 80012bc:	68f9      	ldr	r1, [r7, #12]
 80012be:	008e      	lsls	r6, r1, #2
 80012c0:	607e      	str	r6, [r7, #4]
 80012c2:	687e      	ldr	r6, [r7, #4]
 80012c4:	68b9      	ldr	r1, [r7, #8]
 80012c6:	ea46 7691 	orr.w	r6, r6, r1, lsr #30
 80012ca:	607e      	str	r6, [r7, #4]
 80012cc:	68b9      	ldr	r1, [r7, #8]
 80012ce:	0089      	lsls	r1, r1, #2
 80012d0:	6039      	str	r1, [r7, #0]
 80012d2:	e9d7 0100 	ldrd	r0, r1, [r7]
 80012d6:	e9c7 0102 	strd	r0, r1, [r7, #8]
 80012da:	4601      	mov	r1, r0
 80012dc:	eb11 0408 	adds.w	r4, r1, r8
 80012e0:	68f9      	ldr	r1, [r7, #12]
 80012e2:	eb41 0509 	adc.w	r5, r1, r9
 80012e6:	f04f 0000 	mov.w	r0, #0
 80012ea:	f04f 0100 	mov.w	r1, #0
 80012ee:	00e9      	lsls	r1, r5, #3
 80012f0:	ea41 7154 	orr.w	r1, r1, r4, lsr #29
 80012f4:	00e0      	lsls	r0, r4, #3
 80012f6:	4604      	mov	r4, r0
 80012f8:	460d      	mov	r5, r1
 80012fa:	ebb4 0208 	subs.w	r2, r4, r8
 80012fe:	eb65 0309 	sbc.w	r3, r5, r9
 8001302:	f04f 0000 	mov.w	r0, #0
 8001306:	f04f 0100 	mov.w	r1, #0
 800130a:	0119      	lsls	r1, r3, #4
 800130c:	ea41 7112 	orr.w	r1, r1, r2, lsr #28
 8001310:	0110      	lsls	r0, r2, #4
 8001312:	4602      	mov	r2, r0
 8001314:	460b      	mov	r3, r1
 8001316:	eb12 0a08 	adds.w	sl, r2, r8
 800131a:	eb43 0b09 	adc.w	fp, r3, r9
 800131e:	f04f 0200 	mov.w	r2, #0
 8001322:	f04f 0300 	mov.w	r3, #0
 8001326:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 800132a:	ea43 735a 	orr.w	r3, r3, sl, lsr #29
 800132e:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 8001332:	4692      	mov	sl, r2
 8001334:	469b      	mov	fp, r3
 8001336:	e9c7 ab06 	strd	sl, fp, [r7, #24]
    return (int32_t)(numerator / ADC_MAX_VALUE);
 800133a:	e9d7 0106 	ldrd	r0, r1, [r7, #24]
 800133e:	f640 72ff 	movw	r2, #4095	@ 0xfff
 8001342:	f04f 0300 	mov.w	r3, #0
 8001346:	f7ff fc37 	bl	8000bb8 <__aeabi_ldivmod>
 800134a:	4602      	mov	r2, r0
 800134c:	460b      	mov	r3, r1
 800134e:	4613      	mov	r3, r2
}
 8001350:	4618      	mov	r0, r3
 8001352:	3724      	adds	r7, #36	@ 0x24
 8001354:	46bd      	mov	sp, r7
 8001356:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800135a <calc_temp_fp>:

int32_t calc_temp_fp(uint16_t adc_raw) {
 800135a:	b580      	push	{r7, lr}
 800135c:	b086      	sub	sp, #24
 800135e:	af00      	add	r7, sp, #0
 8001360:	4603      	mov	r3, r0
 8001362:	80fb      	strh	r3, [r7, #6]
    int32_t V_out_V_fp = raw_to_v_fp(adc_raw);
 8001364:	88fb      	ldrh	r3, [r7, #6]
 8001366:	4618      	mov	r0, r3
 8001368:	f7ff ff96 	bl	8001298 <raw_to_v_fp>
 800136c:	6178      	str	r0, [r7, #20]
    
    int32_t T_term_fp = (int32_t)(((int64_t)V_out_V_fp * SCALE_FACTOR) / T_SLOPE_FIXED);
 800136e:	697b      	ldr	r3, [r7, #20]
 8001370:	2264      	movs	r2, #100	@ 0x64
 8001372:	fb02 f303 	mul.w	r3, r2, r3
 8001376:	613b      	str	r3, [r7, #16]

    int32_t temp_fp = T_term_fp + T_OFFSET_FIXED;
 8001378:	693b      	ldr	r3, [r7, #16]
 800137a:	f5a3 4343 	sub.w	r3, r3, #49920	@ 0xc300
 800137e:	3b50      	subs	r3, #80	@ 0x50
 8001380:	60fb      	str	r3, [r7, #12]

    return temp_fp;
 8001382:	68fb      	ldr	r3, [r7, #12]
}
 8001384:	4618      	mov	r0, r3
 8001386:	3718      	adds	r7, #24
 8001388:	46bd      	mov	sp, r7
 800138a:	bd80      	pop	{r7, pc}

0800138c <calc_ph_fp>:

int32_t calc_ph_fp(uint16_t adc_raw) {
 800138c:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8001390:	b08a      	sub	sp, #40	@ 0x28
 8001392:	af00      	add	r7, sp, #0
 8001394:	4603      	mov	r3, r0
 8001396:	81fb      	strh	r3, [r7, #14]
    int32_t V_out_V_fp = raw_to_v_fp(adc_raw);
 8001398:	89fb      	ldrh	r3, [r7, #14]
 800139a:	4618      	mov	r0, r3
 800139c:	f7ff ff7c 	bl	8001298 <raw_to_v_fp>
 80013a0:	6238      	str	r0, [r7, #32]
    int64_t numerator = ((int64_t)V_out_V_fp - (int64_t)PH_7_VOLTAGE_V_FIXED) * SCALE_FACTOR;
 80013a2:	6a3b      	ldr	r3, [r7, #32]
 80013a4:	17da      	asrs	r2, r3, #31
 80013a6:	603b      	str	r3, [r7, #0]
 80013a8:	607a      	str	r2, [r7, #4]
 80013aa:	4b2c      	ldr	r3, [pc, #176]	@ (800145c <calc_ph_fp+0xd0>)
 80013ac:	e9d7 0100 	ldrd	r0, r1, [r7]
 80013b0:	4602      	mov	r2, r0
 80013b2:	eb12 0803 	adds.w	r8, r2, r3
 80013b6:	460b      	mov	r3, r1
 80013b8:	f143 39ff 	adc.w	r9, r3, #4294967295	@ 0xffffffff
 80013bc:	4642      	mov	r2, r8
 80013be:	464b      	mov	r3, r9
 80013c0:	f04f 0000 	mov.w	r0, #0
 80013c4:	f04f 0100 	mov.w	r1, #0
 80013c8:	0159      	lsls	r1, r3, #5
 80013ca:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 80013ce:	0150      	lsls	r0, r2, #5
 80013d0:	4602      	mov	r2, r0
 80013d2:	460b      	mov	r3, r1
 80013d4:	ebb2 0408 	subs.w	r4, r2, r8
 80013d8:	eb63 0509 	sbc.w	r5, r3, r9
 80013dc:	f04f 0200 	mov.w	r2, #0
 80013e0:	f04f 0300 	mov.w	r3, #0
 80013e4:	00ab      	lsls	r3, r5, #2
 80013e6:	ea43 7394 	orr.w	r3, r3, r4, lsr #30
 80013ea:	00a2      	lsls	r2, r4, #2
 80013ec:	4614      	mov	r4, r2
 80013ee:	461d      	mov	r5, r3
 80013f0:	eb14 0a08 	adds.w	sl, r4, r8
 80013f4:	eb45 0b09 	adc.w	fp, r5, r9
 80013f8:	f04f 0200 	mov.w	r2, #0
 80013fc:	f04f 0300 	mov.w	r3, #0
 8001400:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 8001404:	ea43 735a 	orr.w	r3, r3, sl, lsr #29
 8001408:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 800140c:	4692      	mov	sl, r2
 800140e:	469b      	mov	fp, r3
 8001410:	e9c7 ab06 	strd	sl, fp, [r7, #24]
    int32_t delta_ph_fp = (int32_t)(numerator / PH_SLOPE_V_PER_PH_FIXED);
 8001414:	e9d7 0106 	ldrd	r0, r1, [r7, #24]
 8001418:	f06f 023a 	mvn.w	r2, #58	@ 0x3a
 800141c:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 8001420:	f7ff fbca 	bl	8000bb8 <__aeabi_ldivmod>
 8001424:	4602      	mov	r2, r0
 8001426:	460b      	mov	r3, r1
 8001428:	4613      	mov	r3, r2
 800142a:	617b      	str	r3, [r7, #20]
    int32_t ph_fp = (7 * SCALE_FACTOR) + delta_ph_fp;
 800142c:	697b      	ldr	r3, [r7, #20]
 800142e:	f503 53da 	add.w	r3, r3, #6976	@ 0x1b40
 8001432:	3318      	adds	r3, #24
 8001434:	627b      	str	r3, [r7, #36]	@ 0x24
    if (ph_fp < 0) ph_fp = 0;
 8001436:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001438:	2b00      	cmp	r3, #0
 800143a:	da01      	bge.n	8001440 <calc_ph_fp+0xb4>
 800143c:	2300      	movs	r3, #0
 800143e:	627b      	str	r3, [r7, #36]	@ 0x24
    if (ph_fp > 14 * SCALE_FACTOR) ph_fp = 14 * SCALE_FACTOR;
 8001440:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001442:	f243 62b0 	movw	r2, #14000	@ 0x36b0
 8001446:	4293      	cmp	r3, r2
 8001448:	dd02      	ble.n	8001450 <calc_ph_fp+0xc4>
 800144a:	f243 63b0 	movw	r3, #14000	@ 0x36b0
 800144e:	627b      	str	r3, [r7, #36]	@ 0x24

    return ph_fp;
 8001450:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
}
 8001452:	4618      	mov	r0, r3
 8001454:	3728      	adds	r7, #40	@ 0x28
 8001456:	46bd      	mov	sp, r7
 8001458:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 800145c:	fffff1b1 	.word	0xfffff1b1

08001460 <calc_tds_fp>:

int32_t calc_tds_fp(uint16_t adc_raw) {
 8001460:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8001464:	b08a      	sub	sp, #40	@ 0x28
 8001466:	af00      	add	r7, sp, #0
 8001468:	4603      	mov	r3, r0
 800146a:	82fb      	strh	r3, [r7, #22]
    int32_t V_out_V_fp = raw_to_v_fp(adc_raw);
 800146c:	8afb      	ldrh	r3, [r7, #22]
 800146e:	4618      	mov	r0, r3
 8001470:	f7ff ff12 	bl	8001298 <raw_to_v_fp>
 8001474:	6238      	str	r0, [r7, #32]
    
    int64_t numerator = (int64_t)TDS_SLOPE_FIXED * V_out_V_fp;
 8001476:	6a3b      	ldr	r3, [r7, #32]
 8001478:	17da      	asrs	r2, r3, #31
 800147a:	469a      	mov	sl, r3
 800147c:	4693      	mov	fp, r2
 800147e:	4652      	mov	r2, sl
 8001480:	465b      	mov	r3, fp
 8001482:	f04f 0000 	mov.w	r0, #0
 8001486:	f04f 0100 	mov.w	r1, #0
 800148a:	0159      	lsls	r1, r3, #5
 800148c:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8001490:	0150      	lsls	r0, r2, #5
 8001492:	4602      	mov	r2, r0
 8001494:	460b      	mov	r3, r1
 8001496:	ebb2 080a 	subs.w	r8, r2, sl
 800149a:	eb63 090b 	sbc.w	r9, r3, fp
 800149e:	f04f 0200 	mov.w	r2, #0
 80014a2:	f04f 0300 	mov.w	r3, #0
 80014a6:	ea4f 13c9 	mov.w	r3, r9, lsl #7
 80014aa:	ea43 6358 	orr.w	r3, r3, r8, lsr #25
 80014ae:	ea4f 12c8 	mov.w	r2, r8, lsl #7
 80014b2:	ebb2 0408 	subs.w	r4, r2, r8
 80014b6:	eb63 0509 	sbc.w	r5, r3, r9
 80014ba:	f04f 0200 	mov.w	r2, #0
 80014be:	f04f 0300 	mov.w	r3, #0
 80014c2:	01eb      	lsls	r3, r5, #7
 80014c4:	ea43 6354 	orr.w	r3, r3, r4, lsr #25
 80014c8:	01e2      	lsls	r2, r4, #7
 80014ca:	1b11      	subs	r1, r2, r4
 80014cc:	60b9      	str	r1, [r7, #8]
 80014ce:	eb63 0305 	sbc.w	r3, r3, r5
 80014d2:	60fb      	str	r3, [r7, #12]
 80014d4:	e9d7 1202 	ldrd	r1, r2, [r7, #8]
 80014d8:	460b      	mov	r3, r1
 80014da:	eb13 030a 	adds.w	r3, r3, sl
 80014de:	603b      	str	r3, [r7, #0]
 80014e0:	4613      	mov	r3, r2
 80014e2:	eb43 030b 	adc.w	r3, r3, fp
 80014e6:	607b      	str	r3, [r7, #4]
 80014e8:	e9d7 3400 	ldrd	r3, r4, [r7]
 80014ec:	e9c7 3406 	strd	r3, r4, [r7, #24]
    int32_t tds_fp = (int32_t)(numerator / SCALE_FACTOR);
 80014f0:	e9d7 0106 	ldrd	r0, r1, [r7, #24]
 80014f4:	f44f 727a 	mov.w	r2, #1000	@ 0x3e8
 80014f8:	f04f 0300 	mov.w	r3, #0
 80014fc:	f7ff fb5c 	bl	8000bb8 <__aeabi_ldivmod>
 8001500:	4602      	mov	r2, r0
 8001502:	460b      	mov	r3, r1
 8001504:	4613      	mov	r3, r2
 8001506:	627b      	str	r3, [r7, #36]	@ 0x24

    if (tds_fp < 0) tds_fp = 0;
 8001508:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800150a:	2b00      	cmp	r3, #0
 800150c:	da01      	bge.n	8001512 <calc_tds_fp+0xb2>
 800150e:	2300      	movs	r3, #0
 8001510:	627b      	str	r3, [r7, #36]	@ 0x24

    return tds_fp;
 8001512:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
}
 8001514:	4618      	mov	r0, r3
 8001516:	3728      	adds	r7, #40	@ 0x28
 8001518:	46bd      	mov	sp, r7
 800151a:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
	...

08001520 <calc_turb_fp>:

int32_t calc_turb_fp(uint16_t adc_raw) {
 8001520:	e92d 43b0 	stmdb	sp!, {r4, r5, r7, r8, r9, lr}
 8001524:	b088      	sub	sp, #32
 8001526:	af00      	add	r7, sp, #0
 8001528:	4603      	mov	r3, r0
 800152a:	80fb      	strh	r3, [r7, #6]
    int32_t V_out_V_fp = raw_to_v_fp(adc_raw);
 800152c:	88fb      	ldrh	r3, [r7, #6]
 800152e:	4618      	mov	r0, r3
 8001530:	f7ff feb2 	bl	8001298 <raw_to_v_fp>
 8001534:	61b8      	str	r0, [r7, #24]
    
    int64_t numerator = (int64_t)TURB_SLOPE_FIXED * V_out_V_fp;
 8001536:	69bb      	ldr	r3, [r7, #24]
 8001538:	17da      	asrs	r2, r3, #31
 800153a:	4698      	mov	r8, r3
 800153c:	4691      	mov	r9, r2
 800153e:	4b17      	ldr	r3, [pc, #92]	@ (800159c <calc_turb_fp+0x7c>)
 8001540:	fb03 f209 	mul.w	r2, r3, r9
 8001544:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 8001548:	fb03 f308 	mul.w	r3, r3, r8
 800154c:	4413      	add	r3, r2
 800154e:	4a13      	ldr	r2, [pc, #76]	@ (800159c <calc_turb_fp+0x7c>)
 8001550:	fba8 4502 	umull	r4, r5, r8, r2
 8001554:	442b      	add	r3, r5
 8001556:	461d      	mov	r5, r3
 8001558:	e9c7 4504 	strd	r4, r5, [r7, #16]
 800155c:	e9c7 4504 	strd	r4, r5, [r7, #16]
    int32_t NTU_term_fp = (int32_t)(numerator / SCALE_FACTOR);
 8001560:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 8001564:	f44f 727a 	mov.w	r2, #1000	@ 0x3e8
 8001568:	f04f 0300 	mov.w	r3, #0
 800156c:	f7ff fb24 	bl	8000bb8 <__aeabi_ldivmod>
 8001570:	4602      	mov	r2, r0
 8001572:	460b      	mov	r3, r1
 8001574:	4613      	mov	r3, r2
 8001576:	60fb      	str	r3, [r7, #12]
    
    int32_t turb_fp = NTU_term_fp + TURB_OFFSET_FIXED;
 8001578:	68fb      	ldr	r3, [r7, #12]
 800157a:	f503 1337 	add.w	r3, r3, #2998272	@ 0x2dc000
 800157e:	f503 63d8 	add.w	r3, r3, #1728	@ 0x6c0
 8001582:	61fb      	str	r3, [r7, #28]
    
    if (turb_fp < 0) {
 8001584:	69fb      	ldr	r3, [r7, #28]
 8001586:	2b00      	cmp	r3, #0
 8001588:	da01      	bge.n	800158e <calc_turb_fp+0x6e>
        turb_fp = 0;
 800158a:	2300      	movs	r3, #0
 800158c:	61fb      	str	r3, [r7, #28]
    }
    
    return turb_fp;
 800158e:	69fb      	ldr	r3, [r7, #28]
}
 8001590:	4618      	mov	r0, r3
 8001592:	3720      	adds	r7, #32
 8001594:	46bd      	mov	sp, r7
 8001596:	e8bd 83b0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, pc}
 800159a:	bf00      	nop
 800159c:	fff0bdc0 	.word	0xfff0bdc0

080015a0 <convert_fp_to_struct>:

// ====================================================================
// HÀM CHUYỂN ĐỔI KẾT QUẢ VỀ 1 CHỮ SỐ THẬP PHÂN
// ====================================================================

sensor_value_t convert_fp_to_struct(int32_t fp_value) {
 80015a0:	b480      	push	{r7}
 80015a2:	b089      	sub	sp, #36	@ 0x24
 80015a4:	af00      	add	r7, sp, #0
 80015a6:	6078      	str	r0, [r7, #4]
 80015a8:	6039      	str	r1, [r7, #0]
    sensor_value_t result;
    const int32_t DISPLAY_SCALE = 100; // 1000 / 10 = 100
 80015aa:	2364      	movs	r3, #100	@ 0x64
 80015ac:	61fb      	str	r3, [r7, #28]
    const int32_t TARGET_SCALE = 10;   // Mục tiêu là 1 số thập phân
 80015ae:	230a      	movs	r3, #10
 80015b0:	61bb      	str	r3, [r7, #24]
    int32_t rounded_fp10 = fp_value / DISPLAY_SCALE; 
 80015b2:	683a      	ldr	r2, [r7, #0]
 80015b4:	69fb      	ldr	r3, [r7, #28]
 80015b6:	fb92 f3f3 	sdiv	r3, r2, r3
 80015ba:	617b      	str	r3, [r7, #20]
    result.integer = rounded_fp10 / TARGET_SCALE;
 80015bc:	697a      	ldr	r2, [r7, #20]
 80015be:	69bb      	ldr	r3, [r7, #24]
 80015c0:	fb92 f3f3 	sdiv	r3, r2, r3
 80015c4:	60bb      	str	r3, [r7, #8]
    int32_t abs_rounded_fp10 = (rounded_fp10 < 0) ? -rounded_fp10 : rounded_fp10;
 80015c6:	697b      	ldr	r3, [r7, #20]
 80015c8:	2b00      	cmp	r3, #0
 80015ca:	bfb8      	it	lt
 80015cc:	425b      	neglt	r3, r3
 80015ce:	613b      	str	r3, [r7, #16]
    
    result.decimal = abs_rounded_fp10 % TARGET_SCALE;
 80015d0:	693b      	ldr	r3, [r7, #16]
 80015d2:	69ba      	ldr	r2, [r7, #24]
 80015d4:	fb93 f2f2 	sdiv	r2, r3, r2
 80015d8:	69b9      	ldr	r1, [r7, #24]
 80015da:	fb01 f202 	mul.w	r2, r1, r2
 80015de:	1a9b      	subs	r3, r3, r2
 80015e0:	60fb      	str	r3, [r7, #12]
    
    return result;
 80015e2:	687b      	ldr	r3, [r7, #4]
 80015e4:	461a      	mov	r2, r3
 80015e6:	f107 0308 	add.w	r3, r7, #8
 80015ea:	e893 0003 	ldmia.w	r3, {r0, r1}
 80015ee:	e882 0003 	stmia.w	r2, {r0, r1}
 80015f2:	6878      	ldr	r0, [r7, #4]
 80015f4:	3724      	adds	r7, #36	@ 0x24
 80015f6:	46bd      	mov	sp, r7
 80015f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80015fc:	4770      	bx	lr
	...

08001600 <main>:
volatile uint16_t pa5;

void Send_FixedPoint_JSON_To_ESP32(sensor_value_t temp, sensor_value_t ph, sensor_value_t tds, sensor_value_t turb);

int main(void)
{
 8001600:	b580      	push	{r7, lr}
 8001602:	b090      	sub	sp, #64	@ 0x40
 8001604:	af04      	add	r7, sp, #16

    ADC_Init_Scan_DMA();
 8001606:	f7ff fca5 	bl	8000f54 <ADC_Init_Scan_DMA>
    uart_init();
 800160a:	f7ff fdfb 	bl	8001204 <uart_init>
//    USART3_Init_CMSIS();
    while(1)
    {
        pa1 = ADC_GetValue(0); // Ch.1 (PA1)
 800160e:	2000      	movs	r0, #0
 8001610:	f7ff fd64 	bl	80010dc <ADC_GetValue>
 8001614:	4603      	mov	r3, r0
 8001616:	461a      	mov	r2, r3
 8001618:	4b32      	ldr	r3, [pc, #200]	@ (80016e4 <main+0xe4>)
 800161a:	801a      	strh	r2, [r3, #0]
        pa3 = ADC_GetValue(2); // Ch.3 (PA3)
 800161c:	2002      	movs	r0, #2
 800161e:	f7ff fd5d 	bl	80010dc <ADC_GetValue>
 8001622:	4603      	mov	r3, r0
 8001624:	461a      	mov	r2, r3
 8001626:	4b30      	ldr	r3, [pc, #192]	@ (80016e8 <main+0xe8>)
 8001628:	801a      	strh	r2, [r3, #0]
        pa4 = ADC_GetValue(3); // Ch.4 (PA4)
 800162a:	2003      	movs	r0, #3
 800162c:	f7ff fd56 	bl	80010dc <ADC_GetValue>
 8001630:	4603      	mov	r3, r0
 8001632:	461a      	mov	r2, r3
 8001634:	4b2d      	ldr	r3, [pc, #180]	@ (80016ec <main+0xec>)
 8001636:	801a      	strh	r2, [r3, #0]
        pa5 = ADC_GetValue(1); // Ch.5 (PA5)
 8001638:	2001      	movs	r0, #1
 800163a:	f7ff fd4f 	bl	80010dc <ADC_GetValue>
 800163e:	4603      	mov	r3, r0
 8001640:	461a      	mov	r2, r3
 8001642:	4b2b      	ldr	r3, [pc, #172]	@ (80016f0 <main+0xf0>)
 8001644:	801a      	strh	r2, [r3, #0]
        int32_t temp_fp = calc_temp_fp(pa4);
 8001646:	4b29      	ldr	r3, [pc, #164]	@ (80016ec <main+0xec>)
 8001648:	881b      	ldrh	r3, [r3, #0]
 800164a:	b29b      	uxth	r3, r3
 800164c:	4618      	mov	r0, r3
 800164e:	f7ff fe84 	bl	800135a <calc_temp_fp>
 8001652:	62f8      	str	r0, [r7, #44]	@ 0x2c
        int32_t ph_fp   = calc_ph_fp(pa1);
 8001654:	4b23      	ldr	r3, [pc, #140]	@ (80016e4 <main+0xe4>)
 8001656:	881b      	ldrh	r3, [r3, #0]
 8001658:	b29b      	uxth	r3, r3
 800165a:	4618      	mov	r0, r3
 800165c:	f7ff fe96 	bl	800138c <calc_ph_fp>
 8001660:	62b8      	str	r0, [r7, #40]	@ 0x28
        int32_t tds_fp  = calc_tds_fp(pa5);
 8001662:	4b23      	ldr	r3, [pc, #140]	@ (80016f0 <main+0xf0>)
 8001664:	881b      	ldrh	r3, [r3, #0]
 8001666:	b29b      	uxth	r3, r3
 8001668:	4618      	mov	r0, r3
 800166a:	f7ff fef9 	bl	8001460 <calc_tds_fp>
 800166e:	6278      	str	r0, [r7, #36]	@ 0x24
        int32_t turb_fp = calc_turb_fp(pa3);
 8001670:	4b1d      	ldr	r3, [pc, #116]	@ (80016e8 <main+0xe8>)
 8001672:	881b      	ldrh	r3, [r3, #0]
 8001674:	b29b      	uxth	r3, r3
 8001676:	4618      	mov	r0, r3
 8001678:	f7ff ff52 	bl	8001520 <calc_turb_fp>
 800167c:	6238      	str	r0, [r7, #32]

        sensor_value_t temp_val = convert_fp_to_struct(temp_fp);
 800167e:	f107 0318 	add.w	r3, r7, #24
 8001682:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 8001684:	4618      	mov	r0, r3
 8001686:	f7ff ff8b 	bl	80015a0 <convert_fp_to_struct>
        sensor_value_t ph_val   = convert_fp_to_struct(ph_fp);
 800168a:	f107 0310 	add.w	r3, r7, #16
 800168e:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 8001690:	4618      	mov	r0, r3
 8001692:	f7ff ff85 	bl	80015a0 <convert_fp_to_struct>
        sensor_value_t tds_val  = convert_fp_to_struct(tds_fp);
 8001696:	f107 0308 	add.w	r3, r7, #8
 800169a:	6a79      	ldr	r1, [r7, #36]	@ 0x24
 800169c:	4618      	mov	r0, r3
 800169e:	f7ff ff7f 	bl	80015a0 <convert_fp_to_struct>
        sensor_value_t turb_val = convert_fp_to_struct(turb_fp);
 80016a2:	463b      	mov	r3, r7
 80016a4:	6a39      	ldr	r1, [r7, #32]
 80016a6:	4618      	mov	r0, r3
 80016a8:	f7ff ff7a 	bl	80015a0 <convert_fp_to_struct>

//        printf("Temp: %d.%01d C\r\n", (int)temp_val.integer, (int)temp_val.decimal);
//        printf("pH:   %d.%01d\r\n", (int)ph_val.integer, (int)ph_val.decimal);
//        printf("TDS:  %d.%01d PPM\r\n", (int)tds_val.integer, (int)tds_val.decimal);
//        printf("NTU:  %d.%01d\r\n", (int)turb_val.integer, (int)turb_val.decimal);
        Send_FixedPoint_JSON_To_ESP32(temp_val, ph_val, tds_val, turb_val);
 80016ac:	aa02      	add	r2, sp, #8
 80016ae:	463b      	mov	r3, r7
 80016b0:	e893 0003 	ldmia.w	r3, {r0, r1}
 80016b4:	e882 0003 	stmia.w	r2, {r0, r1}
 80016b8:	466a      	mov	r2, sp
 80016ba:	f107 0308 	add.w	r3, r7, #8
 80016be:	e893 0003 	ldmia.w	r3, {r0, r1}
 80016c2:	e882 0003 	stmia.w	r2, {r0, r1}
 80016c6:	f107 0310 	add.w	r3, r7, #16
 80016ca:	cb0c      	ldmia	r3, {r2, r3}
 80016cc:	f107 0118 	add.w	r1, r7, #24
 80016d0:	c903      	ldmia	r1, {r0, r1}
 80016d2:	f000 f80f 	bl	80016f4 <Send_FixedPoint_JSON_To_ESP32>

        systick_msec_delay(2000);       
 80016d6:	f44f 60fa 	mov.w	r0, #2000	@ 0x7d0
 80016da:	f7ff fd17 	bl	800110c <systick_msec_delay>
    {
 80016de:	bf00      	nop
 80016e0:	e795      	b.n	800160e <main+0xe>
 80016e2:	bf00      	nop
 80016e4:	200001ec 	.word	0x200001ec
 80016e8:	200001f0 	.word	0x200001f0
 80016ec:	200001ee 	.word	0x200001ee
 80016f0:	200001f2 	.word	0x200001f2

080016f4 <Send_FixedPoint_JSON_To_ESP32>:
     }
}
void Send_FixedPoint_JSON_To_ESP32(sensor_value_t temp, sensor_value_t ph, sensor_value_t tds, sensor_value_t turb)
{
 80016f4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80016f6:	b08d      	sub	sp, #52	@ 0x34
 80016f8:	af06      	add	r7, sp, #24
 80016fa:	f107 0410 	add.w	r4, r7, #16
 80016fe:	e884 0003 	stmia.w	r4, {r0, r1}
 8001702:	f107 0108 	add.w	r1, r7, #8
 8001706:	e881 000c 	stmia.w	r1, {r2, r3}
    printf("{\"temp\":%d.%01d,\"ph\":%d.%01d,\"tds\":%d.%01d,\"ntu\":%d.%01d}\r\n",
 800170a:	693d      	ldr	r5, [r7, #16]
 800170c:	697e      	ldr	r6, [r7, #20]
 800170e:	68bb      	ldr	r3, [r7, #8]
 8001710:	607b      	str	r3, [r7, #4]
 8001712:	68fb      	ldr	r3, [r7, #12]
 8001714:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8001716:	6b79      	ldr	r1, [r7, #52]	@ 0x34
 8001718:	6bb8      	ldr	r0, [r7, #56]	@ 0x38
 800171a:	6bfc      	ldr	r4, [r7, #60]	@ 0x3c
 800171c:	9404      	str	r4, [sp, #16]
 800171e:	9003      	str	r0, [sp, #12]
 8001720:	9102      	str	r1, [sp, #8]
 8001722:	9201      	str	r2, [sp, #4]
 8001724:	9300      	str	r3, [sp, #0]
 8001726:	687b      	ldr	r3, [r7, #4]
 8001728:	4632      	mov	r2, r6
 800172a:	4629      	mov	r1, r5
 800172c:	4803      	ldr	r0, [pc, #12]	@ (800173c <Send_FixedPoint_JSON_To_ESP32+0x48>)
 800172e:	f000 fe0d 	bl	800234c <iprintf>
           temp.integer, temp.decimal,
           ph.integer, ph.decimal,
           tds.integer, tds.decimal,
           turb.integer, turb.decimal);
}
 8001732:	bf00      	nop
 8001734:	371c      	adds	r7, #28
 8001736:	46bd      	mov	sp, r7
 8001738:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800173a:	bf00      	nop
 800173c:	08004260 	.word	0x08004260

08001740 <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 8001740:	b480      	push	{r7}
 8001742:	af00      	add	r7, sp, #0
  return 1;
 8001744:	2301      	movs	r3, #1
}
 8001746:	4618      	mov	r0, r3
 8001748:	46bd      	mov	sp, r7
 800174a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800174e:	4770      	bx	lr

08001750 <_kill>:

int _kill(int pid, int sig)
{
 8001750:	b580      	push	{r7, lr}
 8001752:	b082      	sub	sp, #8
 8001754:	af00      	add	r7, sp, #0
 8001756:	6078      	str	r0, [r7, #4]
 8001758:	6039      	str	r1, [r7, #0]
  (void)pid;
  (void)sig;
  errno = EINVAL;
 800175a:	f000 fe9f 	bl	800249c <__errno>
 800175e:	4603      	mov	r3, r0
 8001760:	2216      	movs	r2, #22
 8001762:	601a      	str	r2, [r3, #0]
  return -1;
 8001764:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
}
 8001768:	4618      	mov	r0, r3
 800176a:	3708      	adds	r7, #8
 800176c:	46bd      	mov	sp, r7
 800176e:	bd80      	pop	{r7, pc}

08001770 <_exit>:

void _exit (int status)
{
 8001770:	b580      	push	{r7, lr}
 8001772:	b082      	sub	sp, #8
 8001774:	af00      	add	r7, sp, #0
 8001776:	6078      	str	r0, [r7, #4]
  _kill(status, -1);
 8001778:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
 800177c:	6878      	ldr	r0, [r7, #4]
 800177e:	f7ff ffe7 	bl	8001750 <_kill>
  while (1) {}    /* Make sure we hang here */
 8001782:	bf00      	nop
 8001784:	e7fd      	b.n	8001782 <_exit+0x12>

08001786 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8001786:	b580      	push	{r7, lr}
 8001788:	b086      	sub	sp, #24
 800178a:	af00      	add	r7, sp, #0
 800178c:	60f8      	str	r0, [r7, #12]
 800178e:	60b9      	str	r1, [r7, #8]
 8001790:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001792:	2300      	movs	r3, #0
 8001794:	617b      	str	r3, [r7, #20]
 8001796:	e00a      	b.n	80017ae <_read+0x28>
  {
    *ptr++ = __io_getchar();
 8001798:	f3af 8000 	nop.w
 800179c:	4601      	mov	r1, r0
 800179e:	68bb      	ldr	r3, [r7, #8]
 80017a0:	1c5a      	adds	r2, r3, #1
 80017a2:	60ba      	str	r2, [r7, #8]
 80017a4:	b2ca      	uxtb	r2, r1
 80017a6:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80017a8:	697b      	ldr	r3, [r7, #20]
 80017aa:	3301      	adds	r3, #1
 80017ac:	617b      	str	r3, [r7, #20]
 80017ae:	697a      	ldr	r2, [r7, #20]
 80017b0:	687b      	ldr	r3, [r7, #4]
 80017b2:	429a      	cmp	r2, r3
 80017b4:	dbf0      	blt.n	8001798 <_read+0x12>
  }

  return len;
 80017b6:	687b      	ldr	r3, [r7, #4]
}
 80017b8:	4618      	mov	r0, r3
 80017ba:	3718      	adds	r7, #24
 80017bc:	46bd      	mov	sp, r7
 80017be:	bd80      	pop	{r7, pc}

080017c0 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 80017c0:	b580      	push	{r7, lr}
 80017c2:	b086      	sub	sp, #24
 80017c4:	af00      	add	r7, sp, #0
 80017c6:	60f8      	str	r0, [r7, #12]
 80017c8:	60b9      	str	r1, [r7, #8]
 80017ca:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80017cc:	2300      	movs	r3, #0
 80017ce:	617b      	str	r3, [r7, #20]
 80017d0:	e009      	b.n	80017e6 <_write+0x26>
  {
    __io_putchar(*ptr++);
 80017d2:	68bb      	ldr	r3, [r7, #8]
 80017d4:	1c5a      	adds	r2, r3, #1
 80017d6:	60ba      	str	r2, [r7, #8]
 80017d8:	781b      	ldrb	r3, [r3, #0]
 80017da:	4618      	mov	r0, r3
 80017dc:	f7ff fd06 	bl	80011ec <__io_putchar>
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80017e0:	697b      	ldr	r3, [r7, #20]
 80017e2:	3301      	adds	r3, #1
 80017e4:	617b      	str	r3, [r7, #20]
 80017e6:	697a      	ldr	r2, [r7, #20]
 80017e8:	687b      	ldr	r3, [r7, #4]
 80017ea:	429a      	cmp	r2, r3
 80017ec:	dbf1      	blt.n	80017d2 <_write+0x12>
  }
  return len;
 80017ee:	687b      	ldr	r3, [r7, #4]
}
 80017f0:	4618      	mov	r0, r3
 80017f2:	3718      	adds	r7, #24
 80017f4:	46bd      	mov	sp, r7
 80017f6:	bd80      	pop	{r7, pc}

080017f8 <_close>:

int _close(int file)
{
 80017f8:	b480      	push	{r7}
 80017fa:	b083      	sub	sp, #12
 80017fc:	af00      	add	r7, sp, #0
 80017fe:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 8001800:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
}
 8001804:	4618      	mov	r0, r3
 8001806:	370c      	adds	r7, #12
 8001808:	46bd      	mov	sp, r7
 800180a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800180e:	4770      	bx	lr

08001810 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8001810:	b480      	push	{r7}
 8001812:	b083      	sub	sp, #12
 8001814:	af00      	add	r7, sp, #0
 8001816:	6078      	str	r0, [r7, #4]
 8001818:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 800181a:	683b      	ldr	r3, [r7, #0]
 800181c:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 8001820:	605a      	str	r2, [r3, #4]
  return 0;
 8001822:	2300      	movs	r3, #0
}
 8001824:	4618      	mov	r0, r3
 8001826:	370c      	adds	r7, #12
 8001828:	46bd      	mov	sp, r7
 800182a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800182e:	4770      	bx	lr

08001830 <_isatty>:

int _isatty(int file)
{
 8001830:	b480      	push	{r7}
 8001832:	b083      	sub	sp, #12
 8001834:	af00      	add	r7, sp, #0
 8001836:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 8001838:	2301      	movs	r3, #1
}
 800183a:	4618      	mov	r0, r3
 800183c:	370c      	adds	r7, #12
 800183e:	46bd      	mov	sp, r7
 8001840:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001844:	4770      	bx	lr

08001846 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8001846:	b480      	push	{r7}
 8001848:	b085      	sub	sp, #20
 800184a:	af00      	add	r7, sp, #0
 800184c:	60f8      	str	r0, [r7, #12]
 800184e:	60b9      	str	r1, [r7, #8]
 8001850:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 8001852:	2300      	movs	r3, #0
}
 8001854:	4618      	mov	r0, r3
 8001856:	3714      	adds	r7, #20
 8001858:	46bd      	mov	sp, r7
 800185a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800185e:	4770      	bx	lr

08001860 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8001860:	b580      	push	{r7, lr}
 8001862:	b086      	sub	sp, #24
 8001864:	af00      	add	r7, sp, #0
 8001866:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8001868:	4a14      	ldr	r2, [pc, #80]	@ (80018bc <_sbrk+0x5c>)
 800186a:	4b15      	ldr	r3, [pc, #84]	@ (80018c0 <_sbrk+0x60>)
 800186c:	1ad3      	subs	r3, r2, r3
 800186e:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8001870:	697b      	ldr	r3, [r7, #20]
 8001872:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8001874:	4b13      	ldr	r3, [pc, #76]	@ (80018c4 <_sbrk+0x64>)
 8001876:	681b      	ldr	r3, [r3, #0]
 8001878:	2b00      	cmp	r3, #0
 800187a:	d102      	bne.n	8001882 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 800187c:	4b11      	ldr	r3, [pc, #68]	@ (80018c4 <_sbrk+0x64>)
 800187e:	4a12      	ldr	r2, [pc, #72]	@ (80018c8 <_sbrk+0x68>)
 8001880:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8001882:	4b10      	ldr	r3, [pc, #64]	@ (80018c4 <_sbrk+0x64>)
 8001884:	681a      	ldr	r2, [r3, #0]
 8001886:	687b      	ldr	r3, [r7, #4]
 8001888:	4413      	add	r3, r2
 800188a:	693a      	ldr	r2, [r7, #16]
 800188c:	429a      	cmp	r2, r3
 800188e:	d207      	bcs.n	80018a0 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8001890:	f000 fe04 	bl	800249c <__errno>
 8001894:	4603      	mov	r3, r0
 8001896:	220c      	movs	r2, #12
 8001898:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 800189a:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 800189e:	e009      	b.n	80018b4 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 80018a0:	4b08      	ldr	r3, [pc, #32]	@ (80018c4 <_sbrk+0x64>)
 80018a2:	681b      	ldr	r3, [r3, #0]
 80018a4:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 80018a6:	4b07      	ldr	r3, [pc, #28]	@ (80018c4 <_sbrk+0x64>)
 80018a8:	681a      	ldr	r2, [r3, #0]
 80018aa:	687b      	ldr	r3, [r7, #4]
 80018ac:	4413      	add	r3, r2
 80018ae:	4a05      	ldr	r2, [pc, #20]	@ (80018c4 <_sbrk+0x64>)
 80018b0:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 80018b2:	68fb      	ldr	r3, [r7, #12]
}
 80018b4:	4618      	mov	r0, r3
 80018b6:	3718      	adds	r7, #24
 80018b8:	46bd      	mov	sp, r7
 80018ba:	bd80      	pop	{r7, pc}
 80018bc:	20020000 	.word	0x20020000
 80018c0:	00000400 	.word	0x00000400
 80018c4:	200001f4 	.word	0x200001f4
 80018c8:	20000348 	.word	0x20000348

080018cc <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80018cc:	480d      	ldr	r0, [pc, #52]	@ (8001904 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80018ce:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80018d0:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80018d4:	480c      	ldr	r0, [pc, #48]	@ (8001908 <LoopForever+0x6>)
  ldr r1, =_edata
 80018d6:	490d      	ldr	r1, [pc, #52]	@ (800190c <LoopForever+0xa>)
  ldr r2, =_sidata
 80018d8:	4a0d      	ldr	r2, [pc, #52]	@ (8001910 <LoopForever+0xe>)
  movs r3, #0
 80018da:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80018dc:	e002      	b.n	80018e4 <LoopCopyDataInit>

080018de <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80018de:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80018e0:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80018e2:	3304      	adds	r3, #4

080018e4 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80018e4:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80018e6:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80018e8:	d3f9      	bcc.n	80018de <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80018ea:	4a0a      	ldr	r2, [pc, #40]	@ (8001914 <LoopForever+0x12>)
  ldr r4, =_ebss
 80018ec:	4c0a      	ldr	r4, [pc, #40]	@ (8001918 <LoopForever+0x16>)
  movs r3, #0
 80018ee:	2300      	movs	r3, #0
  b LoopFillZerobss
 80018f0:	e001      	b.n	80018f6 <LoopFillZerobss>

080018f2 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80018f2:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80018f4:	3204      	adds	r2, #4

080018f6 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80018f6:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80018f8:	d3fb      	bcc.n	80018f2 <FillZerobss>


/* Call static constructors */
  bl __libc_init_array
 80018fa:	f000 fdd5 	bl	80024a8 <__libc_init_array>
/* Call the application's entry point.*/

  bl main
 80018fe:	f7ff fe7f 	bl	8001600 <main>

08001902 <LoopForever>:

LoopForever:
  b LoopForever
 8001902:	e7fe      	b.n	8001902 <LoopForever>
  ldr   r0, =_estack
 8001904:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8001908:	20000000 	.word	0x20000000
  ldr r1, =_edata
 800190c:	200001c8 	.word	0x200001c8
  ldr r2, =_sidata
 8001910:	08004624 	.word	0x08004624
  ldr r2, =_sbss
 8001914:	200001c8 	.word	0x200001c8
  ldr r4, =_ebss
 8001918:	20000344 	.word	0x20000344

0800191c <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 800191c:	e7fe      	b.n	800191c <ADC_IRQHandler>

0800191e <__cvt>:
 800191e:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8001922:	ec57 6b10 	vmov	r6, r7, d0
 8001926:	2f00      	cmp	r7, #0
 8001928:	460c      	mov	r4, r1
 800192a:	4619      	mov	r1, r3
 800192c:	463b      	mov	r3, r7
 800192e:	bfbb      	ittet	lt
 8001930:	f107 4300 	addlt.w	r3, r7, #2147483648	@ 0x80000000
 8001934:	461f      	movlt	r7, r3
 8001936:	2300      	movge	r3, #0
 8001938:	232d      	movlt	r3, #45	@ 0x2d
 800193a:	700b      	strb	r3, [r1, #0]
 800193c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800193e:	f8dd a030 	ldr.w	sl, [sp, #48]	@ 0x30
 8001942:	4691      	mov	r9, r2
 8001944:	f023 0820 	bic.w	r8, r3, #32
 8001948:	bfbc      	itt	lt
 800194a:	4632      	movlt	r2, r6
 800194c:	4616      	movlt	r6, r2
 800194e:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 8001952:	d005      	beq.n	8001960 <__cvt+0x42>
 8001954:	f1b8 0f45 	cmp.w	r8, #69	@ 0x45
 8001958:	d100      	bne.n	800195c <__cvt+0x3e>
 800195a:	3401      	adds	r4, #1
 800195c:	2102      	movs	r1, #2
 800195e:	e000      	b.n	8001962 <__cvt+0x44>
 8001960:	2103      	movs	r1, #3
 8001962:	ab03      	add	r3, sp, #12
 8001964:	9301      	str	r3, [sp, #4]
 8001966:	ab02      	add	r3, sp, #8
 8001968:	9300      	str	r3, [sp, #0]
 800196a:	ec47 6b10 	vmov	d0, r6, r7
 800196e:	4653      	mov	r3, sl
 8001970:	4622      	mov	r2, r4
 8001972:	f000 fe49 	bl	8002608 <_dtoa_r>
 8001976:	f1b8 0f47 	cmp.w	r8, #71	@ 0x47
 800197a:	4605      	mov	r5, r0
 800197c:	d119      	bne.n	80019b2 <__cvt+0x94>
 800197e:	f019 0f01 	tst.w	r9, #1
 8001982:	d00e      	beq.n	80019a2 <__cvt+0x84>
 8001984:	eb00 0904 	add.w	r9, r0, r4
 8001988:	2200      	movs	r2, #0
 800198a:	2300      	movs	r3, #0
 800198c:	4630      	mov	r0, r6
 800198e:	4639      	mov	r1, r7
 8001990:	f7ff f8a2 	bl	8000ad8 <__aeabi_dcmpeq>
 8001994:	b108      	cbz	r0, 800199a <__cvt+0x7c>
 8001996:	f8cd 900c 	str.w	r9, [sp, #12]
 800199a:	2230      	movs	r2, #48	@ 0x30
 800199c:	9b03      	ldr	r3, [sp, #12]
 800199e:	454b      	cmp	r3, r9
 80019a0:	d31e      	bcc.n	80019e0 <__cvt+0xc2>
 80019a2:	9b03      	ldr	r3, [sp, #12]
 80019a4:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 80019a6:	1b5b      	subs	r3, r3, r5
 80019a8:	4628      	mov	r0, r5
 80019aa:	6013      	str	r3, [r2, #0]
 80019ac:	b004      	add	sp, #16
 80019ae:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80019b2:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 80019b6:	eb00 0904 	add.w	r9, r0, r4
 80019ba:	d1e5      	bne.n	8001988 <__cvt+0x6a>
 80019bc:	7803      	ldrb	r3, [r0, #0]
 80019be:	2b30      	cmp	r3, #48	@ 0x30
 80019c0:	d10a      	bne.n	80019d8 <__cvt+0xba>
 80019c2:	2200      	movs	r2, #0
 80019c4:	2300      	movs	r3, #0
 80019c6:	4630      	mov	r0, r6
 80019c8:	4639      	mov	r1, r7
 80019ca:	f7ff f885 	bl	8000ad8 <__aeabi_dcmpeq>
 80019ce:	b918      	cbnz	r0, 80019d8 <__cvt+0xba>
 80019d0:	f1c4 0401 	rsb	r4, r4, #1
 80019d4:	f8ca 4000 	str.w	r4, [sl]
 80019d8:	f8da 3000 	ldr.w	r3, [sl]
 80019dc:	4499      	add	r9, r3
 80019de:	e7d3      	b.n	8001988 <__cvt+0x6a>
 80019e0:	1c59      	adds	r1, r3, #1
 80019e2:	9103      	str	r1, [sp, #12]
 80019e4:	701a      	strb	r2, [r3, #0]
 80019e6:	e7d9      	b.n	800199c <__cvt+0x7e>

080019e8 <__exponent>:
 80019e8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80019ea:	2900      	cmp	r1, #0
 80019ec:	bfba      	itte	lt
 80019ee:	4249      	neglt	r1, r1
 80019f0:	232d      	movlt	r3, #45	@ 0x2d
 80019f2:	232b      	movge	r3, #43	@ 0x2b
 80019f4:	2909      	cmp	r1, #9
 80019f6:	7002      	strb	r2, [r0, #0]
 80019f8:	7043      	strb	r3, [r0, #1]
 80019fa:	dd29      	ble.n	8001a50 <__exponent+0x68>
 80019fc:	f10d 0307 	add.w	r3, sp, #7
 8001a00:	461d      	mov	r5, r3
 8001a02:	270a      	movs	r7, #10
 8001a04:	461a      	mov	r2, r3
 8001a06:	fbb1 f6f7 	udiv	r6, r1, r7
 8001a0a:	fb07 1416 	mls	r4, r7, r6, r1
 8001a0e:	3430      	adds	r4, #48	@ 0x30
 8001a10:	f802 4c01 	strb.w	r4, [r2, #-1]
 8001a14:	460c      	mov	r4, r1
 8001a16:	2c63      	cmp	r4, #99	@ 0x63
 8001a18:	f103 33ff 	add.w	r3, r3, #4294967295	@ 0xffffffff
 8001a1c:	4631      	mov	r1, r6
 8001a1e:	dcf1      	bgt.n	8001a04 <__exponent+0x1c>
 8001a20:	3130      	adds	r1, #48	@ 0x30
 8001a22:	1e94      	subs	r4, r2, #2
 8001a24:	f803 1c01 	strb.w	r1, [r3, #-1]
 8001a28:	1c41      	adds	r1, r0, #1
 8001a2a:	4623      	mov	r3, r4
 8001a2c:	42ab      	cmp	r3, r5
 8001a2e:	d30a      	bcc.n	8001a46 <__exponent+0x5e>
 8001a30:	f10d 0309 	add.w	r3, sp, #9
 8001a34:	1a9b      	subs	r3, r3, r2
 8001a36:	42ac      	cmp	r4, r5
 8001a38:	bf88      	it	hi
 8001a3a:	2300      	movhi	r3, #0
 8001a3c:	3302      	adds	r3, #2
 8001a3e:	4403      	add	r3, r0
 8001a40:	1a18      	subs	r0, r3, r0
 8001a42:	b003      	add	sp, #12
 8001a44:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001a46:	f813 6b01 	ldrb.w	r6, [r3], #1
 8001a4a:	f801 6f01 	strb.w	r6, [r1, #1]!
 8001a4e:	e7ed      	b.n	8001a2c <__exponent+0x44>
 8001a50:	2330      	movs	r3, #48	@ 0x30
 8001a52:	3130      	adds	r1, #48	@ 0x30
 8001a54:	7083      	strb	r3, [r0, #2]
 8001a56:	70c1      	strb	r1, [r0, #3]
 8001a58:	1d03      	adds	r3, r0, #4
 8001a5a:	e7f1      	b.n	8001a40 <__exponent+0x58>

08001a5c <_printf_float>:
 8001a5c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001a60:	b08d      	sub	sp, #52	@ 0x34
 8001a62:	460c      	mov	r4, r1
 8001a64:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 8001a68:	4616      	mov	r6, r2
 8001a6a:	461f      	mov	r7, r3
 8001a6c:	4605      	mov	r5, r0
 8001a6e:	f000 fccb 	bl	8002408 <_localeconv_r>
 8001a72:	6803      	ldr	r3, [r0, #0]
 8001a74:	9304      	str	r3, [sp, #16]
 8001a76:	4618      	mov	r0, r3
 8001a78:	f7fe fc02 	bl	8000280 <strlen>
 8001a7c:	2300      	movs	r3, #0
 8001a7e:	930a      	str	r3, [sp, #40]	@ 0x28
 8001a80:	f8d8 3000 	ldr.w	r3, [r8]
 8001a84:	9005      	str	r0, [sp, #20]
 8001a86:	3307      	adds	r3, #7
 8001a88:	f023 0307 	bic.w	r3, r3, #7
 8001a8c:	f103 0208 	add.w	r2, r3, #8
 8001a90:	f894 a018 	ldrb.w	sl, [r4, #24]
 8001a94:	f8d4 b000 	ldr.w	fp, [r4]
 8001a98:	f8c8 2000 	str.w	r2, [r8]
 8001a9c:	e9d3 8900 	ldrd	r8, r9, [r3]
 8001aa0:	f029 4300 	bic.w	r3, r9, #2147483648	@ 0x80000000
 8001aa4:	9307      	str	r3, [sp, #28]
 8001aa6:	f8cd 8018 	str.w	r8, [sp, #24]
 8001aaa:	e9c4 8912 	strd	r8, r9, [r4, #72]	@ 0x48
 8001aae:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8001ab2:	4b9c      	ldr	r3, [pc, #624]	@ (8001d24 <_printf_float+0x2c8>)
 8001ab4:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 8001ab8:	f7ff f840 	bl	8000b3c <__aeabi_dcmpun>
 8001abc:	bb70      	cbnz	r0, 8001b1c <_printf_float+0xc0>
 8001abe:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8001ac2:	4b98      	ldr	r3, [pc, #608]	@ (8001d24 <_printf_float+0x2c8>)
 8001ac4:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 8001ac8:	f7ff f81a 	bl	8000b00 <__aeabi_dcmple>
 8001acc:	bb30      	cbnz	r0, 8001b1c <_printf_float+0xc0>
 8001ace:	2200      	movs	r2, #0
 8001ad0:	2300      	movs	r3, #0
 8001ad2:	4640      	mov	r0, r8
 8001ad4:	4649      	mov	r1, r9
 8001ad6:	f7ff f809 	bl	8000aec <__aeabi_dcmplt>
 8001ada:	b110      	cbz	r0, 8001ae2 <_printf_float+0x86>
 8001adc:	232d      	movs	r3, #45	@ 0x2d
 8001ade:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8001ae2:	4a91      	ldr	r2, [pc, #580]	@ (8001d28 <_printf_float+0x2cc>)
 8001ae4:	4b91      	ldr	r3, [pc, #580]	@ (8001d2c <_printf_float+0x2d0>)
 8001ae6:	f1ba 0f47 	cmp.w	sl, #71	@ 0x47
 8001aea:	bf8c      	ite	hi
 8001aec:	4690      	movhi	r8, r2
 8001aee:	4698      	movls	r8, r3
 8001af0:	2303      	movs	r3, #3
 8001af2:	6123      	str	r3, [r4, #16]
 8001af4:	f02b 0304 	bic.w	r3, fp, #4
 8001af8:	6023      	str	r3, [r4, #0]
 8001afa:	f04f 0900 	mov.w	r9, #0
 8001afe:	9700      	str	r7, [sp, #0]
 8001b00:	4633      	mov	r3, r6
 8001b02:	aa0b      	add	r2, sp, #44	@ 0x2c
 8001b04:	4621      	mov	r1, r4
 8001b06:	4628      	mov	r0, r5
 8001b08:	f000 f9d2 	bl	8001eb0 <_printf_common>
 8001b0c:	3001      	adds	r0, #1
 8001b0e:	f040 808d 	bne.w	8001c2c <_printf_float+0x1d0>
 8001b12:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8001b16:	b00d      	add	sp, #52	@ 0x34
 8001b18:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8001b1c:	4642      	mov	r2, r8
 8001b1e:	464b      	mov	r3, r9
 8001b20:	4640      	mov	r0, r8
 8001b22:	4649      	mov	r1, r9
 8001b24:	f7ff f80a 	bl	8000b3c <__aeabi_dcmpun>
 8001b28:	b140      	cbz	r0, 8001b3c <_printf_float+0xe0>
 8001b2a:	464b      	mov	r3, r9
 8001b2c:	2b00      	cmp	r3, #0
 8001b2e:	bfbc      	itt	lt
 8001b30:	232d      	movlt	r3, #45	@ 0x2d
 8001b32:	f884 3043 	strblt.w	r3, [r4, #67]	@ 0x43
 8001b36:	4a7e      	ldr	r2, [pc, #504]	@ (8001d30 <_printf_float+0x2d4>)
 8001b38:	4b7e      	ldr	r3, [pc, #504]	@ (8001d34 <_printf_float+0x2d8>)
 8001b3a:	e7d4      	b.n	8001ae6 <_printf_float+0x8a>
 8001b3c:	6863      	ldr	r3, [r4, #4]
 8001b3e:	f00a 02df 	and.w	r2, sl, #223	@ 0xdf
 8001b42:	9206      	str	r2, [sp, #24]
 8001b44:	1c5a      	adds	r2, r3, #1
 8001b46:	d13b      	bne.n	8001bc0 <_printf_float+0x164>
 8001b48:	2306      	movs	r3, #6
 8001b4a:	6063      	str	r3, [r4, #4]
 8001b4c:	f44b 6280 	orr.w	r2, fp, #1024	@ 0x400
 8001b50:	2300      	movs	r3, #0
 8001b52:	6022      	str	r2, [r4, #0]
 8001b54:	9303      	str	r3, [sp, #12]
 8001b56:	ab0a      	add	r3, sp, #40	@ 0x28
 8001b58:	e9cd a301 	strd	sl, r3, [sp, #4]
 8001b5c:	ab09      	add	r3, sp, #36	@ 0x24
 8001b5e:	9300      	str	r3, [sp, #0]
 8001b60:	6861      	ldr	r1, [r4, #4]
 8001b62:	ec49 8b10 	vmov	d0, r8, r9
 8001b66:	f10d 0323 	add.w	r3, sp, #35	@ 0x23
 8001b6a:	4628      	mov	r0, r5
 8001b6c:	f7ff fed7 	bl	800191e <__cvt>
 8001b70:	9b06      	ldr	r3, [sp, #24]
 8001b72:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8001b74:	2b47      	cmp	r3, #71	@ 0x47
 8001b76:	4680      	mov	r8, r0
 8001b78:	d129      	bne.n	8001bce <_printf_float+0x172>
 8001b7a:	1cc8      	adds	r0, r1, #3
 8001b7c:	db02      	blt.n	8001b84 <_printf_float+0x128>
 8001b7e:	6863      	ldr	r3, [r4, #4]
 8001b80:	4299      	cmp	r1, r3
 8001b82:	dd41      	ble.n	8001c08 <_printf_float+0x1ac>
 8001b84:	f1aa 0a02 	sub.w	sl, sl, #2
 8001b88:	fa5f fa8a 	uxtb.w	sl, sl
 8001b8c:	3901      	subs	r1, #1
 8001b8e:	4652      	mov	r2, sl
 8001b90:	f104 0050 	add.w	r0, r4, #80	@ 0x50
 8001b94:	9109      	str	r1, [sp, #36]	@ 0x24
 8001b96:	f7ff ff27 	bl	80019e8 <__exponent>
 8001b9a:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8001b9c:	1813      	adds	r3, r2, r0
 8001b9e:	2a01      	cmp	r2, #1
 8001ba0:	4681      	mov	r9, r0
 8001ba2:	6123      	str	r3, [r4, #16]
 8001ba4:	dc02      	bgt.n	8001bac <_printf_float+0x150>
 8001ba6:	6822      	ldr	r2, [r4, #0]
 8001ba8:	07d2      	lsls	r2, r2, #31
 8001baa:	d501      	bpl.n	8001bb0 <_printf_float+0x154>
 8001bac:	3301      	adds	r3, #1
 8001bae:	6123      	str	r3, [r4, #16]
 8001bb0:	f89d 3023 	ldrb.w	r3, [sp, #35]	@ 0x23
 8001bb4:	2b00      	cmp	r3, #0
 8001bb6:	d0a2      	beq.n	8001afe <_printf_float+0xa2>
 8001bb8:	232d      	movs	r3, #45	@ 0x2d
 8001bba:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8001bbe:	e79e      	b.n	8001afe <_printf_float+0xa2>
 8001bc0:	9a06      	ldr	r2, [sp, #24]
 8001bc2:	2a47      	cmp	r2, #71	@ 0x47
 8001bc4:	d1c2      	bne.n	8001b4c <_printf_float+0xf0>
 8001bc6:	2b00      	cmp	r3, #0
 8001bc8:	d1c0      	bne.n	8001b4c <_printf_float+0xf0>
 8001bca:	2301      	movs	r3, #1
 8001bcc:	e7bd      	b.n	8001b4a <_printf_float+0xee>
 8001bce:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 8001bd2:	d9db      	bls.n	8001b8c <_printf_float+0x130>
 8001bd4:	f1ba 0f66 	cmp.w	sl, #102	@ 0x66
 8001bd8:	d118      	bne.n	8001c0c <_printf_float+0x1b0>
 8001bda:	2900      	cmp	r1, #0
 8001bdc:	6863      	ldr	r3, [r4, #4]
 8001bde:	dd0b      	ble.n	8001bf8 <_printf_float+0x19c>
 8001be0:	6121      	str	r1, [r4, #16]
 8001be2:	b913      	cbnz	r3, 8001bea <_printf_float+0x18e>
 8001be4:	6822      	ldr	r2, [r4, #0]
 8001be6:	07d0      	lsls	r0, r2, #31
 8001be8:	d502      	bpl.n	8001bf0 <_printf_float+0x194>
 8001bea:	3301      	adds	r3, #1
 8001bec:	440b      	add	r3, r1
 8001bee:	6123      	str	r3, [r4, #16]
 8001bf0:	65a1      	str	r1, [r4, #88]	@ 0x58
 8001bf2:	f04f 0900 	mov.w	r9, #0
 8001bf6:	e7db      	b.n	8001bb0 <_printf_float+0x154>
 8001bf8:	b913      	cbnz	r3, 8001c00 <_printf_float+0x1a4>
 8001bfa:	6822      	ldr	r2, [r4, #0]
 8001bfc:	07d2      	lsls	r2, r2, #31
 8001bfe:	d501      	bpl.n	8001c04 <_printf_float+0x1a8>
 8001c00:	3302      	adds	r3, #2
 8001c02:	e7f4      	b.n	8001bee <_printf_float+0x192>
 8001c04:	2301      	movs	r3, #1
 8001c06:	e7f2      	b.n	8001bee <_printf_float+0x192>
 8001c08:	f04f 0a67 	mov.w	sl, #103	@ 0x67
 8001c0c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8001c0e:	4299      	cmp	r1, r3
 8001c10:	db05      	blt.n	8001c1e <_printf_float+0x1c2>
 8001c12:	6823      	ldr	r3, [r4, #0]
 8001c14:	6121      	str	r1, [r4, #16]
 8001c16:	07d8      	lsls	r0, r3, #31
 8001c18:	d5ea      	bpl.n	8001bf0 <_printf_float+0x194>
 8001c1a:	1c4b      	adds	r3, r1, #1
 8001c1c:	e7e7      	b.n	8001bee <_printf_float+0x192>
 8001c1e:	2900      	cmp	r1, #0
 8001c20:	bfd4      	ite	le
 8001c22:	f1c1 0202 	rsble	r2, r1, #2
 8001c26:	2201      	movgt	r2, #1
 8001c28:	4413      	add	r3, r2
 8001c2a:	e7e0      	b.n	8001bee <_printf_float+0x192>
 8001c2c:	6823      	ldr	r3, [r4, #0]
 8001c2e:	055a      	lsls	r2, r3, #21
 8001c30:	d407      	bmi.n	8001c42 <_printf_float+0x1e6>
 8001c32:	6923      	ldr	r3, [r4, #16]
 8001c34:	4642      	mov	r2, r8
 8001c36:	4631      	mov	r1, r6
 8001c38:	4628      	mov	r0, r5
 8001c3a:	47b8      	blx	r7
 8001c3c:	3001      	adds	r0, #1
 8001c3e:	d12b      	bne.n	8001c98 <_printf_float+0x23c>
 8001c40:	e767      	b.n	8001b12 <_printf_float+0xb6>
 8001c42:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 8001c46:	f240 80dd 	bls.w	8001e04 <_printf_float+0x3a8>
 8001c4a:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 8001c4e:	2200      	movs	r2, #0
 8001c50:	2300      	movs	r3, #0
 8001c52:	f7fe ff41 	bl	8000ad8 <__aeabi_dcmpeq>
 8001c56:	2800      	cmp	r0, #0
 8001c58:	d033      	beq.n	8001cc2 <_printf_float+0x266>
 8001c5a:	4a37      	ldr	r2, [pc, #220]	@ (8001d38 <_printf_float+0x2dc>)
 8001c5c:	2301      	movs	r3, #1
 8001c5e:	4631      	mov	r1, r6
 8001c60:	4628      	mov	r0, r5
 8001c62:	47b8      	blx	r7
 8001c64:	3001      	adds	r0, #1
 8001c66:	f43f af54 	beq.w	8001b12 <_printf_float+0xb6>
 8001c6a:	e9dd 3809 	ldrd	r3, r8, [sp, #36]	@ 0x24
 8001c6e:	4543      	cmp	r3, r8
 8001c70:	db02      	blt.n	8001c78 <_printf_float+0x21c>
 8001c72:	6823      	ldr	r3, [r4, #0]
 8001c74:	07d8      	lsls	r0, r3, #31
 8001c76:	d50f      	bpl.n	8001c98 <_printf_float+0x23c>
 8001c78:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8001c7c:	4631      	mov	r1, r6
 8001c7e:	4628      	mov	r0, r5
 8001c80:	47b8      	blx	r7
 8001c82:	3001      	adds	r0, #1
 8001c84:	f43f af45 	beq.w	8001b12 <_printf_float+0xb6>
 8001c88:	f04f 0900 	mov.w	r9, #0
 8001c8c:	f108 38ff 	add.w	r8, r8, #4294967295	@ 0xffffffff
 8001c90:	f104 0a1a 	add.w	sl, r4, #26
 8001c94:	45c8      	cmp	r8, r9
 8001c96:	dc09      	bgt.n	8001cac <_printf_float+0x250>
 8001c98:	6823      	ldr	r3, [r4, #0]
 8001c9a:	079b      	lsls	r3, r3, #30
 8001c9c:	f100 8103 	bmi.w	8001ea6 <_printf_float+0x44a>
 8001ca0:	68e0      	ldr	r0, [r4, #12]
 8001ca2:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8001ca4:	4298      	cmp	r0, r3
 8001ca6:	bfb8      	it	lt
 8001ca8:	4618      	movlt	r0, r3
 8001caa:	e734      	b.n	8001b16 <_printf_float+0xba>
 8001cac:	2301      	movs	r3, #1
 8001cae:	4652      	mov	r2, sl
 8001cb0:	4631      	mov	r1, r6
 8001cb2:	4628      	mov	r0, r5
 8001cb4:	47b8      	blx	r7
 8001cb6:	3001      	adds	r0, #1
 8001cb8:	f43f af2b 	beq.w	8001b12 <_printf_float+0xb6>
 8001cbc:	f109 0901 	add.w	r9, r9, #1
 8001cc0:	e7e8      	b.n	8001c94 <_printf_float+0x238>
 8001cc2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8001cc4:	2b00      	cmp	r3, #0
 8001cc6:	dc39      	bgt.n	8001d3c <_printf_float+0x2e0>
 8001cc8:	4a1b      	ldr	r2, [pc, #108]	@ (8001d38 <_printf_float+0x2dc>)
 8001cca:	2301      	movs	r3, #1
 8001ccc:	4631      	mov	r1, r6
 8001cce:	4628      	mov	r0, r5
 8001cd0:	47b8      	blx	r7
 8001cd2:	3001      	adds	r0, #1
 8001cd4:	f43f af1d 	beq.w	8001b12 <_printf_float+0xb6>
 8001cd8:	e9dd 3909 	ldrd	r3, r9, [sp, #36]	@ 0x24
 8001cdc:	ea59 0303 	orrs.w	r3, r9, r3
 8001ce0:	d102      	bne.n	8001ce8 <_printf_float+0x28c>
 8001ce2:	6823      	ldr	r3, [r4, #0]
 8001ce4:	07d9      	lsls	r1, r3, #31
 8001ce6:	d5d7      	bpl.n	8001c98 <_printf_float+0x23c>
 8001ce8:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8001cec:	4631      	mov	r1, r6
 8001cee:	4628      	mov	r0, r5
 8001cf0:	47b8      	blx	r7
 8001cf2:	3001      	adds	r0, #1
 8001cf4:	f43f af0d 	beq.w	8001b12 <_printf_float+0xb6>
 8001cf8:	f04f 0a00 	mov.w	sl, #0
 8001cfc:	f104 0b1a 	add.w	fp, r4, #26
 8001d00:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8001d02:	425b      	negs	r3, r3
 8001d04:	4553      	cmp	r3, sl
 8001d06:	dc01      	bgt.n	8001d0c <_printf_float+0x2b0>
 8001d08:	464b      	mov	r3, r9
 8001d0a:	e793      	b.n	8001c34 <_printf_float+0x1d8>
 8001d0c:	2301      	movs	r3, #1
 8001d0e:	465a      	mov	r2, fp
 8001d10:	4631      	mov	r1, r6
 8001d12:	4628      	mov	r0, r5
 8001d14:	47b8      	blx	r7
 8001d16:	3001      	adds	r0, #1
 8001d18:	f43f aefb 	beq.w	8001b12 <_printf_float+0xb6>
 8001d1c:	f10a 0a01 	add.w	sl, sl, #1
 8001d20:	e7ee      	b.n	8001d00 <_printf_float+0x2a4>
 8001d22:	bf00      	nop
 8001d24:	7fefffff 	.word	0x7fefffff
 8001d28:	080042a0 	.word	0x080042a0
 8001d2c:	0800429c 	.word	0x0800429c
 8001d30:	080042a8 	.word	0x080042a8
 8001d34:	080042a4 	.word	0x080042a4
 8001d38:	080042ac 	.word	0x080042ac
 8001d3c:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8001d3e:	f8dd a028 	ldr.w	sl, [sp, #40]	@ 0x28
 8001d42:	4553      	cmp	r3, sl
 8001d44:	bfa8      	it	ge
 8001d46:	4653      	movge	r3, sl
 8001d48:	2b00      	cmp	r3, #0
 8001d4a:	4699      	mov	r9, r3
 8001d4c:	dc36      	bgt.n	8001dbc <_printf_float+0x360>
 8001d4e:	f04f 0b00 	mov.w	fp, #0
 8001d52:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8001d56:	f104 021a 	add.w	r2, r4, #26
 8001d5a:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8001d5c:	9306      	str	r3, [sp, #24]
 8001d5e:	eba3 0309 	sub.w	r3, r3, r9
 8001d62:	455b      	cmp	r3, fp
 8001d64:	dc31      	bgt.n	8001dca <_printf_float+0x36e>
 8001d66:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8001d68:	459a      	cmp	sl, r3
 8001d6a:	dc3a      	bgt.n	8001de2 <_printf_float+0x386>
 8001d6c:	6823      	ldr	r3, [r4, #0]
 8001d6e:	07da      	lsls	r2, r3, #31
 8001d70:	d437      	bmi.n	8001de2 <_printf_float+0x386>
 8001d72:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8001d74:	ebaa 0903 	sub.w	r9, sl, r3
 8001d78:	9b06      	ldr	r3, [sp, #24]
 8001d7a:	ebaa 0303 	sub.w	r3, sl, r3
 8001d7e:	4599      	cmp	r9, r3
 8001d80:	bfa8      	it	ge
 8001d82:	4699      	movge	r9, r3
 8001d84:	f1b9 0f00 	cmp.w	r9, #0
 8001d88:	dc33      	bgt.n	8001df2 <_printf_float+0x396>
 8001d8a:	f04f 0800 	mov.w	r8, #0
 8001d8e:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8001d92:	f104 0b1a 	add.w	fp, r4, #26
 8001d96:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8001d98:	ebaa 0303 	sub.w	r3, sl, r3
 8001d9c:	eba3 0309 	sub.w	r3, r3, r9
 8001da0:	4543      	cmp	r3, r8
 8001da2:	f77f af79 	ble.w	8001c98 <_printf_float+0x23c>
 8001da6:	2301      	movs	r3, #1
 8001da8:	465a      	mov	r2, fp
 8001daa:	4631      	mov	r1, r6
 8001dac:	4628      	mov	r0, r5
 8001dae:	47b8      	blx	r7
 8001db0:	3001      	adds	r0, #1
 8001db2:	f43f aeae 	beq.w	8001b12 <_printf_float+0xb6>
 8001db6:	f108 0801 	add.w	r8, r8, #1
 8001dba:	e7ec      	b.n	8001d96 <_printf_float+0x33a>
 8001dbc:	4642      	mov	r2, r8
 8001dbe:	4631      	mov	r1, r6
 8001dc0:	4628      	mov	r0, r5
 8001dc2:	47b8      	blx	r7
 8001dc4:	3001      	adds	r0, #1
 8001dc6:	d1c2      	bne.n	8001d4e <_printf_float+0x2f2>
 8001dc8:	e6a3      	b.n	8001b12 <_printf_float+0xb6>
 8001dca:	2301      	movs	r3, #1
 8001dcc:	4631      	mov	r1, r6
 8001dce:	4628      	mov	r0, r5
 8001dd0:	9206      	str	r2, [sp, #24]
 8001dd2:	47b8      	blx	r7
 8001dd4:	3001      	adds	r0, #1
 8001dd6:	f43f ae9c 	beq.w	8001b12 <_printf_float+0xb6>
 8001dda:	9a06      	ldr	r2, [sp, #24]
 8001ddc:	f10b 0b01 	add.w	fp, fp, #1
 8001de0:	e7bb      	b.n	8001d5a <_printf_float+0x2fe>
 8001de2:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8001de6:	4631      	mov	r1, r6
 8001de8:	4628      	mov	r0, r5
 8001dea:	47b8      	blx	r7
 8001dec:	3001      	adds	r0, #1
 8001dee:	d1c0      	bne.n	8001d72 <_printf_float+0x316>
 8001df0:	e68f      	b.n	8001b12 <_printf_float+0xb6>
 8001df2:	9a06      	ldr	r2, [sp, #24]
 8001df4:	464b      	mov	r3, r9
 8001df6:	4442      	add	r2, r8
 8001df8:	4631      	mov	r1, r6
 8001dfa:	4628      	mov	r0, r5
 8001dfc:	47b8      	blx	r7
 8001dfe:	3001      	adds	r0, #1
 8001e00:	d1c3      	bne.n	8001d8a <_printf_float+0x32e>
 8001e02:	e686      	b.n	8001b12 <_printf_float+0xb6>
 8001e04:	f8dd a028 	ldr.w	sl, [sp, #40]	@ 0x28
 8001e08:	f1ba 0f01 	cmp.w	sl, #1
 8001e0c:	dc01      	bgt.n	8001e12 <_printf_float+0x3b6>
 8001e0e:	07db      	lsls	r3, r3, #31
 8001e10:	d536      	bpl.n	8001e80 <_printf_float+0x424>
 8001e12:	2301      	movs	r3, #1
 8001e14:	4642      	mov	r2, r8
 8001e16:	4631      	mov	r1, r6
 8001e18:	4628      	mov	r0, r5
 8001e1a:	47b8      	blx	r7
 8001e1c:	3001      	adds	r0, #1
 8001e1e:	f43f ae78 	beq.w	8001b12 <_printf_float+0xb6>
 8001e22:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8001e26:	4631      	mov	r1, r6
 8001e28:	4628      	mov	r0, r5
 8001e2a:	47b8      	blx	r7
 8001e2c:	3001      	adds	r0, #1
 8001e2e:	f43f ae70 	beq.w	8001b12 <_printf_float+0xb6>
 8001e32:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 8001e36:	2200      	movs	r2, #0
 8001e38:	2300      	movs	r3, #0
 8001e3a:	f10a 3aff 	add.w	sl, sl, #4294967295	@ 0xffffffff
 8001e3e:	f7fe fe4b 	bl	8000ad8 <__aeabi_dcmpeq>
 8001e42:	b9c0      	cbnz	r0, 8001e76 <_printf_float+0x41a>
 8001e44:	4653      	mov	r3, sl
 8001e46:	f108 0201 	add.w	r2, r8, #1
 8001e4a:	4631      	mov	r1, r6
 8001e4c:	4628      	mov	r0, r5
 8001e4e:	47b8      	blx	r7
 8001e50:	3001      	adds	r0, #1
 8001e52:	d10c      	bne.n	8001e6e <_printf_float+0x412>
 8001e54:	e65d      	b.n	8001b12 <_printf_float+0xb6>
 8001e56:	2301      	movs	r3, #1
 8001e58:	465a      	mov	r2, fp
 8001e5a:	4631      	mov	r1, r6
 8001e5c:	4628      	mov	r0, r5
 8001e5e:	47b8      	blx	r7
 8001e60:	3001      	adds	r0, #1
 8001e62:	f43f ae56 	beq.w	8001b12 <_printf_float+0xb6>
 8001e66:	f108 0801 	add.w	r8, r8, #1
 8001e6a:	45d0      	cmp	r8, sl
 8001e6c:	dbf3      	blt.n	8001e56 <_printf_float+0x3fa>
 8001e6e:	464b      	mov	r3, r9
 8001e70:	f104 0250 	add.w	r2, r4, #80	@ 0x50
 8001e74:	e6df      	b.n	8001c36 <_printf_float+0x1da>
 8001e76:	f04f 0800 	mov.w	r8, #0
 8001e7a:	f104 0b1a 	add.w	fp, r4, #26
 8001e7e:	e7f4      	b.n	8001e6a <_printf_float+0x40e>
 8001e80:	2301      	movs	r3, #1
 8001e82:	4642      	mov	r2, r8
 8001e84:	e7e1      	b.n	8001e4a <_printf_float+0x3ee>
 8001e86:	2301      	movs	r3, #1
 8001e88:	464a      	mov	r2, r9
 8001e8a:	4631      	mov	r1, r6
 8001e8c:	4628      	mov	r0, r5
 8001e8e:	47b8      	blx	r7
 8001e90:	3001      	adds	r0, #1
 8001e92:	f43f ae3e 	beq.w	8001b12 <_printf_float+0xb6>
 8001e96:	f108 0801 	add.w	r8, r8, #1
 8001e9a:	68e3      	ldr	r3, [r4, #12]
 8001e9c:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8001e9e:	1a5b      	subs	r3, r3, r1
 8001ea0:	4543      	cmp	r3, r8
 8001ea2:	dcf0      	bgt.n	8001e86 <_printf_float+0x42a>
 8001ea4:	e6fc      	b.n	8001ca0 <_printf_float+0x244>
 8001ea6:	f04f 0800 	mov.w	r8, #0
 8001eaa:	f104 0919 	add.w	r9, r4, #25
 8001eae:	e7f4      	b.n	8001e9a <_printf_float+0x43e>

08001eb0 <_printf_common>:
 8001eb0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8001eb4:	4616      	mov	r6, r2
 8001eb6:	4698      	mov	r8, r3
 8001eb8:	688a      	ldr	r2, [r1, #8]
 8001eba:	690b      	ldr	r3, [r1, #16]
 8001ebc:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8001ec0:	4293      	cmp	r3, r2
 8001ec2:	bfb8      	it	lt
 8001ec4:	4613      	movlt	r3, r2
 8001ec6:	6033      	str	r3, [r6, #0]
 8001ec8:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8001ecc:	4607      	mov	r7, r0
 8001ece:	460c      	mov	r4, r1
 8001ed0:	b10a      	cbz	r2, 8001ed6 <_printf_common+0x26>
 8001ed2:	3301      	adds	r3, #1
 8001ed4:	6033      	str	r3, [r6, #0]
 8001ed6:	6823      	ldr	r3, [r4, #0]
 8001ed8:	0699      	lsls	r1, r3, #26
 8001eda:	bf42      	ittt	mi
 8001edc:	6833      	ldrmi	r3, [r6, #0]
 8001ede:	3302      	addmi	r3, #2
 8001ee0:	6033      	strmi	r3, [r6, #0]
 8001ee2:	6825      	ldr	r5, [r4, #0]
 8001ee4:	f015 0506 	ands.w	r5, r5, #6
 8001ee8:	d106      	bne.n	8001ef8 <_printf_common+0x48>
 8001eea:	f104 0a19 	add.w	sl, r4, #25
 8001eee:	68e3      	ldr	r3, [r4, #12]
 8001ef0:	6832      	ldr	r2, [r6, #0]
 8001ef2:	1a9b      	subs	r3, r3, r2
 8001ef4:	42ab      	cmp	r3, r5
 8001ef6:	dc26      	bgt.n	8001f46 <_printf_common+0x96>
 8001ef8:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8001efc:	6822      	ldr	r2, [r4, #0]
 8001efe:	3b00      	subs	r3, #0
 8001f00:	bf18      	it	ne
 8001f02:	2301      	movne	r3, #1
 8001f04:	0692      	lsls	r2, r2, #26
 8001f06:	d42b      	bmi.n	8001f60 <_printf_common+0xb0>
 8001f08:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8001f0c:	4641      	mov	r1, r8
 8001f0e:	4638      	mov	r0, r7
 8001f10:	47c8      	blx	r9
 8001f12:	3001      	adds	r0, #1
 8001f14:	d01e      	beq.n	8001f54 <_printf_common+0xa4>
 8001f16:	6823      	ldr	r3, [r4, #0]
 8001f18:	6922      	ldr	r2, [r4, #16]
 8001f1a:	f003 0306 	and.w	r3, r3, #6
 8001f1e:	2b04      	cmp	r3, #4
 8001f20:	bf02      	ittt	eq
 8001f22:	68e5      	ldreq	r5, [r4, #12]
 8001f24:	6833      	ldreq	r3, [r6, #0]
 8001f26:	1aed      	subeq	r5, r5, r3
 8001f28:	68a3      	ldr	r3, [r4, #8]
 8001f2a:	bf0c      	ite	eq
 8001f2c:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8001f30:	2500      	movne	r5, #0
 8001f32:	4293      	cmp	r3, r2
 8001f34:	bfc4      	itt	gt
 8001f36:	1a9b      	subgt	r3, r3, r2
 8001f38:	18ed      	addgt	r5, r5, r3
 8001f3a:	2600      	movs	r6, #0
 8001f3c:	341a      	adds	r4, #26
 8001f3e:	42b5      	cmp	r5, r6
 8001f40:	d11a      	bne.n	8001f78 <_printf_common+0xc8>
 8001f42:	2000      	movs	r0, #0
 8001f44:	e008      	b.n	8001f58 <_printf_common+0xa8>
 8001f46:	2301      	movs	r3, #1
 8001f48:	4652      	mov	r2, sl
 8001f4a:	4641      	mov	r1, r8
 8001f4c:	4638      	mov	r0, r7
 8001f4e:	47c8      	blx	r9
 8001f50:	3001      	adds	r0, #1
 8001f52:	d103      	bne.n	8001f5c <_printf_common+0xac>
 8001f54:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8001f58:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001f5c:	3501      	adds	r5, #1
 8001f5e:	e7c6      	b.n	8001eee <_printf_common+0x3e>
 8001f60:	18e1      	adds	r1, r4, r3
 8001f62:	1c5a      	adds	r2, r3, #1
 8001f64:	2030      	movs	r0, #48	@ 0x30
 8001f66:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 8001f6a:	4422      	add	r2, r4
 8001f6c:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8001f70:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8001f74:	3302      	adds	r3, #2
 8001f76:	e7c7      	b.n	8001f08 <_printf_common+0x58>
 8001f78:	2301      	movs	r3, #1
 8001f7a:	4622      	mov	r2, r4
 8001f7c:	4641      	mov	r1, r8
 8001f7e:	4638      	mov	r0, r7
 8001f80:	47c8      	blx	r9
 8001f82:	3001      	adds	r0, #1
 8001f84:	d0e6      	beq.n	8001f54 <_printf_common+0xa4>
 8001f86:	3601      	adds	r6, #1
 8001f88:	e7d9      	b.n	8001f3e <_printf_common+0x8e>
	...

08001f8c <_printf_i>:
 8001f8c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8001f90:	7e0f      	ldrb	r7, [r1, #24]
 8001f92:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8001f94:	2f78      	cmp	r7, #120	@ 0x78
 8001f96:	4691      	mov	r9, r2
 8001f98:	4680      	mov	r8, r0
 8001f9a:	460c      	mov	r4, r1
 8001f9c:	469a      	mov	sl, r3
 8001f9e:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 8001fa2:	d807      	bhi.n	8001fb4 <_printf_i+0x28>
 8001fa4:	2f62      	cmp	r7, #98	@ 0x62
 8001fa6:	d80a      	bhi.n	8001fbe <_printf_i+0x32>
 8001fa8:	2f00      	cmp	r7, #0
 8001faa:	f000 80d1 	beq.w	8002150 <_printf_i+0x1c4>
 8001fae:	2f58      	cmp	r7, #88	@ 0x58
 8001fb0:	f000 80b8 	beq.w	8002124 <_printf_i+0x198>
 8001fb4:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8001fb8:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 8001fbc:	e03a      	b.n	8002034 <_printf_i+0xa8>
 8001fbe:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 8001fc2:	2b15      	cmp	r3, #21
 8001fc4:	d8f6      	bhi.n	8001fb4 <_printf_i+0x28>
 8001fc6:	a101      	add	r1, pc, #4	@ (adr r1, 8001fcc <_printf_i+0x40>)
 8001fc8:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8001fcc:	08002025 	.word	0x08002025
 8001fd0:	08002039 	.word	0x08002039
 8001fd4:	08001fb5 	.word	0x08001fb5
 8001fd8:	08001fb5 	.word	0x08001fb5
 8001fdc:	08001fb5 	.word	0x08001fb5
 8001fe0:	08001fb5 	.word	0x08001fb5
 8001fe4:	08002039 	.word	0x08002039
 8001fe8:	08001fb5 	.word	0x08001fb5
 8001fec:	08001fb5 	.word	0x08001fb5
 8001ff0:	08001fb5 	.word	0x08001fb5
 8001ff4:	08001fb5 	.word	0x08001fb5
 8001ff8:	08002137 	.word	0x08002137
 8001ffc:	08002063 	.word	0x08002063
 8002000:	080020f1 	.word	0x080020f1
 8002004:	08001fb5 	.word	0x08001fb5
 8002008:	08001fb5 	.word	0x08001fb5
 800200c:	08002159 	.word	0x08002159
 8002010:	08001fb5 	.word	0x08001fb5
 8002014:	08002063 	.word	0x08002063
 8002018:	08001fb5 	.word	0x08001fb5
 800201c:	08001fb5 	.word	0x08001fb5
 8002020:	080020f9 	.word	0x080020f9
 8002024:	6833      	ldr	r3, [r6, #0]
 8002026:	1d1a      	adds	r2, r3, #4
 8002028:	681b      	ldr	r3, [r3, #0]
 800202a:	6032      	str	r2, [r6, #0]
 800202c:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8002030:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8002034:	2301      	movs	r3, #1
 8002036:	e09c      	b.n	8002172 <_printf_i+0x1e6>
 8002038:	6833      	ldr	r3, [r6, #0]
 800203a:	6820      	ldr	r0, [r4, #0]
 800203c:	1d19      	adds	r1, r3, #4
 800203e:	6031      	str	r1, [r6, #0]
 8002040:	0606      	lsls	r6, r0, #24
 8002042:	d501      	bpl.n	8002048 <_printf_i+0xbc>
 8002044:	681d      	ldr	r5, [r3, #0]
 8002046:	e003      	b.n	8002050 <_printf_i+0xc4>
 8002048:	0645      	lsls	r5, r0, #25
 800204a:	d5fb      	bpl.n	8002044 <_printf_i+0xb8>
 800204c:	f9b3 5000 	ldrsh.w	r5, [r3]
 8002050:	2d00      	cmp	r5, #0
 8002052:	da03      	bge.n	800205c <_printf_i+0xd0>
 8002054:	232d      	movs	r3, #45	@ 0x2d
 8002056:	426d      	negs	r5, r5
 8002058:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 800205c:	4858      	ldr	r0, [pc, #352]	@ (80021c0 <_printf_i+0x234>)
 800205e:	230a      	movs	r3, #10
 8002060:	e011      	b.n	8002086 <_printf_i+0xfa>
 8002062:	6821      	ldr	r1, [r4, #0]
 8002064:	6833      	ldr	r3, [r6, #0]
 8002066:	0608      	lsls	r0, r1, #24
 8002068:	f853 5b04 	ldr.w	r5, [r3], #4
 800206c:	d402      	bmi.n	8002074 <_printf_i+0xe8>
 800206e:	0649      	lsls	r1, r1, #25
 8002070:	bf48      	it	mi
 8002072:	b2ad      	uxthmi	r5, r5
 8002074:	2f6f      	cmp	r7, #111	@ 0x6f
 8002076:	4852      	ldr	r0, [pc, #328]	@ (80021c0 <_printf_i+0x234>)
 8002078:	6033      	str	r3, [r6, #0]
 800207a:	bf14      	ite	ne
 800207c:	230a      	movne	r3, #10
 800207e:	2308      	moveq	r3, #8
 8002080:	2100      	movs	r1, #0
 8002082:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 8002086:	6866      	ldr	r6, [r4, #4]
 8002088:	60a6      	str	r6, [r4, #8]
 800208a:	2e00      	cmp	r6, #0
 800208c:	db05      	blt.n	800209a <_printf_i+0x10e>
 800208e:	6821      	ldr	r1, [r4, #0]
 8002090:	432e      	orrs	r6, r5
 8002092:	f021 0104 	bic.w	r1, r1, #4
 8002096:	6021      	str	r1, [r4, #0]
 8002098:	d04b      	beq.n	8002132 <_printf_i+0x1a6>
 800209a:	4616      	mov	r6, r2
 800209c:	fbb5 f1f3 	udiv	r1, r5, r3
 80020a0:	fb03 5711 	mls	r7, r3, r1, r5
 80020a4:	5dc7      	ldrb	r7, [r0, r7]
 80020a6:	f806 7d01 	strb.w	r7, [r6, #-1]!
 80020aa:	462f      	mov	r7, r5
 80020ac:	42bb      	cmp	r3, r7
 80020ae:	460d      	mov	r5, r1
 80020b0:	d9f4      	bls.n	800209c <_printf_i+0x110>
 80020b2:	2b08      	cmp	r3, #8
 80020b4:	d10b      	bne.n	80020ce <_printf_i+0x142>
 80020b6:	6823      	ldr	r3, [r4, #0]
 80020b8:	07df      	lsls	r7, r3, #31
 80020ba:	d508      	bpl.n	80020ce <_printf_i+0x142>
 80020bc:	6923      	ldr	r3, [r4, #16]
 80020be:	6861      	ldr	r1, [r4, #4]
 80020c0:	4299      	cmp	r1, r3
 80020c2:	bfde      	ittt	le
 80020c4:	2330      	movle	r3, #48	@ 0x30
 80020c6:	f806 3c01 	strble.w	r3, [r6, #-1]
 80020ca:	f106 36ff 	addle.w	r6, r6, #4294967295	@ 0xffffffff
 80020ce:	1b92      	subs	r2, r2, r6
 80020d0:	6122      	str	r2, [r4, #16]
 80020d2:	f8cd a000 	str.w	sl, [sp]
 80020d6:	464b      	mov	r3, r9
 80020d8:	aa03      	add	r2, sp, #12
 80020da:	4621      	mov	r1, r4
 80020dc:	4640      	mov	r0, r8
 80020de:	f7ff fee7 	bl	8001eb0 <_printf_common>
 80020e2:	3001      	adds	r0, #1
 80020e4:	d14a      	bne.n	800217c <_printf_i+0x1f0>
 80020e6:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 80020ea:	b004      	add	sp, #16
 80020ec:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80020f0:	6823      	ldr	r3, [r4, #0]
 80020f2:	f043 0320 	orr.w	r3, r3, #32
 80020f6:	6023      	str	r3, [r4, #0]
 80020f8:	4832      	ldr	r0, [pc, #200]	@ (80021c4 <_printf_i+0x238>)
 80020fa:	2778      	movs	r7, #120	@ 0x78
 80020fc:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 8002100:	6823      	ldr	r3, [r4, #0]
 8002102:	6831      	ldr	r1, [r6, #0]
 8002104:	061f      	lsls	r7, r3, #24
 8002106:	f851 5b04 	ldr.w	r5, [r1], #4
 800210a:	d402      	bmi.n	8002112 <_printf_i+0x186>
 800210c:	065f      	lsls	r7, r3, #25
 800210e:	bf48      	it	mi
 8002110:	b2ad      	uxthmi	r5, r5
 8002112:	6031      	str	r1, [r6, #0]
 8002114:	07d9      	lsls	r1, r3, #31
 8002116:	bf44      	itt	mi
 8002118:	f043 0320 	orrmi.w	r3, r3, #32
 800211c:	6023      	strmi	r3, [r4, #0]
 800211e:	b11d      	cbz	r5, 8002128 <_printf_i+0x19c>
 8002120:	2310      	movs	r3, #16
 8002122:	e7ad      	b.n	8002080 <_printf_i+0xf4>
 8002124:	4826      	ldr	r0, [pc, #152]	@ (80021c0 <_printf_i+0x234>)
 8002126:	e7e9      	b.n	80020fc <_printf_i+0x170>
 8002128:	6823      	ldr	r3, [r4, #0]
 800212a:	f023 0320 	bic.w	r3, r3, #32
 800212e:	6023      	str	r3, [r4, #0]
 8002130:	e7f6      	b.n	8002120 <_printf_i+0x194>
 8002132:	4616      	mov	r6, r2
 8002134:	e7bd      	b.n	80020b2 <_printf_i+0x126>
 8002136:	6833      	ldr	r3, [r6, #0]
 8002138:	6825      	ldr	r5, [r4, #0]
 800213a:	6961      	ldr	r1, [r4, #20]
 800213c:	1d18      	adds	r0, r3, #4
 800213e:	6030      	str	r0, [r6, #0]
 8002140:	062e      	lsls	r6, r5, #24
 8002142:	681b      	ldr	r3, [r3, #0]
 8002144:	d501      	bpl.n	800214a <_printf_i+0x1be>
 8002146:	6019      	str	r1, [r3, #0]
 8002148:	e002      	b.n	8002150 <_printf_i+0x1c4>
 800214a:	0668      	lsls	r0, r5, #25
 800214c:	d5fb      	bpl.n	8002146 <_printf_i+0x1ba>
 800214e:	8019      	strh	r1, [r3, #0]
 8002150:	2300      	movs	r3, #0
 8002152:	6123      	str	r3, [r4, #16]
 8002154:	4616      	mov	r6, r2
 8002156:	e7bc      	b.n	80020d2 <_printf_i+0x146>
 8002158:	6833      	ldr	r3, [r6, #0]
 800215a:	1d1a      	adds	r2, r3, #4
 800215c:	6032      	str	r2, [r6, #0]
 800215e:	681e      	ldr	r6, [r3, #0]
 8002160:	6862      	ldr	r2, [r4, #4]
 8002162:	2100      	movs	r1, #0
 8002164:	4630      	mov	r0, r6
 8002166:	f7fe f83b 	bl	80001e0 <memchr>
 800216a:	b108      	cbz	r0, 8002170 <_printf_i+0x1e4>
 800216c:	1b80      	subs	r0, r0, r6
 800216e:	6060      	str	r0, [r4, #4]
 8002170:	6863      	ldr	r3, [r4, #4]
 8002172:	6123      	str	r3, [r4, #16]
 8002174:	2300      	movs	r3, #0
 8002176:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 800217a:	e7aa      	b.n	80020d2 <_printf_i+0x146>
 800217c:	6923      	ldr	r3, [r4, #16]
 800217e:	4632      	mov	r2, r6
 8002180:	4649      	mov	r1, r9
 8002182:	4640      	mov	r0, r8
 8002184:	47d0      	blx	sl
 8002186:	3001      	adds	r0, #1
 8002188:	d0ad      	beq.n	80020e6 <_printf_i+0x15a>
 800218a:	6823      	ldr	r3, [r4, #0]
 800218c:	079b      	lsls	r3, r3, #30
 800218e:	d413      	bmi.n	80021b8 <_printf_i+0x22c>
 8002190:	68e0      	ldr	r0, [r4, #12]
 8002192:	9b03      	ldr	r3, [sp, #12]
 8002194:	4298      	cmp	r0, r3
 8002196:	bfb8      	it	lt
 8002198:	4618      	movlt	r0, r3
 800219a:	e7a6      	b.n	80020ea <_printf_i+0x15e>
 800219c:	2301      	movs	r3, #1
 800219e:	4632      	mov	r2, r6
 80021a0:	4649      	mov	r1, r9
 80021a2:	4640      	mov	r0, r8
 80021a4:	47d0      	blx	sl
 80021a6:	3001      	adds	r0, #1
 80021a8:	d09d      	beq.n	80020e6 <_printf_i+0x15a>
 80021aa:	3501      	adds	r5, #1
 80021ac:	68e3      	ldr	r3, [r4, #12]
 80021ae:	9903      	ldr	r1, [sp, #12]
 80021b0:	1a5b      	subs	r3, r3, r1
 80021b2:	42ab      	cmp	r3, r5
 80021b4:	dcf2      	bgt.n	800219c <_printf_i+0x210>
 80021b6:	e7eb      	b.n	8002190 <_printf_i+0x204>
 80021b8:	2500      	movs	r5, #0
 80021ba:	f104 0619 	add.w	r6, r4, #25
 80021be:	e7f5      	b.n	80021ac <_printf_i+0x220>
 80021c0:	080042ae 	.word	0x080042ae
 80021c4:	080042bf 	.word	0x080042bf

080021c8 <std>:
 80021c8:	2300      	movs	r3, #0
 80021ca:	b510      	push	{r4, lr}
 80021cc:	4604      	mov	r4, r0
 80021ce:	e9c0 3300 	strd	r3, r3, [r0]
 80021d2:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80021d6:	6083      	str	r3, [r0, #8]
 80021d8:	8181      	strh	r1, [r0, #12]
 80021da:	6643      	str	r3, [r0, #100]	@ 0x64
 80021dc:	81c2      	strh	r2, [r0, #14]
 80021de:	6183      	str	r3, [r0, #24]
 80021e0:	4619      	mov	r1, r3
 80021e2:	2208      	movs	r2, #8
 80021e4:	305c      	adds	r0, #92	@ 0x5c
 80021e6:	f000 f906 	bl	80023f6 <memset>
 80021ea:	4b0d      	ldr	r3, [pc, #52]	@ (8002220 <std+0x58>)
 80021ec:	6263      	str	r3, [r4, #36]	@ 0x24
 80021ee:	4b0d      	ldr	r3, [pc, #52]	@ (8002224 <std+0x5c>)
 80021f0:	62a3      	str	r3, [r4, #40]	@ 0x28
 80021f2:	4b0d      	ldr	r3, [pc, #52]	@ (8002228 <std+0x60>)
 80021f4:	62e3      	str	r3, [r4, #44]	@ 0x2c
 80021f6:	4b0d      	ldr	r3, [pc, #52]	@ (800222c <std+0x64>)
 80021f8:	6323      	str	r3, [r4, #48]	@ 0x30
 80021fa:	4b0d      	ldr	r3, [pc, #52]	@ (8002230 <std+0x68>)
 80021fc:	6224      	str	r4, [r4, #32]
 80021fe:	429c      	cmp	r4, r3
 8002200:	d006      	beq.n	8002210 <std+0x48>
 8002202:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 8002206:	4294      	cmp	r4, r2
 8002208:	d002      	beq.n	8002210 <std+0x48>
 800220a:	33d0      	adds	r3, #208	@ 0xd0
 800220c:	429c      	cmp	r4, r3
 800220e:	d105      	bne.n	800221c <std+0x54>
 8002210:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 8002214:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002218:	f000 b96a 	b.w	80024f0 <__retarget_lock_init_recursive>
 800221c:	bd10      	pop	{r4, pc}
 800221e:	bf00      	nop
 8002220:	08002371 	.word	0x08002371
 8002224:	08002393 	.word	0x08002393
 8002228:	080023cb 	.word	0x080023cb
 800222c:	080023ef 	.word	0x080023ef
 8002230:	200001f8 	.word	0x200001f8

08002234 <stdio_exit_handler>:
 8002234:	4a02      	ldr	r2, [pc, #8]	@ (8002240 <stdio_exit_handler+0xc>)
 8002236:	4903      	ldr	r1, [pc, #12]	@ (8002244 <stdio_exit_handler+0x10>)
 8002238:	4803      	ldr	r0, [pc, #12]	@ (8002248 <stdio_exit_handler+0x14>)
 800223a:	f000 b869 	b.w	8002310 <_fwalk_sglue>
 800223e:	bf00      	nop
 8002240:	20000000 	.word	0x20000000
 8002244:	08003e29 	.word	0x08003e29
 8002248:	20000010 	.word	0x20000010

0800224c <cleanup_stdio>:
 800224c:	6841      	ldr	r1, [r0, #4]
 800224e:	4b0c      	ldr	r3, [pc, #48]	@ (8002280 <cleanup_stdio+0x34>)
 8002250:	4299      	cmp	r1, r3
 8002252:	b510      	push	{r4, lr}
 8002254:	4604      	mov	r4, r0
 8002256:	d001      	beq.n	800225c <cleanup_stdio+0x10>
 8002258:	f001 fde6 	bl	8003e28 <_fflush_r>
 800225c:	68a1      	ldr	r1, [r4, #8]
 800225e:	4b09      	ldr	r3, [pc, #36]	@ (8002284 <cleanup_stdio+0x38>)
 8002260:	4299      	cmp	r1, r3
 8002262:	d002      	beq.n	800226a <cleanup_stdio+0x1e>
 8002264:	4620      	mov	r0, r4
 8002266:	f001 fddf 	bl	8003e28 <_fflush_r>
 800226a:	68e1      	ldr	r1, [r4, #12]
 800226c:	4b06      	ldr	r3, [pc, #24]	@ (8002288 <cleanup_stdio+0x3c>)
 800226e:	4299      	cmp	r1, r3
 8002270:	d004      	beq.n	800227c <cleanup_stdio+0x30>
 8002272:	4620      	mov	r0, r4
 8002274:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002278:	f001 bdd6 	b.w	8003e28 <_fflush_r>
 800227c:	bd10      	pop	{r4, pc}
 800227e:	bf00      	nop
 8002280:	200001f8 	.word	0x200001f8
 8002284:	20000260 	.word	0x20000260
 8002288:	200002c8 	.word	0x200002c8

0800228c <global_stdio_init.part.0>:
 800228c:	b510      	push	{r4, lr}
 800228e:	4b0b      	ldr	r3, [pc, #44]	@ (80022bc <global_stdio_init.part.0+0x30>)
 8002290:	4c0b      	ldr	r4, [pc, #44]	@ (80022c0 <global_stdio_init.part.0+0x34>)
 8002292:	4a0c      	ldr	r2, [pc, #48]	@ (80022c4 <global_stdio_init.part.0+0x38>)
 8002294:	601a      	str	r2, [r3, #0]
 8002296:	4620      	mov	r0, r4
 8002298:	2200      	movs	r2, #0
 800229a:	2104      	movs	r1, #4
 800229c:	f7ff ff94 	bl	80021c8 <std>
 80022a0:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 80022a4:	2201      	movs	r2, #1
 80022a6:	2109      	movs	r1, #9
 80022a8:	f7ff ff8e 	bl	80021c8 <std>
 80022ac:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 80022b0:	2202      	movs	r2, #2
 80022b2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80022b6:	2112      	movs	r1, #18
 80022b8:	f7ff bf86 	b.w	80021c8 <std>
 80022bc:	20000330 	.word	0x20000330
 80022c0:	200001f8 	.word	0x200001f8
 80022c4:	08002235 	.word	0x08002235

080022c8 <__sfp_lock_acquire>:
 80022c8:	4801      	ldr	r0, [pc, #4]	@ (80022d0 <__sfp_lock_acquire+0x8>)
 80022ca:	f000 b912 	b.w	80024f2 <__retarget_lock_acquire_recursive>
 80022ce:	bf00      	nop
 80022d0:	20000339 	.word	0x20000339

080022d4 <__sfp_lock_release>:
 80022d4:	4801      	ldr	r0, [pc, #4]	@ (80022dc <__sfp_lock_release+0x8>)
 80022d6:	f000 b90d 	b.w	80024f4 <__retarget_lock_release_recursive>
 80022da:	bf00      	nop
 80022dc:	20000339 	.word	0x20000339

080022e0 <__sinit>:
 80022e0:	b510      	push	{r4, lr}
 80022e2:	4604      	mov	r4, r0
 80022e4:	f7ff fff0 	bl	80022c8 <__sfp_lock_acquire>
 80022e8:	6a23      	ldr	r3, [r4, #32]
 80022ea:	b11b      	cbz	r3, 80022f4 <__sinit+0x14>
 80022ec:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80022f0:	f7ff bff0 	b.w	80022d4 <__sfp_lock_release>
 80022f4:	4b04      	ldr	r3, [pc, #16]	@ (8002308 <__sinit+0x28>)
 80022f6:	6223      	str	r3, [r4, #32]
 80022f8:	4b04      	ldr	r3, [pc, #16]	@ (800230c <__sinit+0x2c>)
 80022fa:	681b      	ldr	r3, [r3, #0]
 80022fc:	2b00      	cmp	r3, #0
 80022fe:	d1f5      	bne.n	80022ec <__sinit+0xc>
 8002300:	f7ff ffc4 	bl	800228c <global_stdio_init.part.0>
 8002304:	e7f2      	b.n	80022ec <__sinit+0xc>
 8002306:	bf00      	nop
 8002308:	0800224d 	.word	0x0800224d
 800230c:	20000330 	.word	0x20000330

08002310 <_fwalk_sglue>:
 8002310:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8002314:	4607      	mov	r7, r0
 8002316:	4688      	mov	r8, r1
 8002318:	4614      	mov	r4, r2
 800231a:	2600      	movs	r6, #0
 800231c:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8002320:	f1b9 0901 	subs.w	r9, r9, #1
 8002324:	d505      	bpl.n	8002332 <_fwalk_sglue+0x22>
 8002326:	6824      	ldr	r4, [r4, #0]
 8002328:	2c00      	cmp	r4, #0
 800232a:	d1f7      	bne.n	800231c <_fwalk_sglue+0xc>
 800232c:	4630      	mov	r0, r6
 800232e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8002332:	89ab      	ldrh	r3, [r5, #12]
 8002334:	2b01      	cmp	r3, #1
 8002336:	d907      	bls.n	8002348 <_fwalk_sglue+0x38>
 8002338:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 800233c:	3301      	adds	r3, #1
 800233e:	d003      	beq.n	8002348 <_fwalk_sglue+0x38>
 8002340:	4629      	mov	r1, r5
 8002342:	4638      	mov	r0, r7
 8002344:	47c0      	blx	r8
 8002346:	4306      	orrs	r6, r0
 8002348:	3568      	adds	r5, #104	@ 0x68
 800234a:	e7e9      	b.n	8002320 <_fwalk_sglue+0x10>

0800234c <iprintf>:
 800234c:	b40f      	push	{r0, r1, r2, r3}
 800234e:	b507      	push	{r0, r1, r2, lr}
 8002350:	4906      	ldr	r1, [pc, #24]	@ (800236c <iprintf+0x20>)
 8002352:	ab04      	add	r3, sp, #16
 8002354:	6808      	ldr	r0, [r1, #0]
 8002356:	f853 2b04 	ldr.w	r2, [r3], #4
 800235a:	6881      	ldr	r1, [r0, #8]
 800235c:	9301      	str	r3, [sp, #4]
 800235e:	f001 fbc7 	bl	8003af0 <_vfiprintf_r>
 8002362:	b003      	add	sp, #12
 8002364:	f85d eb04 	ldr.w	lr, [sp], #4
 8002368:	b004      	add	sp, #16
 800236a:	4770      	bx	lr
 800236c:	2000000c 	.word	0x2000000c

08002370 <__sread>:
 8002370:	b510      	push	{r4, lr}
 8002372:	460c      	mov	r4, r1
 8002374:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8002378:	f000 f86c 	bl	8002454 <_read_r>
 800237c:	2800      	cmp	r0, #0
 800237e:	bfab      	itete	ge
 8002380:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 8002382:	89a3      	ldrhlt	r3, [r4, #12]
 8002384:	181b      	addge	r3, r3, r0
 8002386:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 800238a:	bfac      	ite	ge
 800238c:	6563      	strge	r3, [r4, #84]	@ 0x54
 800238e:	81a3      	strhlt	r3, [r4, #12]
 8002390:	bd10      	pop	{r4, pc}

08002392 <__swrite>:
 8002392:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002396:	461f      	mov	r7, r3
 8002398:	898b      	ldrh	r3, [r1, #12]
 800239a:	05db      	lsls	r3, r3, #23
 800239c:	4605      	mov	r5, r0
 800239e:	460c      	mov	r4, r1
 80023a0:	4616      	mov	r6, r2
 80023a2:	d505      	bpl.n	80023b0 <__swrite+0x1e>
 80023a4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80023a8:	2302      	movs	r3, #2
 80023aa:	2200      	movs	r2, #0
 80023ac:	f000 f840 	bl	8002430 <_lseek_r>
 80023b0:	89a3      	ldrh	r3, [r4, #12]
 80023b2:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80023b6:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 80023ba:	81a3      	strh	r3, [r4, #12]
 80023bc:	4632      	mov	r2, r6
 80023be:	463b      	mov	r3, r7
 80023c0:	4628      	mov	r0, r5
 80023c2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80023c6:	f000 b857 	b.w	8002478 <_write_r>

080023ca <__sseek>:
 80023ca:	b510      	push	{r4, lr}
 80023cc:	460c      	mov	r4, r1
 80023ce:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80023d2:	f000 f82d 	bl	8002430 <_lseek_r>
 80023d6:	1c43      	adds	r3, r0, #1
 80023d8:	89a3      	ldrh	r3, [r4, #12]
 80023da:	bf15      	itete	ne
 80023dc:	6560      	strne	r0, [r4, #84]	@ 0x54
 80023de:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 80023e2:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 80023e6:	81a3      	strheq	r3, [r4, #12]
 80023e8:	bf18      	it	ne
 80023ea:	81a3      	strhne	r3, [r4, #12]
 80023ec:	bd10      	pop	{r4, pc}

080023ee <__sclose>:
 80023ee:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80023f2:	f000 b80d 	b.w	8002410 <_close_r>

080023f6 <memset>:
 80023f6:	4402      	add	r2, r0
 80023f8:	4603      	mov	r3, r0
 80023fa:	4293      	cmp	r3, r2
 80023fc:	d100      	bne.n	8002400 <memset+0xa>
 80023fe:	4770      	bx	lr
 8002400:	f803 1b01 	strb.w	r1, [r3], #1
 8002404:	e7f9      	b.n	80023fa <memset+0x4>
	...

08002408 <_localeconv_r>:
 8002408:	4800      	ldr	r0, [pc, #0]	@ (800240c <_localeconv_r+0x4>)
 800240a:	4770      	bx	lr
 800240c:	2000014c 	.word	0x2000014c

08002410 <_close_r>:
 8002410:	b538      	push	{r3, r4, r5, lr}
 8002412:	4d06      	ldr	r5, [pc, #24]	@ (800242c <_close_r+0x1c>)
 8002414:	2300      	movs	r3, #0
 8002416:	4604      	mov	r4, r0
 8002418:	4608      	mov	r0, r1
 800241a:	602b      	str	r3, [r5, #0]
 800241c:	f7ff f9ec 	bl	80017f8 <_close>
 8002420:	1c43      	adds	r3, r0, #1
 8002422:	d102      	bne.n	800242a <_close_r+0x1a>
 8002424:	682b      	ldr	r3, [r5, #0]
 8002426:	b103      	cbz	r3, 800242a <_close_r+0x1a>
 8002428:	6023      	str	r3, [r4, #0]
 800242a:	bd38      	pop	{r3, r4, r5, pc}
 800242c:	20000334 	.word	0x20000334

08002430 <_lseek_r>:
 8002430:	b538      	push	{r3, r4, r5, lr}
 8002432:	4d07      	ldr	r5, [pc, #28]	@ (8002450 <_lseek_r+0x20>)
 8002434:	4604      	mov	r4, r0
 8002436:	4608      	mov	r0, r1
 8002438:	4611      	mov	r1, r2
 800243a:	2200      	movs	r2, #0
 800243c:	602a      	str	r2, [r5, #0]
 800243e:	461a      	mov	r2, r3
 8002440:	f7ff fa01 	bl	8001846 <_lseek>
 8002444:	1c43      	adds	r3, r0, #1
 8002446:	d102      	bne.n	800244e <_lseek_r+0x1e>
 8002448:	682b      	ldr	r3, [r5, #0]
 800244a:	b103      	cbz	r3, 800244e <_lseek_r+0x1e>
 800244c:	6023      	str	r3, [r4, #0]
 800244e:	bd38      	pop	{r3, r4, r5, pc}
 8002450:	20000334 	.word	0x20000334

08002454 <_read_r>:
 8002454:	b538      	push	{r3, r4, r5, lr}
 8002456:	4d07      	ldr	r5, [pc, #28]	@ (8002474 <_read_r+0x20>)
 8002458:	4604      	mov	r4, r0
 800245a:	4608      	mov	r0, r1
 800245c:	4611      	mov	r1, r2
 800245e:	2200      	movs	r2, #0
 8002460:	602a      	str	r2, [r5, #0]
 8002462:	461a      	mov	r2, r3
 8002464:	f7ff f98f 	bl	8001786 <_read>
 8002468:	1c43      	adds	r3, r0, #1
 800246a:	d102      	bne.n	8002472 <_read_r+0x1e>
 800246c:	682b      	ldr	r3, [r5, #0]
 800246e:	b103      	cbz	r3, 8002472 <_read_r+0x1e>
 8002470:	6023      	str	r3, [r4, #0]
 8002472:	bd38      	pop	{r3, r4, r5, pc}
 8002474:	20000334 	.word	0x20000334

08002478 <_write_r>:
 8002478:	b538      	push	{r3, r4, r5, lr}
 800247a:	4d07      	ldr	r5, [pc, #28]	@ (8002498 <_write_r+0x20>)
 800247c:	4604      	mov	r4, r0
 800247e:	4608      	mov	r0, r1
 8002480:	4611      	mov	r1, r2
 8002482:	2200      	movs	r2, #0
 8002484:	602a      	str	r2, [r5, #0]
 8002486:	461a      	mov	r2, r3
 8002488:	f7ff f99a 	bl	80017c0 <_write>
 800248c:	1c43      	adds	r3, r0, #1
 800248e:	d102      	bne.n	8002496 <_write_r+0x1e>
 8002490:	682b      	ldr	r3, [r5, #0]
 8002492:	b103      	cbz	r3, 8002496 <_write_r+0x1e>
 8002494:	6023      	str	r3, [r4, #0]
 8002496:	bd38      	pop	{r3, r4, r5, pc}
 8002498:	20000334 	.word	0x20000334

0800249c <__errno>:
 800249c:	4b01      	ldr	r3, [pc, #4]	@ (80024a4 <__errno+0x8>)
 800249e:	6818      	ldr	r0, [r3, #0]
 80024a0:	4770      	bx	lr
 80024a2:	bf00      	nop
 80024a4:	2000000c 	.word	0x2000000c

080024a8 <__libc_init_array>:
 80024a8:	b570      	push	{r4, r5, r6, lr}
 80024aa:	4d0d      	ldr	r5, [pc, #52]	@ (80024e0 <__libc_init_array+0x38>)
 80024ac:	4c0d      	ldr	r4, [pc, #52]	@ (80024e4 <__libc_init_array+0x3c>)
 80024ae:	1b64      	subs	r4, r4, r5
 80024b0:	10a4      	asrs	r4, r4, #2
 80024b2:	2600      	movs	r6, #0
 80024b4:	42a6      	cmp	r6, r4
 80024b6:	d109      	bne.n	80024cc <__libc_init_array+0x24>
 80024b8:	4d0b      	ldr	r5, [pc, #44]	@ (80024e8 <__libc_init_array+0x40>)
 80024ba:	4c0c      	ldr	r4, [pc, #48]	@ (80024ec <__libc_init_array+0x44>)
 80024bc:	f001 fec2 	bl	8004244 <_init>
 80024c0:	1b64      	subs	r4, r4, r5
 80024c2:	10a4      	asrs	r4, r4, #2
 80024c4:	2600      	movs	r6, #0
 80024c6:	42a6      	cmp	r6, r4
 80024c8:	d105      	bne.n	80024d6 <__libc_init_array+0x2e>
 80024ca:	bd70      	pop	{r4, r5, r6, pc}
 80024cc:	f855 3b04 	ldr.w	r3, [r5], #4
 80024d0:	4798      	blx	r3
 80024d2:	3601      	adds	r6, #1
 80024d4:	e7ee      	b.n	80024b4 <__libc_init_array+0xc>
 80024d6:	f855 3b04 	ldr.w	r3, [r5], #4
 80024da:	4798      	blx	r3
 80024dc:	3601      	adds	r6, #1
 80024de:	e7f2      	b.n	80024c6 <__libc_init_array+0x1e>
 80024e0:	0800461c 	.word	0x0800461c
 80024e4:	0800461c 	.word	0x0800461c
 80024e8:	0800461c 	.word	0x0800461c
 80024ec:	08004620 	.word	0x08004620

080024f0 <__retarget_lock_init_recursive>:
 80024f0:	4770      	bx	lr

080024f2 <__retarget_lock_acquire_recursive>:
 80024f2:	4770      	bx	lr

080024f4 <__retarget_lock_release_recursive>:
 80024f4:	4770      	bx	lr

080024f6 <quorem>:
 80024f6:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80024fa:	6903      	ldr	r3, [r0, #16]
 80024fc:	690c      	ldr	r4, [r1, #16]
 80024fe:	42a3      	cmp	r3, r4
 8002500:	4607      	mov	r7, r0
 8002502:	db7e      	blt.n	8002602 <quorem+0x10c>
 8002504:	3c01      	subs	r4, #1
 8002506:	f101 0814 	add.w	r8, r1, #20
 800250a:	00a3      	lsls	r3, r4, #2
 800250c:	f100 0514 	add.w	r5, r0, #20
 8002510:	9300      	str	r3, [sp, #0]
 8002512:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8002516:	9301      	str	r3, [sp, #4]
 8002518:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 800251c:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8002520:	3301      	adds	r3, #1
 8002522:	429a      	cmp	r2, r3
 8002524:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 8002528:	fbb2 f6f3 	udiv	r6, r2, r3
 800252c:	d32e      	bcc.n	800258c <quorem+0x96>
 800252e:	f04f 0a00 	mov.w	sl, #0
 8002532:	46c4      	mov	ip, r8
 8002534:	46ae      	mov	lr, r5
 8002536:	46d3      	mov	fp, sl
 8002538:	f85c 3b04 	ldr.w	r3, [ip], #4
 800253c:	b298      	uxth	r0, r3
 800253e:	fb06 a000 	mla	r0, r6, r0, sl
 8002542:	0c02      	lsrs	r2, r0, #16
 8002544:	0c1b      	lsrs	r3, r3, #16
 8002546:	fb06 2303 	mla	r3, r6, r3, r2
 800254a:	f8de 2000 	ldr.w	r2, [lr]
 800254e:	b280      	uxth	r0, r0
 8002550:	b292      	uxth	r2, r2
 8002552:	1a12      	subs	r2, r2, r0
 8002554:	445a      	add	r2, fp
 8002556:	f8de 0000 	ldr.w	r0, [lr]
 800255a:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 800255e:	b29b      	uxth	r3, r3
 8002560:	ebc3 4322 	rsb	r3, r3, r2, asr #16
 8002564:	eb03 4310 	add.w	r3, r3, r0, lsr #16
 8002568:	b292      	uxth	r2, r2
 800256a:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
 800256e:	45e1      	cmp	r9, ip
 8002570:	f84e 2b04 	str.w	r2, [lr], #4
 8002574:	ea4f 4b23 	mov.w	fp, r3, asr #16
 8002578:	d2de      	bcs.n	8002538 <quorem+0x42>
 800257a:	9b00      	ldr	r3, [sp, #0]
 800257c:	58eb      	ldr	r3, [r5, r3]
 800257e:	b92b      	cbnz	r3, 800258c <quorem+0x96>
 8002580:	9b01      	ldr	r3, [sp, #4]
 8002582:	3b04      	subs	r3, #4
 8002584:	429d      	cmp	r5, r3
 8002586:	461a      	mov	r2, r3
 8002588:	d32f      	bcc.n	80025ea <quorem+0xf4>
 800258a:	613c      	str	r4, [r7, #16]
 800258c:	4638      	mov	r0, r7
 800258e:	f001 f97d 	bl	800388c <__mcmp>
 8002592:	2800      	cmp	r0, #0
 8002594:	db25      	blt.n	80025e2 <quorem+0xec>
 8002596:	4629      	mov	r1, r5
 8002598:	2000      	movs	r0, #0
 800259a:	f858 2b04 	ldr.w	r2, [r8], #4
 800259e:	f8d1 c000 	ldr.w	ip, [r1]
 80025a2:	fa1f fe82 	uxth.w	lr, r2
 80025a6:	fa1f f38c 	uxth.w	r3, ip
 80025aa:	eba3 030e 	sub.w	r3, r3, lr
 80025ae:	4403      	add	r3, r0
 80025b0:	0c12      	lsrs	r2, r2, #16
 80025b2:	ebc2 4223 	rsb	r2, r2, r3, asr #16
 80025b6:	eb02 421c 	add.w	r2, r2, ip, lsr #16
 80025ba:	b29b      	uxth	r3, r3
 80025bc:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80025c0:	45c1      	cmp	r9, r8
 80025c2:	f841 3b04 	str.w	r3, [r1], #4
 80025c6:	ea4f 4022 	mov.w	r0, r2, asr #16
 80025ca:	d2e6      	bcs.n	800259a <quorem+0xa4>
 80025cc:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 80025d0:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 80025d4:	b922      	cbnz	r2, 80025e0 <quorem+0xea>
 80025d6:	3b04      	subs	r3, #4
 80025d8:	429d      	cmp	r5, r3
 80025da:	461a      	mov	r2, r3
 80025dc:	d30b      	bcc.n	80025f6 <quorem+0x100>
 80025de:	613c      	str	r4, [r7, #16]
 80025e0:	3601      	adds	r6, #1
 80025e2:	4630      	mov	r0, r6
 80025e4:	b003      	add	sp, #12
 80025e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80025ea:	6812      	ldr	r2, [r2, #0]
 80025ec:	3b04      	subs	r3, #4
 80025ee:	2a00      	cmp	r2, #0
 80025f0:	d1cb      	bne.n	800258a <quorem+0x94>
 80025f2:	3c01      	subs	r4, #1
 80025f4:	e7c6      	b.n	8002584 <quorem+0x8e>
 80025f6:	6812      	ldr	r2, [r2, #0]
 80025f8:	3b04      	subs	r3, #4
 80025fa:	2a00      	cmp	r2, #0
 80025fc:	d1ef      	bne.n	80025de <quorem+0xe8>
 80025fe:	3c01      	subs	r4, #1
 8002600:	e7ea      	b.n	80025d8 <quorem+0xe2>
 8002602:	2000      	movs	r0, #0
 8002604:	e7ee      	b.n	80025e4 <quorem+0xee>
	...

08002608 <_dtoa_r>:
 8002608:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800260c:	69c7      	ldr	r7, [r0, #28]
 800260e:	b097      	sub	sp, #92	@ 0x5c
 8002610:	ed8d 0b04 	vstr	d0, [sp, #16]
 8002614:	ec55 4b10 	vmov	r4, r5, d0
 8002618:	9e20      	ldr	r6, [sp, #128]	@ 0x80
 800261a:	9107      	str	r1, [sp, #28]
 800261c:	4681      	mov	r9, r0
 800261e:	920c      	str	r2, [sp, #48]	@ 0x30
 8002620:	9311      	str	r3, [sp, #68]	@ 0x44
 8002622:	b97f      	cbnz	r7, 8002644 <_dtoa_r+0x3c>
 8002624:	2010      	movs	r0, #16
 8002626:	f000 fe09 	bl	800323c <malloc>
 800262a:	4602      	mov	r2, r0
 800262c:	f8c9 001c 	str.w	r0, [r9, #28]
 8002630:	b920      	cbnz	r0, 800263c <_dtoa_r+0x34>
 8002632:	4ba9      	ldr	r3, [pc, #676]	@ (80028d8 <_dtoa_r+0x2d0>)
 8002634:	21ef      	movs	r1, #239	@ 0xef
 8002636:	48a9      	ldr	r0, [pc, #676]	@ (80028dc <_dtoa_r+0x2d4>)
 8002638:	f001 fcd0 	bl	8003fdc <__assert_func>
 800263c:	e9c0 7701 	strd	r7, r7, [r0, #4]
 8002640:	6007      	str	r7, [r0, #0]
 8002642:	60c7      	str	r7, [r0, #12]
 8002644:	f8d9 301c 	ldr.w	r3, [r9, #28]
 8002648:	6819      	ldr	r1, [r3, #0]
 800264a:	b159      	cbz	r1, 8002664 <_dtoa_r+0x5c>
 800264c:	685a      	ldr	r2, [r3, #4]
 800264e:	604a      	str	r2, [r1, #4]
 8002650:	2301      	movs	r3, #1
 8002652:	4093      	lsls	r3, r2
 8002654:	608b      	str	r3, [r1, #8]
 8002656:	4648      	mov	r0, r9
 8002658:	f000 fee6 	bl	8003428 <_Bfree>
 800265c:	f8d9 301c 	ldr.w	r3, [r9, #28]
 8002660:	2200      	movs	r2, #0
 8002662:	601a      	str	r2, [r3, #0]
 8002664:	1e2b      	subs	r3, r5, #0
 8002666:	bfb9      	ittee	lt
 8002668:	f023 4300 	biclt.w	r3, r3, #2147483648	@ 0x80000000
 800266c:	9305      	strlt	r3, [sp, #20]
 800266e:	2300      	movge	r3, #0
 8002670:	6033      	strge	r3, [r6, #0]
 8002672:	9f05      	ldr	r7, [sp, #20]
 8002674:	4b9a      	ldr	r3, [pc, #616]	@ (80028e0 <_dtoa_r+0x2d8>)
 8002676:	bfbc      	itt	lt
 8002678:	2201      	movlt	r2, #1
 800267a:	6032      	strlt	r2, [r6, #0]
 800267c:	43bb      	bics	r3, r7
 800267e:	d112      	bne.n	80026a6 <_dtoa_r+0x9e>
 8002680:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8002682:	f242 730f 	movw	r3, #9999	@ 0x270f
 8002686:	6013      	str	r3, [r2, #0]
 8002688:	f3c7 0313 	ubfx	r3, r7, #0, #20
 800268c:	4323      	orrs	r3, r4
 800268e:	f000 855a 	beq.w	8003146 <_dtoa_r+0xb3e>
 8002692:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8002694:	f8df a25c 	ldr.w	sl, [pc, #604]	@ 80028f4 <_dtoa_r+0x2ec>
 8002698:	2b00      	cmp	r3, #0
 800269a:	f000 855c 	beq.w	8003156 <_dtoa_r+0xb4e>
 800269e:	f10a 0303 	add.w	r3, sl, #3
 80026a2:	f000 bd56 	b.w	8003152 <_dtoa_r+0xb4a>
 80026a6:	ed9d 7b04 	vldr	d7, [sp, #16]
 80026aa:	2200      	movs	r2, #0
 80026ac:	ec51 0b17 	vmov	r0, r1, d7
 80026b0:	2300      	movs	r3, #0
 80026b2:	ed8d 7b0a 	vstr	d7, [sp, #40]	@ 0x28
 80026b6:	f7fe fa0f 	bl	8000ad8 <__aeabi_dcmpeq>
 80026ba:	4680      	mov	r8, r0
 80026bc:	b158      	cbz	r0, 80026d6 <_dtoa_r+0xce>
 80026be:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 80026c0:	2301      	movs	r3, #1
 80026c2:	6013      	str	r3, [r2, #0]
 80026c4:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 80026c6:	b113      	cbz	r3, 80026ce <_dtoa_r+0xc6>
 80026c8:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 80026ca:	4b86      	ldr	r3, [pc, #536]	@ (80028e4 <_dtoa_r+0x2dc>)
 80026cc:	6013      	str	r3, [r2, #0]
 80026ce:	f8df a228 	ldr.w	sl, [pc, #552]	@ 80028f8 <_dtoa_r+0x2f0>
 80026d2:	f000 bd40 	b.w	8003156 <_dtoa_r+0xb4e>
 80026d6:	ed9d 0b0a 	vldr	d0, [sp, #40]	@ 0x28
 80026da:	aa14      	add	r2, sp, #80	@ 0x50
 80026dc:	a915      	add	r1, sp, #84	@ 0x54
 80026de:	4648      	mov	r0, r9
 80026e0:	f001 f984 	bl	80039ec <__d2b>
 80026e4:	f3c7 560a 	ubfx	r6, r7, #20, #11
 80026e8:	9002      	str	r0, [sp, #8]
 80026ea:	2e00      	cmp	r6, #0
 80026ec:	d078      	beq.n	80027e0 <_dtoa_r+0x1d8>
 80026ee:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80026f0:	f8cd 8048 	str.w	r8, [sp, #72]	@ 0x48
 80026f4:	f3c3 0313 	ubfx	r3, r3, #0, #20
 80026f8:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 80026fc:	f043 537f 	orr.w	r3, r3, #1069547520	@ 0x3fc00000
 8002700:	f443 1340 	orr.w	r3, r3, #3145728	@ 0x300000
 8002704:	f2a6 36ff 	subw	r6, r6, #1023	@ 0x3ff
 8002708:	4619      	mov	r1, r3
 800270a:	2200      	movs	r2, #0
 800270c:	4b76      	ldr	r3, [pc, #472]	@ (80028e8 <_dtoa_r+0x2e0>)
 800270e:	f7fd fdc3 	bl	8000298 <__aeabi_dsub>
 8002712:	a36b      	add	r3, pc, #428	@ (adr r3, 80028c0 <_dtoa_r+0x2b8>)
 8002714:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002718:	f7fd ff76 	bl	8000608 <__aeabi_dmul>
 800271c:	a36a      	add	r3, pc, #424	@ (adr r3, 80028c8 <_dtoa_r+0x2c0>)
 800271e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002722:	f7fd fdbb 	bl	800029c <__adddf3>
 8002726:	4604      	mov	r4, r0
 8002728:	4630      	mov	r0, r6
 800272a:	460d      	mov	r5, r1
 800272c:	f7fd ff02 	bl	8000534 <__aeabi_i2d>
 8002730:	a367      	add	r3, pc, #412	@ (adr r3, 80028d0 <_dtoa_r+0x2c8>)
 8002732:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002736:	f7fd ff67 	bl	8000608 <__aeabi_dmul>
 800273a:	4602      	mov	r2, r0
 800273c:	460b      	mov	r3, r1
 800273e:	4620      	mov	r0, r4
 8002740:	4629      	mov	r1, r5
 8002742:	f7fd fdab 	bl	800029c <__adddf3>
 8002746:	4604      	mov	r4, r0
 8002748:	460d      	mov	r5, r1
 800274a:	f7fe fa0d 	bl	8000b68 <__aeabi_d2iz>
 800274e:	2200      	movs	r2, #0
 8002750:	4607      	mov	r7, r0
 8002752:	2300      	movs	r3, #0
 8002754:	4620      	mov	r0, r4
 8002756:	4629      	mov	r1, r5
 8002758:	f7fe f9c8 	bl	8000aec <__aeabi_dcmplt>
 800275c:	b140      	cbz	r0, 8002770 <_dtoa_r+0x168>
 800275e:	4638      	mov	r0, r7
 8002760:	f7fd fee8 	bl	8000534 <__aeabi_i2d>
 8002764:	4622      	mov	r2, r4
 8002766:	462b      	mov	r3, r5
 8002768:	f7fe f9b6 	bl	8000ad8 <__aeabi_dcmpeq>
 800276c:	b900      	cbnz	r0, 8002770 <_dtoa_r+0x168>
 800276e:	3f01      	subs	r7, #1
 8002770:	2f16      	cmp	r7, #22
 8002772:	d852      	bhi.n	800281a <_dtoa_r+0x212>
 8002774:	4b5d      	ldr	r3, [pc, #372]	@ (80028ec <_dtoa_r+0x2e4>)
 8002776:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 800277a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800277e:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 8002782:	f7fe f9b3 	bl	8000aec <__aeabi_dcmplt>
 8002786:	2800      	cmp	r0, #0
 8002788:	d049      	beq.n	800281e <_dtoa_r+0x216>
 800278a:	3f01      	subs	r7, #1
 800278c:	2300      	movs	r3, #0
 800278e:	9310      	str	r3, [sp, #64]	@ 0x40
 8002790:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8002792:	1b9b      	subs	r3, r3, r6
 8002794:	1e5a      	subs	r2, r3, #1
 8002796:	bf45      	ittet	mi
 8002798:	f1c3 0301 	rsbmi	r3, r3, #1
 800279c:	9300      	strmi	r3, [sp, #0]
 800279e:	2300      	movpl	r3, #0
 80027a0:	2300      	movmi	r3, #0
 80027a2:	9206      	str	r2, [sp, #24]
 80027a4:	bf54      	ite	pl
 80027a6:	9300      	strpl	r3, [sp, #0]
 80027a8:	9306      	strmi	r3, [sp, #24]
 80027aa:	2f00      	cmp	r7, #0
 80027ac:	db39      	blt.n	8002822 <_dtoa_r+0x21a>
 80027ae:	9b06      	ldr	r3, [sp, #24]
 80027b0:	970d      	str	r7, [sp, #52]	@ 0x34
 80027b2:	443b      	add	r3, r7
 80027b4:	9306      	str	r3, [sp, #24]
 80027b6:	2300      	movs	r3, #0
 80027b8:	9308      	str	r3, [sp, #32]
 80027ba:	9b07      	ldr	r3, [sp, #28]
 80027bc:	2b09      	cmp	r3, #9
 80027be:	d863      	bhi.n	8002888 <_dtoa_r+0x280>
 80027c0:	2b05      	cmp	r3, #5
 80027c2:	bfc4      	itt	gt
 80027c4:	3b04      	subgt	r3, #4
 80027c6:	9307      	strgt	r3, [sp, #28]
 80027c8:	9b07      	ldr	r3, [sp, #28]
 80027ca:	f1a3 0302 	sub.w	r3, r3, #2
 80027ce:	bfcc      	ite	gt
 80027d0:	2400      	movgt	r4, #0
 80027d2:	2401      	movle	r4, #1
 80027d4:	2b03      	cmp	r3, #3
 80027d6:	d863      	bhi.n	80028a0 <_dtoa_r+0x298>
 80027d8:	e8df f003 	tbb	[pc, r3]
 80027dc:	2b375452 	.word	0x2b375452
 80027e0:	e9dd 6314 	ldrd	r6, r3, [sp, #80]	@ 0x50
 80027e4:	441e      	add	r6, r3
 80027e6:	f206 4332 	addw	r3, r6, #1074	@ 0x432
 80027ea:	2b20      	cmp	r3, #32
 80027ec:	bfc1      	itttt	gt
 80027ee:	f1c3 0340 	rsbgt	r3, r3, #64	@ 0x40
 80027f2:	409f      	lslgt	r7, r3
 80027f4:	f206 4312 	addwgt	r3, r6, #1042	@ 0x412
 80027f8:	fa24 f303 	lsrgt.w	r3, r4, r3
 80027fc:	bfd6      	itet	le
 80027fe:	f1c3 0320 	rsble	r3, r3, #32
 8002802:	ea47 0003 	orrgt.w	r0, r7, r3
 8002806:	fa04 f003 	lslle.w	r0, r4, r3
 800280a:	f7fd fe83 	bl	8000514 <__aeabi_ui2d>
 800280e:	2201      	movs	r2, #1
 8002810:	f1a1 73f8 	sub.w	r3, r1, #32505856	@ 0x1f00000
 8002814:	3e01      	subs	r6, #1
 8002816:	9212      	str	r2, [sp, #72]	@ 0x48
 8002818:	e776      	b.n	8002708 <_dtoa_r+0x100>
 800281a:	2301      	movs	r3, #1
 800281c:	e7b7      	b.n	800278e <_dtoa_r+0x186>
 800281e:	9010      	str	r0, [sp, #64]	@ 0x40
 8002820:	e7b6      	b.n	8002790 <_dtoa_r+0x188>
 8002822:	9b00      	ldr	r3, [sp, #0]
 8002824:	1bdb      	subs	r3, r3, r7
 8002826:	9300      	str	r3, [sp, #0]
 8002828:	427b      	negs	r3, r7
 800282a:	9308      	str	r3, [sp, #32]
 800282c:	2300      	movs	r3, #0
 800282e:	930d      	str	r3, [sp, #52]	@ 0x34
 8002830:	e7c3      	b.n	80027ba <_dtoa_r+0x1b2>
 8002832:	2301      	movs	r3, #1
 8002834:	9309      	str	r3, [sp, #36]	@ 0x24
 8002836:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8002838:	eb07 0b03 	add.w	fp, r7, r3
 800283c:	f10b 0301 	add.w	r3, fp, #1
 8002840:	2b01      	cmp	r3, #1
 8002842:	9303      	str	r3, [sp, #12]
 8002844:	bfb8      	it	lt
 8002846:	2301      	movlt	r3, #1
 8002848:	e006      	b.n	8002858 <_dtoa_r+0x250>
 800284a:	2301      	movs	r3, #1
 800284c:	9309      	str	r3, [sp, #36]	@ 0x24
 800284e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8002850:	2b00      	cmp	r3, #0
 8002852:	dd28      	ble.n	80028a6 <_dtoa_r+0x29e>
 8002854:	469b      	mov	fp, r3
 8002856:	9303      	str	r3, [sp, #12]
 8002858:	f8d9 001c 	ldr.w	r0, [r9, #28]
 800285c:	2100      	movs	r1, #0
 800285e:	2204      	movs	r2, #4
 8002860:	f102 0514 	add.w	r5, r2, #20
 8002864:	429d      	cmp	r5, r3
 8002866:	d926      	bls.n	80028b6 <_dtoa_r+0x2ae>
 8002868:	6041      	str	r1, [r0, #4]
 800286a:	4648      	mov	r0, r9
 800286c:	f000 fd9c 	bl	80033a8 <_Balloc>
 8002870:	4682      	mov	sl, r0
 8002872:	2800      	cmp	r0, #0
 8002874:	d142      	bne.n	80028fc <_dtoa_r+0x2f4>
 8002876:	4b1e      	ldr	r3, [pc, #120]	@ (80028f0 <_dtoa_r+0x2e8>)
 8002878:	4602      	mov	r2, r0
 800287a:	f240 11af 	movw	r1, #431	@ 0x1af
 800287e:	e6da      	b.n	8002636 <_dtoa_r+0x2e>
 8002880:	2300      	movs	r3, #0
 8002882:	e7e3      	b.n	800284c <_dtoa_r+0x244>
 8002884:	2300      	movs	r3, #0
 8002886:	e7d5      	b.n	8002834 <_dtoa_r+0x22c>
 8002888:	2401      	movs	r4, #1
 800288a:	2300      	movs	r3, #0
 800288c:	9307      	str	r3, [sp, #28]
 800288e:	9409      	str	r4, [sp, #36]	@ 0x24
 8002890:	f04f 3bff 	mov.w	fp, #4294967295	@ 0xffffffff
 8002894:	2200      	movs	r2, #0
 8002896:	f8cd b00c 	str.w	fp, [sp, #12]
 800289a:	2312      	movs	r3, #18
 800289c:	920c      	str	r2, [sp, #48]	@ 0x30
 800289e:	e7db      	b.n	8002858 <_dtoa_r+0x250>
 80028a0:	2301      	movs	r3, #1
 80028a2:	9309      	str	r3, [sp, #36]	@ 0x24
 80028a4:	e7f4      	b.n	8002890 <_dtoa_r+0x288>
 80028a6:	f04f 0b01 	mov.w	fp, #1
 80028aa:	f8cd b00c 	str.w	fp, [sp, #12]
 80028ae:	465b      	mov	r3, fp
 80028b0:	f8cd b030 	str.w	fp, [sp, #48]	@ 0x30
 80028b4:	e7d0      	b.n	8002858 <_dtoa_r+0x250>
 80028b6:	3101      	adds	r1, #1
 80028b8:	0052      	lsls	r2, r2, #1
 80028ba:	e7d1      	b.n	8002860 <_dtoa_r+0x258>
 80028bc:	f3af 8000 	nop.w
 80028c0:	636f4361 	.word	0x636f4361
 80028c4:	3fd287a7 	.word	0x3fd287a7
 80028c8:	8b60c8b3 	.word	0x8b60c8b3
 80028cc:	3fc68a28 	.word	0x3fc68a28
 80028d0:	509f79fb 	.word	0x509f79fb
 80028d4:	3fd34413 	.word	0x3fd34413
 80028d8:	080042dd 	.word	0x080042dd
 80028dc:	080042f4 	.word	0x080042f4
 80028e0:	7ff00000 	.word	0x7ff00000
 80028e4:	080042ad 	.word	0x080042ad
 80028e8:	3ff80000 	.word	0x3ff80000
 80028ec:	08004448 	.word	0x08004448
 80028f0:	0800434c 	.word	0x0800434c
 80028f4:	080042d9 	.word	0x080042d9
 80028f8:	080042ac 	.word	0x080042ac
 80028fc:	f8d9 301c 	ldr.w	r3, [r9, #28]
 8002900:	6018      	str	r0, [r3, #0]
 8002902:	9b03      	ldr	r3, [sp, #12]
 8002904:	2b0e      	cmp	r3, #14
 8002906:	f200 80a1 	bhi.w	8002a4c <_dtoa_r+0x444>
 800290a:	2c00      	cmp	r4, #0
 800290c:	f000 809e 	beq.w	8002a4c <_dtoa_r+0x444>
 8002910:	2f00      	cmp	r7, #0
 8002912:	dd33      	ble.n	800297c <_dtoa_r+0x374>
 8002914:	4b9c      	ldr	r3, [pc, #624]	@ (8002b88 <_dtoa_r+0x580>)
 8002916:	f007 020f 	and.w	r2, r7, #15
 800291a:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800291e:	ed93 7b00 	vldr	d7, [r3]
 8002922:	05f8      	lsls	r0, r7, #23
 8002924:	ed8d 7b0e 	vstr	d7, [sp, #56]	@ 0x38
 8002928:	ea4f 1427 	mov.w	r4, r7, asr #4
 800292c:	d516      	bpl.n	800295c <_dtoa_r+0x354>
 800292e:	4b97      	ldr	r3, [pc, #604]	@ (8002b8c <_dtoa_r+0x584>)
 8002930:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 8002934:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 8002938:	f7fd ff90 	bl	800085c <__aeabi_ddiv>
 800293c:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8002940:	f004 040f 	and.w	r4, r4, #15
 8002944:	2603      	movs	r6, #3
 8002946:	4d91      	ldr	r5, [pc, #580]	@ (8002b8c <_dtoa_r+0x584>)
 8002948:	b954      	cbnz	r4, 8002960 <_dtoa_r+0x358>
 800294a:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	@ 0x38
 800294e:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8002952:	f7fd ff83 	bl	800085c <__aeabi_ddiv>
 8002956:	e9cd 0104 	strd	r0, r1, [sp, #16]
 800295a:	e028      	b.n	80029ae <_dtoa_r+0x3a6>
 800295c:	2602      	movs	r6, #2
 800295e:	e7f2      	b.n	8002946 <_dtoa_r+0x33e>
 8002960:	07e1      	lsls	r1, r4, #31
 8002962:	d508      	bpl.n	8002976 <_dtoa_r+0x36e>
 8002964:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	@ 0x38
 8002968:	e9d5 2300 	ldrd	r2, r3, [r5]
 800296c:	f7fd fe4c 	bl	8000608 <__aeabi_dmul>
 8002970:	e9cd 010e 	strd	r0, r1, [sp, #56]	@ 0x38
 8002974:	3601      	adds	r6, #1
 8002976:	1064      	asrs	r4, r4, #1
 8002978:	3508      	adds	r5, #8
 800297a:	e7e5      	b.n	8002948 <_dtoa_r+0x340>
 800297c:	f000 80af 	beq.w	8002ade <_dtoa_r+0x4d6>
 8002980:	427c      	negs	r4, r7
 8002982:	4b81      	ldr	r3, [pc, #516]	@ (8002b88 <_dtoa_r+0x580>)
 8002984:	4d81      	ldr	r5, [pc, #516]	@ (8002b8c <_dtoa_r+0x584>)
 8002986:	f004 020f 	and.w	r2, r4, #15
 800298a:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800298e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002992:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 8002996:	f7fd fe37 	bl	8000608 <__aeabi_dmul>
 800299a:	e9cd 0104 	strd	r0, r1, [sp, #16]
 800299e:	1124      	asrs	r4, r4, #4
 80029a0:	2300      	movs	r3, #0
 80029a2:	2602      	movs	r6, #2
 80029a4:	2c00      	cmp	r4, #0
 80029a6:	f040 808f 	bne.w	8002ac8 <_dtoa_r+0x4c0>
 80029aa:	2b00      	cmp	r3, #0
 80029ac:	d1d3      	bne.n	8002956 <_dtoa_r+0x34e>
 80029ae:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80029b0:	e9dd 4504 	ldrd	r4, r5, [sp, #16]
 80029b4:	2b00      	cmp	r3, #0
 80029b6:	f000 8094 	beq.w	8002ae2 <_dtoa_r+0x4da>
 80029ba:	4b75      	ldr	r3, [pc, #468]	@ (8002b90 <_dtoa_r+0x588>)
 80029bc:	2200      	movs	r2, #0
 80029be:	4620      	mov	r0, r4
 80029c0:	4629      	mov	r1, r5
 80029c2:	f7fe f893 	bl	8000aec <__aeabi_dcmplt>
 80029c6:	2800      	cmp	r0, #0
 80029c8:	f000 808b 	beq.w	8002ae2 <_dtoa_r+0x4da>
 80029cc:	9b03      	ldr	r3, [sp, #12]
 80029ce:	2b00      	cmp	r3, #0
 80029d0:	f000 8087 	beq.w	8002ae2 <_dtoa_r+0x4da>
 80029d4:	f1bb 0f00 	cmp.w	fp, #0
 80029d8:	dd34      	ble.n	8002a44 <_dtoa_r+0x43c>
 80029da:	4620      	mov	r0, r4
 80029dc:	4b6d      	ldr	r3, [pc, #436]	@ (8002b94 <_dtoa_r+0x58c>)
 80029de:	2200      	movs	r2, #0
 80029e0:	4629      	mov	r1, r5
 80029e2:	f7fd fe11 	bl	8000608 <__aeabi_dmul>
 80029e6:	e9cd 0104 	strd	r0, r1, [sp, #16]
 80029ea:	f107 38ff 	add.w	r8, r7, #4294967295	@ 0xffffffff
 80029ee:	3601      	adds	r6, #1
 80029f0:	465c      	mov	r4, fp
 80029f2:	4630      	mov	r0, r6
 80029f4:	f7fd fd9e 	bl	8000534 <__aeabi_i2d>
 80029f8:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 80029fc:	f7fd fe04 	bl	8000608 <__aeabi_dmul>
 8002a00:	4b65      	ldr	r3, [pc, #404]	@ (8002b98 <_dtoa_r+0x590>)
 8002a02:	2200      	movs	r2, #0
 8002a04:	f7fd fc4a 	bl	800029c <__adddf3>
 8002a08:	4605      	mov	r5, r0
 8002a0a:	f1a1 7650 	sub.w	r6, r1, #54525952	@ 0x3400000
 8002a0e:	2c00      	cmp	r4, #0
 8002a10:	d16a      	bne.n	8002ae8 <_dtoa_r+0x4e0>
 8002a12:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8002a16:	4b61      	ldr	r3, [pc, #388]	@ (8002b9c <_dtoa_r+0x594>)
 8002a18:	2200      	movs	r2, #0
 8002a1a:	f7fd fc3d 	bl	8000298 <__aeabi_dsub>
 8002a1e:	4602      	mov	r2, r0
 8002a20:	460b      	mov	r3, r1
 8002a22:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8002a26:	462a      	mov	r2, r5
 8002a28:	4633      	mov	r3, r6
 8002a2a:	f7fe f87d 	bl	8000b28 <__aeabi_dcmpgt>
 8002a2e:	2800      	cmp	r0, #0
 8002a30:	f040 8298 	bne.w	8002f64 <_dtoa_r+0x95c>
 8002a34:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8002a38:	462a      	mov	r2, r5
 8002a3a:	f106 4300 	add.w	r3, r6, #2147483648	@ 0x80000000
 8002a3e:	f7fe f855 	bl	8000aec <__aeabi_dcmplt>
 8002a42:	bb38      	cbnz	r0, 8002a94 <_dtoa_r+0x48c>
 8002a44:	e9dd 340a 	ldrd	r3, r4, [sp, #40]	@ 0x28
 8002a48:	e9cd 3404 	strd	r3, r4, [sp, #16]
 8002a4c:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 8002a4e:	2b00      	cmp	r3, #0
 8002a50:	f2c0 8157 	blt.w	8002d02 <_dtoa_r+0x6fa>
 8002a54:	2f0e      	cmp	r7, #14
 8002a56:	f300 8154 	bgt.w	8002d02 <_dtoa_r+0x6fa>
 8002a5a:	4b4b      	ldr	r3, [pc, #300]	@ (8002b88 <_dtoa_r+0x580>)
 8002a5c:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 8002a60:	ed93 7b00 	vldr	d7, [r3]
 8002a64:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8002a66:	2b00      	cmp	r3, #0
 8002a68:	ed8d 7b00 	vstr	d7, [sp]
 8002a6c:	f280 80e5 	bge.w	8002c3a <_dtoa_r+0x632>
 8002a70:	9b03      	ldr	r3, [sp, #12]
 8002a72:	2b00      	cmp	r3, #0
 8002a74:	f300 80e1 	bgt.w	8002c3a <_dtoa_r+0x632>
 8002a78:	d10c      	bne.n	8002a94 <_dtoa_r+0x48c>
 8002a7a:	4b48      	ldr	r3, [pc, #288]	@ (8002b9c <_dtoa_r+0x594>)
 8002a7c:	2200      	movs	r2, #0
 8002a7e:	ec51 0b17 	vmov	r0, r1, d7
 8002a82:	f7fd fdc1 	bl	8000608 <__aeabi_dmul>
 8002a86:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8002a8a:	f7fe f843 	bl	8000b14 <__aeabi_dcmpge>
 8002a8e:	2800      	cmp	r0, #0
 8002a90:	f000 8266 	beq.w	8002f60 <_dtoa_r+0x958>
 8002a94:	2400      	movs	r4, #0
 8002a96:	4625      	mov	r5, r4
 8002a98:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8002a9a:	4656      	mov	r6, sl
 8002a9c:	ea6f 0803 	mvn.w	r8, r3
 8002aa0:	2700      	movs	r7, #0
 8002aa2:	4621      	mov	r1, r4
 8002aa4:	4648      	mov	r0, r9
 8002aa6:	f000 fcbf 	bl	8003428 <_Bfree>
 8002aaa:	2d00      	cmp	r5, #0
 8002aac:	f000 80bd 	beq.w	8002c2a <_dtoa_r+0x622>
 8002ab0:	b12f      	cbz	r7, 8002abe <_dtoa_r+0x4b6>
 8002ab2:	42af      	cmp	r7, r5
 8002ab4:	d003      	beq.n	8002abe <_dtoa_r+0x4b6>
 8002ab6:	4639      	mov	r1, r7
 8002ab8:	4648      	mov	r0, r9
 8002aba:	f000 fcb5 	bl	8003428 <_Bfree>
 8002abe:	4629      	mov	r1, r5
 8002ac0:	4648      	mov	r0, r9
 8002ac2:	f000 fcb1 	bl	8003428 <_Bfree>
 8002ac6:	e0b0      	b.n	8002c2a <_dtoa_r+0x622>
 8002ac8:	07e2      	lsls	r2, r4, #31
 8002aca:	d505      	bpl.n	8002ad8 <_dtoa_r+0x4d0>
 8002acc:	e9d5 2300 	ldrd	r2, r3, [r5]
 8002ad0:	f7fd fd9a 	bl	8000608 <__aeabi_dmul>
 8002ad4:	3601      	adds	r6, #1
 8002ad6:	2301      	movs	r3, #1
 8002ad8:	1064      	asrs	r4, r4, #1
 8002ada:	3508      	adds	r5, #8
 8002adc:	e762      	b.n	80029a4 <_dtoa_r+0x39c>
 8002ade:	2602      	movs	r6, #2
 8002ae0:	e765      	b.n	80029ae <_dtoa_r+0x3a6>
 8002ae2:	9c03      	ldr	r4, [sp, #12]
 8002ae4:	46b8      	mov	r8, r7
 8002ae6:	e784      	b.n	80029f2 <_dtoa_r+0x3ea>
 8002ae8:	4b27      	ldr	r3, [pc, #156]	@ (8002b88 <_dtoa_r+0x580>)
 8002aea:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8002aec:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8002af0:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 8002af4:	4454      	add	r4, sl
 8002af6:	2900      	cmp	r1, #0
 8002af8:	d054      	beq.n	8002ba4 <_dtoa_r+0x59c>
 8002afa:	4929      	ldr	r1, [pc, #164]	@ (8002ba0 <_dtoa_r+0x598>)
 8002afc:	2000      	movs	r0, #0
 8002afe:	f7fd fead 	bl	800085c <__aeabi_ddiv>
 8002b02:	4633      	mov	r3, r6
 8002b04:	462a      	mov	r2, r5
 8002b06:	f7fd fbc7 	bl	8000298 <__aeabi_dsub>
 8002b0a:	e9cd 010e 	strd	r0, r1, [sp, #56]	@ 0x38
 8002b0e:	4656      	mov	r6, sl
 8002b10:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8002b14:	f7fe f828 	bl	8000b68 <__aeabi_d2iz>
 8002b18:	4605      	mov	r5, r0
 8002b1a:	f7fd fd0b 	bl	8000534 <__aeabi_i2d>
 8002b1e:	4602      	mov	r2, r0
 8002b20:	460b      	mov	r3, r1
 8002b22:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8002b26:	f7fd fbb7 	bl	8000298 <__aeabi_dsub>
 8002b2a:	3530      	adds	r5, #48	@ 0x30
 8002b2c:	4602      	mov	r2, r0
 8002b2e:	460b      	mov	r3, r1
 8002b30:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8002b34:	f806 5b01 	strb.w	r5, [r6], #1
 8002b38:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	@ 0x38
 8002b3c:	f7fd ffd6 	bl	8000aec <__aeabi_dcmplt>
 8002b40:	2800      	cmp	r0, #0
 8002b42:	d172      	bne.n	8002c2a <_dtoa_r+0x622>
 8002b44:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8002b48:	4911      	ldr	r1, [pc, #68]	@ (8002b90 <_dtoa_r+0x588>)
 8002b4a:	2000      	movs	r0, #0
 8002b4c:	f7fd fba4 	bl	8000298 <__aeabi_dsub>
 8002b50:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	@ 0x38
 8002b54:	f7fd ffca 	bl	8000aec <__aeabi_dcmplt>
 8002b58:	2800      	cmp	r0, #0
 8002b5a:	f040 80b4 	bne.w	8002cc6 <_dtoa_r+0x6be>
 8002b5e:	42a6      	cmp	r6, r4
 8002b60:	f43f af70 	beq.w	8002a44 <_dtoa_r+0x43c>
 8002b64:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	@ 0x38
 8002b68:	4b0a      	ldr	r3, [pc, #40]	@ (8002b94 <_dtoa_r+0x58c>)
 8002b6a:	2200      	movs	r2, #0
 8002b6c:	f7fd fd4c 	bl	8000608 <__aeabi_dmul>
 8002b70:	4b08      	ldr	r3, [pc, #32]	@ (8002b94 <_dtoa_r+0x58c>)
 8002b72:	e9cd 010e 	strd	r0, r1, [sp, #56]	@ 0x38
 8002b76:	2200      	movs	r2, #0
 8002b78:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8002b7c:	f7fd fd44 	bl	8000608 <__aeabi_dmul>
 8002b80:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8002b84:	e7c4      	b.n	8002b10 <_dtoa_r+0x508>
 8002b86:	bf00      	nop
 8002b88:	08004448 	.word	0x08004448
 8002b8c:	08004420 	.word	0x08004420
 8002b90:	3ff00000 	.word	0x3ff00000
 8002b94:	40240000 	.word	0x40240000
 8002b98:	401c0000 	.word	0x401c0000
 8002b9c:	40140000 	.word	0x40140000
 8002ba0:	3fe00000 	.word	0x3fe00000
 8002ba4:	4631      	mov	r1, r6
 8002ba6:	4628      	mov	r0, r5
 8002ba8:	f7fd fd2e 	bl	8000608 <__aeabi_dmul>
 8002bac:	e9cd 010e 	strd	r0, r1, [sp, #56]	@ 0x38
 8002bb0:	9413      	str	r4, [sp, #76]	@ 0x4c
 8002bb2:	4656      	mov	r6, sl
 8002bb4:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8002bb8:	f7fd ffd6 	bl	8000b68 <__aeabi_d2iz>
 8002bbc:	4605      	mov	r5, r0
 8002bbe:	f7fd fcb9 	bl	8000534 <__aeabi_i2d>
 8002bc2:	4602      	mov	r2, r0
 8002bc4:	460b      	mov	r3, r1
 8002bc6:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8002bca:	f7fd fb65 	bl	8000298 <__aeabi_dsub>
 8002bce:	3530      	adds	r5, #48	@ 0x30
 8002bd0:	f806 5b01 	strb.w	r5, [r6], #1
 8002bd4:	4602      	mov	r2, r0
 8002bd6:	460b      	mov	r3, r1
 8002bd8:	42a6      	cmp	r6, r4
 8002bda:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8002bde:	f04f 0200 	mov.w	r2, #0
 8002be2:	d124      	bne.n	8002c2e <_dtoa_r+0x626>
 8002be4:	4baf      	ldr	r3, [pc, #700]	@ (8002ea4 <_dtoa_r+0x89c>)
 8002be6:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	@ 0x38
 8002bea:	f7fd fb57 	bl	800029c <__adddf3>
 8002bee:	4602      	mov	r2, r0
 8002bf0:	460b      	mov	r3, r1
 8002bf2:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8002bf6:	f7fd ff97 	bl	8000b28 <__aeabi_dcmpgt>
 8002bfa:	2800      	cmp	r0, #0
 8002bfc:	d163      	bne.n	8002cc6 <_dtoa_r+0x6be>
 8002bfe:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	@ 0x38
 8002c02:	49a8      	ldr	r1, [pc, #672]	@ (8002ea4 <_dtoa_r+0x89c>)
 8002c04:	2000      	movs	r0, #0
 8002c06:	f7fd fb47 	bl	8000298 <__aeabi_dsub>
 8002c0a:	4602      	mov	r2, r0
 8002c0c:	460b      	mov	r3, r1
 8002c0e:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8002c12:	f7fd ff6b 	bl	8000aec <__aeabi_dcmplt>
 8002c16:	2800      	cmp	r0, #0
 8002c18:	f43f af14 	beq.w	8002a44 <_dtoa_r+0x43c>
 8002c1c:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8002c1e:	1e73      	subs	r3, r6, #1
 8002c20:	9313      	str	r3, [sp, #76]	@ 0x4c
 8002c22:	f816 3c01 	ldrb.w	r3, [r6, #-1]
 8002c26:	2b30      	cmp	r3, #48	@ 0x30
 8002c28:	d0f8      	beq.n	8002c1c <_dtoa_r+0x614>
 8002c2a:	4647      	mov	r7, r8
 8002c2c:	e03b      	b.n	8002ca6 <_dtoa_r+0x69e>
 8002c2e:	4b9e      	ldr	r3, [pc, #632]	@ (8002ea8 <_dtoa_r+0x8a0>)
 8002c30:	f7fd fcea 	bl	8000608 <__aeabi_dmul>
 8002c34:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8002c38:	e7bc      	b.n	8002bb4 <_dtoa_r+0x5ac>
 8002c3a:	e9dd 4504 	ldrd	r4, r5, [sp, #16]
 8002c3e:	4656      	mov	r6, sl
 8002c40:	e9dd 2300 	ldrd	r2, r3, [sp]
 8002c44:	4620      	mov	r0, r4
 8002c46:	4629      	mov	r1, r5
 8002c48:	f7fd fe08 	bl	800085c <__aeabi_ddiv>
 8002c4c:	f7fd ff8c 	bl	8000b68 <__aeabi_d2iz>
 8002c50:	4680      	mov	r8, r0
 8002c52:	f7fd fc6f 	bl	8000534 <__aeabi_i2d>
 8002c56:	e9dd 2300 	ldrd	r2, r3, [sp]
 8002c5a:	f7fd fcd5 	bl	8000608 <__aeabi_dmul>
 8002c5e:	4602      	mov	r2, r0
 8002c60:	460b      	mov	r3, r1
 8002c62:	4620      	mov	r0, r4
 8002c64:	4629      	mov	r1, r5
 8002c66:	f108 0430 	add.w	r4, r8, #48	@ 0x30
 8002c6a:	f7fd fb15 	bl	8000298 <__aeabi_dsub>
 8002c6e:	f806 4b01 	strb.w	r4, [r6], #1
 8002c72:	9d03      	ldr	r5, [sp, #12]
 8002c74:	eba6 040a 	sub.w	r4, r6, sl
 8002c78:	42a5      	cmp	r5, r4
 8002c7a:	4602      	mov	r2, r0
 8002c7c:	460b      	mov	r3, r1
 8002c7e:	d133      	bne.n	8002ce8 <_dtoa_r+0x6e0>
 8002c80:	f7fd fb0c 	bl	800029c <__adddf3>
 8002c84:	e9dd 2300 	ldrd	r2, r3, [sp]
 8002c88:	4604      	mov	r4, r0
 8002c8a:	460d      	mov	r5, r1
 8002c8c:	f7fd ff4c 	bl	8000b28 <__aeabi_dcmpgt>
 8002c90:	b9c0      	cbnz	r0, 8002cc4 <_dtoa_r+0x6bc>
 8002c92:	e9dd 2300 	ldrd	r2, r3, [sp]
 8002c96:	4620      	mov	r0, r4
 8002c98:	4629      	mov	r1, r5
 8002c9a:	f7fd ff1d 	bl	8000ad8 <__aeabi_dcmpeq>
 8002c9e:	b110      	cbz	r0, 8002ca6 <_dtoa_r+0x69e>
 8002ca0:	f018 0f01 	tst.w	r8, #1
 8002ca4:	d10e      	bne.n	8002cc4 <_dtoa_r+0x6bc>
 8002ca6:	9902      	ldr	r1, [sp, #8]
 8002ca8:	4648      	mov	r0, r9
 8002caa:	f000 fbbd 	bl	8003428 <_Bfree>
 8002cae:	2300      	movs	r3, #0
 8002cb0:	7033      	strb	r3, [r6, #0]
 8002cb2:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8002cb4:	3701      	adds	r7, #1
 8002cb6:	601f      	str	r7, [r3, #0]
 8002cb8:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8002cba:	2b00      	cmp	r3, #0
 8002cbc:	f000 824b 	beq.w	8003156 <_dtoa_r+0xb4e>
 8002cc0:	601e      	str	r6, [r3, #0]
 8002cc2:	e248      	b.n	8003156 <_dtoa_r+0xb4e>
 8002cc4:	46b8      	mov	r8, r7
 8002cc6:	4633      	mov	r3, r6
 8002cc8:	461e      	mov	r6, r3
 8002cca:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8002cce:	2a39      	cmp	r2, #57	@ 0x39
 8002cd0:	d106      	bne.n	8002ce0 <_dtoa_r+0x6d8>
 8002cd2:	459a      	cmp	sl, r3
 8002cd4:	d1f8      	bne.n	8002cc8 <_dtoa_r+0x6c0>
 8002cd6:	2230      	movs	r2, #48	@ 0x30
 8002cd8:	f108 0801 	add.w	r8, r8, #1
 8002cdc:	f88a 2000 	strb.w	r2, [sl]
 8002ce0:	781a      	ldrb	r2, [r3, #0]
 8002ce2:	3201      	adds	r2, #1
 8002ce4:	701a      	strb	r2, [r3, #0]
 8002ce6:	e7a0      	b.n	8002c2a <_dtoa_r+0x622>
 8002ce8:	4b6f      	ldr	r3, [pc, #444]	@ (8002ea8 <_dtoa_r+0x8a0>)
 8002cea:	2200      	movs	r2, #0
 8002cec:	f7fd fc8c 	bl	8000608 <__aeabi_dmul>
 8002cf0:	2200      	movs	r2, #0
 8002cf2:	2300      	movs	r3, #0
 8002cf4:	4604      	mov	r4, r0
 8002cf6:	460d      	mov	r5, r1
 8002cf8:	f7fd feee 	bl	8000ad8 <__aeabi_dcmpeq>
 8002cfc:	2800      	cmp	r0, #0
 8002cfe:	d09f      	beq.n	8002c40 <_dtoa_r+0x638>
 8002d00:	e7d1      	b.n	8002ca6 <_dtoa_r+0x69e>
 8002d02:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8002d04:	2a00      	cmp	r2, #0
 8002d06:	f000 80ea 	beq.w	8002ede <_dtoa_r+0x8d6>
 8002d0a:	9a07      	ldr	r2, [sp, #28]
 8002d0c:	2a01      	cmp	r2, #1
 8002d0e:	f300 80cd 	bgt.w	8002eac <_dtoa_r+0x8a4>
 8002d12:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8002d14:	2a00      	cmp	r2, #0
 8002d16:	f000 80c1 	beq.w	8002e9c <_dtoa_r+0x894>
 8002d1a:	f203 4333 	addw	r3, r3, #1075	@ 0x433
 8002d1e:	9c08      	ldr	r4, [sp, #32]
 8002d20:	9e00      	ldr	r6, [sp, #0]
 8002d22:	9a00      	ldr	r2, [sp, #0]
 8002d24:	441a      	add	r2, r3
 8002d26:	9200      	str	r2, [sp, #0]
 8002d28:	9a06      	ldr	r2, [sp, #24]
 8002d2a:	2101      	movs	r1, #1
 8002d2c:	441a      	add	r2, r3
 8002d2e:	4648      	mov	r0, r9
 8002d30:	9206      	str	r2, [sp, #24]
 8002d32:	f000 fc2d 	bl	8003590 <__i2b>
 8002d36:	4605      	mov	r5, r0
 8002d38:	b166      	cbz	r6, 8002d54 <_dtoa_r+0x74c>
 8002d3a:	9b06      	ldr	r3, [sp, #24]
 8002d3c:	2b00      	cmp	r3, #0
 8002d3e:	dd09      	ble.n	8002d54 <_dtoa_r+0x74c>
 8002d40:	42b3      	cmp	r3, r6
 8002d42:	9a00      	ldr	r2, [sp, #0]
 8002d44:	bfa8      	it	ge
 8002d46:	4633      	movge	r3, r6
 8002d48:	1ad2      	subs	r2, r2, r3
 8002d4a:	9200      	str	r2, [sp, #0]
 8002d4c:	9a06      	ldr	r2, [sp, #24]
 8002d4e:	1af6      	subs	r6, r6, r3
 8002d50:	1ad3      	subs	r3, r2, r3
 8002d52:	9306      	str	r3, [sp, #24]
 8002d54:	9b08      	ldr	r3, [sp, #32]
 8002d56:	b30b      	cbz	r3, 8002d9c <_dtoa_r+0x794>
 8002d58:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8002d5a:	2b00      	cmp	r3, #0
 8002d5c:	f000 80c6 	beq.w	8002eec <_dtoa_r+0x8e4>
 8002d60:	2c00      	cmp	r4, #0
 8002d62:	f000 80c0 	beq.w	8002ee6 <_dtoa_r+0x8de>
 8002d66:	4629      	mov	r1, r5
 8002d68:	4622      	mov	r2, r4
 8002d6a:	4648      	mov	r0, r9
 8002d6c:	f000 fcc8 	bl	8003700 <__pow5mult>
 8002d70:	9a02      	ldr	r2, [sp, #8]
 8002d72:	4601      	mov	r1, r0
 8002d74:	4605      	mov	r5, r0
 8002d76:	4648      	mov	r0, r9
 8002d78:	f000 fc20 	bl	80035bc <__multiply>
 8002d7c:	9902      	ldr	r1, [sp, #8]
 8002d7e:	4680      	mov	r8, r0
 8002d80:	4648      	mov	r0, r9
 8002d82:	f000 fb51 	bl	8003428 <_Bfree>
 8002d86:	9b08      	ldr	r3, [sp, #32]
 8002d88:	1b1b      	subs	r3, r3, r4
 8002d8a:	9308      	str	r3, [sp, #32]
 8002d8c:	f000 80b1 	beq.w	8002ef2 <_dtoa_r+0x8ea>
 8002d90:	9a08      	ldr	r2, [sp, #32]
 8002d92:	4641      	mov	r1, r8
 8002d94:	4648      	mov	r0, r9
 8002d96:	f000 fcb3 	bl	8003700 <__pow5mult>
 8002d9a:	9002      	str	r0, [sp, #8]
 8002d9c:	2101      	movs	r1, #1
 8002d9e:	4648      	mov	r0, r9
 8002da0:	f000 fbf6 	bl	8003590 <__i2b>
 8002da4:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8002da6:	4604      	mov	r4, r0
 8002da8:	2b00      	cmp	r3, #0
 8002daa:	f000 81d8 	beq.w	800315e <_dtoa_r+0xb56>
 8002dae:	461a      	mov	r2, r3
 8002db0:	4601      	mov	r1, r0
 8002db2:	4648      	mov	r0, r9
 8002db4:	f000 fca4 	bl	8003700 <__pow5mult>
 8002db8:	9b07      	ldr	r3, [sp, #28]
 8002dba:	2b01      	cmp	r3, #1
 8002dbc:	4604      	mov	r4, r0
 8002dbe:	f300 809f 	bgt.w	8002f00 <_dtoa_r+0x8f8>
 8002dc2:	9b04      	ldr	r3, [sp, #16]
 8002dc4:	2b00      	cmp	r3, #0
 8002dc6:	f040 8097 	bne.w	8002ef8 <_dtoa_r+0x8f0>
 8002dca:	9b05      	ldr	r3, [sp, #20]
 8002dcc:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8002dd0:	2b00      	cmp	r3, #0
 8002dd2:	f040 8093 	bne.w	8002efc <_dtoa_r+0x8f4>
 8002dd6:	9b05      	ldr	r3, [sp, #20]
 8002dd8:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8002ddc:	0d1b      	lsrs	r3, r3, #20
 8002dde:	051b      	lsls	r3, r3, #20
 8002de0:	b133      	cbz	r3, 8002df0 <_dtoa_r+0x7e8>
 8002de2:	9b00      	ldr	r3, [sp, #0]
 8002de4:	3301      	adds	r3, #1
 8002de6:	9300      	str	r3, [sp, #0]
 8002de8:	9b06      	ldr	r3, [sp, #24]
 8002dea:	3301      	adds	r3, #1
 8002dec:	9306      	str	r3, [sp, #24]
 8002dee:	2301      	movs	r3, #1
 8002df0:	9308      	str	r3, [sp, #32]
 8002df2:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8002df4:	2b00      	cmp	r3, #0
 8002df6:	f000 81b8 	beq.w	800316a <_dtoa_r+0xb62>
 8002dfa:	6923      	ldr	r3, [r4, #16]
 8002dfc:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8002e00:	6918      	ldr	r0, [r3, #16]
 8002e02:	f000 fb79 	bl	80034f8 <__hi0bits>
 8002e06:	f1c0 0020 	rsb	r0, r0, #32
 8002e0a:	9b06      	ldr	r3, [sp, #24]
 8002e0c:	4418      	add	r0, r3
 8002e0e:	f010 001f 	ands.w	r0, r0, #31
 8002e12:	f000 8082 	beq.w	8002f1a <_dtoa_r+0x912>
 8002e16:	f1c0 0320 	rsb	r3, r0, #32
 8002e1a:	2b04      	cmp	r3, #4
 8002e1c:	dd73      	ble.n	8002f06 <_dtoa_r+0x8fe>
 8002e1e:	9b00      	ldr	r3, [sp, #0]
 8002e20:	f1c0 001c 	rsb	r0, r0, #28
 8002e24:	4403      	add	r3, r0
 8002e26:	9300      	str	r3, [sp, #0]
 8002e28:	9b06      	ldr	r3, [sp, #24]
 8002e2a:	4403      	add	r3, r0
 8002e2c:	4406      	add	r6, r0
 8002e2e:	9306      	str	r3, [sp, #24]
 8002e30:	9b00      	ldr	r3, [sp, #0]
 8002e32:	2b00      	cmp	r3, #0
 8002e34:	dd05      	ble.n	8002e42 <_dtoa_r+0x83a>
 8002e36:	9902      	ldr	r1, [sp, #8]
 8002e38:	461a      	mov	r2, r3
 8002e3a:	4648      	mov	r0, r9
 8002e3c:	f000 fcba 	bl	80037b4 <__lshift>
 8002e40:	9002      	str	r0, [sp, #8]
 8002e42:	9b06      	ldr	r3, [sp, #24]
 8002e44:	2b00      	cmp	r3, #0
 8002e46:	dd05      	ble.n	8002e54 <_dtoa_r+0x84c>
 8002e48:	4621      	mov	r1, r4
 8002e4a:	461a      	mov	r2, r3
 8002e4c:	4648      	mov	r0, r9
 8002e4e:	f000 fcb1 	bl	80037b4 <__lshift>
 8002e52:	4604      	mov	r4, r0
 8002e54:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8002e56:	2b00      	cmp	r3, #0
 8002e58:	d061      	beq.n	8002f1e <_dtoa_r+0x916>
 8002e5a:	9802      	ldr	r0, [sp, #8]
 8002e5c:	4621      	mov	r1, r4
 8002e5e:	f000 fd15 	bl	800388c <__mcmp>
 8002e62:	2800      	cmp	r0, #0
 8002e64:	da5b      	bge.n	8002f1e <_dtoa_r+0x916>
 8002e66:	2300      	movs	r3, #0
 8002e68:	9902      	ldr	r1, [sp, #8]
 8002e6a:	220a      	movs	r2, #10
 8002e6c:	4648      	mov	r0, r9
 8002e6e:	f000 fafd 	bl	800346c <__multadd>
 8002e72:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8002e74:	9002      	str	r0, [sp, #8]
 8002e76:	f107 38ff 	add.w	r8, r7, #4294967295	@ 0xffffffff
 8002e7a:	2b00      	cmp	r3, #0
 8002e7c:	f000 8177 	beq.w	800316e <_dtoa_r+0xb66>
 8002e80:	4629      	mov	r1, r5
 8002e82:	2300      	movs	r3, #0
 8002e84:	220a      	movs	r2, #10
 8002e86:	4648      	mov	r0, r9
 8002e88:	f000 faf0 	bl	800346c <__multadd>
 8002e8c:	f1bb 0f00 	cmp.w	fp, #0
 8002e90:	4605      	mov	r5, r0
 8002e92:	dc6f      	bgt.n	8002f74 <_dtoa_r+0x96c>
 8002e94:	9b07      	ldr	r3, [sp, #28]
 8002e96:	2b02      	cmp	r3, #2
 8002e98:	dc49      	bgt.n	8002f2e <_dtoa_r+0x926>
 8002e9a:	e06b      	b.n	8002f74 <_dtoa_r+0x96c>
 8002e9c:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8002e9e:	f1c3 0336 	rsb	r3, r3, #54	@ 0x36
 8002ea2:	e73c      	b.n	8002d1e <_dtoa_r+0x716>
 8002ea4:	3fe00000 	.word	0x3fe00000
 8002ea8:	40240000 	.word	0x40240000
 8002eac:	9b03      	ldr	r3, [sp, #12]
 8002eae:	1e5c      	subs	r4, r3, #1
 8002eb0:	9b08      	ldr	r3, [sp, #32]
 8002eb2:	42a3      	cmp	r3, r4
 8002eb4:	db09      	blt.n	8002eca <_dtoa_r+0x8c2>
 8002eb6:	1b1c      	subs	r4, r3, r4
 8002eb8:	9b03      	ldr	r3, [sp, #12]
 8002eba:	2b00      	cmp	r3, #0
 8002ebc:	f6bf af30 	bge.w	8002d20 <_dtoa_r+0x718>
 8002ec0:	9b00      	ldr	r3, [sp, #0]
 8002ec2:	9a03      	ldr	r2, [sp, #12]
 8002ec4:	1a9e      	subs	r6, r3, r2
 8002ec6:	2300      	movs	r3, #0
 8002ec8:	e72b      	b.n	8002d22 <_dtoa_r+0x71a>
 8002eca:	9b08      	ldr	r3, [sp, #32]
 8002ecc:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8002ece:	9408      	str	r4, [sp, #32]
 8002ed0:	1ae3      	subs	r3, r4, r3
 8002ed2:	441a      	add	r2, r3
 8002ed4:	9e00      	ldr	r6, [sp, #0]
 8002ed6:	9b03      	ldr	r3, [sp, #12]
 8002ed8:	920d      	str	r2, [sp, #52]	@ 0x34
 8002eda:	2400      	movs	r4, #0
 8002edc:	e721      	b.n	8002d22 <_dtoa_r+0x71a>
 8002ede:	9c08      	ldr	r4, [sp, #32]
 8002ee0:	9e00      	ldr	r6, [sp, #0]
 8002ee2:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 8002ee4:	e728      	b.n	8002d38 <_dtoa_r+0x730>
 8002ee6:	f8dd 8008 	ldr.w	r8, [sp, #8]
 8002eea:	e751      	b.n	8002d90 <_dtoa_r+0x788>
 8002eec:	9a08      	ldr	r2, [sp, #32]
 8002eee:	9902      	ldr	r1, [sp, #8]
 8002ef0:	e750      	b.n	8002d94 <_dtoa_r+0x78c>
 8002ef2:	f8cd 8008 	str.w	r8, [sp, #8]
 8002ef6:	e751      	b.n	8002d9c <_dtoa_r+0x794>
 8002ef8:	2300      	movs	r3, #0
 8002efa:	e779      	b.n	8002df0 <_dtoa_r+0x7e8>
 8002efc:	9b04      	ldr	r3, [sp, #16]
 8002efe:	e777      	b.n	8002df0 <_dtoa_r+0x7e8>
 8002f00:	2300      	movs	r3, #0
 8002f02:	9308      	str	r3, [sp, #32]
 8002f04:	e779      	b.n	8002dfa <_dtoa_r+0x7f2>
 8002f06:	d093      	beq.n	8002e30 <_dtoa_r+0x828>
 8002f08:	9a00      	ldr	r2, [sp, #0]
 8002f0a:	331c      	adds	r3, #28
 8002f0c:	441a      	add	r2, r3
 8002f0e:	9200      	str	r2, [sp, #0]
 8002f10:	9a06      	ldr	r2, [sp, #24]
 8002f12:	441a      	add	r2, r3
 8002f14:	441e      	add	r6, r3
 8002f16:	9206      	str	r2, [sp, #24]
 8002f18:	e78a      	b.n	8002e30 <_dtoa_r+0x828>
 8002f1a:	4603      	mov	r3, r0
 8002f1c:	e7f4      	b.n	8002f08 <_dtoa_r+0x900>
 8002f1e:	9b03      	ldr	r3, [sp, #12]
 8002f20:	2b00      	cmp	r3, #0
 8002f22:	46b8      	mov	r8, r7
 8002f24:	dc20      	bgt.n	8002f68 <_dtoa_r+0x960>
 8002f26:	469b      	mov	fp, r3
 8002f28:	9b07      	ldr	r3, [sp, #28]
 8002f2a:	2b02      	cmp	r3, #2
 8002f2c:	dd1e      	ble.n	8002f6c <_dtoa_r+0x964>
 8002f2e:	f1bb 0f00 	cmp.w	fp, #0
 8002f32:	f47f adb1 	bne.w	8002a98 <_dtoa_r+0x490>
 8002f36:	4621      	mov	r1, r4
 8002f38:	465b      	mov	r3, fp
 8002f3a:	2205      	movs	r2, #5
 8002f3c:	4648      	mov	r0, r9
 8002f3e:	f000 fa95 	bl	800346c <__multadd>
 8002f42:	4601      	mov	r1, r0
 8002f44:	4604      	mov	r4, r0
 8002f46:	9802      	ldr	r0, [sp, #8]
 8002f48:	f000 fca0 	bl	800388c <__mcmp>
 8002f4c:	2800      	cmp	r0, #0
 8002f4e:	f77f ada3 	ble.w	8002a98 <_dtoa_r+0x490>
 8002f52:	4656      	mov	r6, sl
 8002f54:	2331      	movs	r3, #49	@ 0x31
 8002f56:	f806 3b01 	strb.w	r3, [r6], #1
 8002f5a:	f108 0801 	add.w	r8, r8, #1
 8002f5e:	e59f      	b.n	8002aa0 <_dtoa_r+0x498>
 8002f60:	9c03      	ldr	r4, [sp, #12]
 8002f62:	46b8      	mov	r8, r7
 8002f64:	4625      	mov	r5, r4
 8002f66:	e7f4      	b.n	8002f52 <_dtoa_r+0x94a>
 8002f68:	f8dd b00c 	ldr.w	fp, [sp, #12]
 8002f6c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8002f6e:	2b00      	cmp	r3, #0
 8002f70:	f000 8101 	beq.w	8003176 <_dtoa_r+0xb6e>
 8002f74:	2e00      	cmp	r6, #0
 8002f76:	dd05      	ble.n	8002f84 <_dtoa_r+0x97c>
 8002f78:	4629      	mov	r1, r5
 8002f7a:	4632      	mov	r2, r6
 8002f7c:	4648      	mov	r0, r9
 8002f7e:	f000 fc19 	bl	80037b4 <__lshift>
 8002f82:	4605      	mov	r5, r0
 8002f84:	9b08      	ldr	r3, [sp, #32]
 8002f86:	2b00      	cmp	r3, #0
 8002f88:	d05c      	beq.n	8003044 <_dtoa_r+0xa3c>
 8002f8a:	6869      	ldr	r1, [r5, #4]
 8002f8c:	4648      	mov	r0, r9
 8002f8e:	f000 fa0b 	bl	80033a8 <_Balloc>
 8002f92:	4606      	mov	r6, r0
 8002f94:	b928      	cbnz	r0, 8002fa2 <_dtoa_r+0x99a>
 8002f96:	4b82      	ldr	r3, [pc, #520]	@ (80031a0 <_dtoa_r+0xb98>)
 8002f98:	4602      	mov	r2, r0
 8002f9a:	f240 21ef 	movw	r1, #751	@ 0x2ef
 8002f9e:	f7ff bb4a 	b.w	8002636 <_dtoa_r+0x2e>
 8002fa2:	692a      	ldr	r2, [r5, #16]
 8002fa4:	3202      	adds	r2, #2
 8002fa6:	0092      	lsls	r2, r2, #2
 8002fa8:	f105 010c 	add.w	r1, r5, #12
 8002fac:	300c      	adds	r0, #12
 8002fae:	f001 f807 	bl	8003fc0 <memcpy>
 8002fb2:	2201      	movs	r2, #1
 8002fb4:	4631      	mov	r1, r6
 8002fb6:	4648      	mov	r0, r9
 8002fb8:	f000 fbfc 	bl	80037b4 <__lshift>
 8002fbc:	f10a 0301 	add.w	r3, sl, #1
 8002fc0:	9300      	str	r3, [sp, #0]
 8002fc2:	eb0a 030b 	add.w	r3, sl, fp
 8002fc6:	9308      	str	r3, [sp, #32]
 8002fc8:	9b04      	ldr	r3, [sp, #16]
 8002fca:	f003 0301 	and.w	r3, r3, #1
 8002fce:	462f      	mov	r7, r5
 8002fd0:	9306      	str	r3, [sp, #24]
 8002fd2:	4605      	mov	r5, r0
 8002fd4:	9b00      	ldr	r3, [sp, #0]
 8002fd6:	9802      	ldr	r0, [sp, #8]
 8002fd8:	4621      	mov	r1, r4
 8002fda:	f103 3bff 	add.w	fp, r3, #4294967295	@ 0xffffffff
 8002fde:	f7ff fa8a 	bl	80024f6 <quorem>
 8002fe2:	4603      	mov	r3, r0
 8002fe4:	3330      	adds	r3, #48	@ 0x30
 8002fe6:	9003      	str	r0, [sp, #12]
 8002fe8:	4639      	mov	r1, r7
 8002fea:	9802      	ldr	r0, [sp, #8]
 8002fec:	9309      	str	r3, [sp, #36]	@ 0x24
 8002fee:	f000 fc4d 	bl	800388c <__mcmp>
 8002ff2:	462a      	mov	r2, r5
 8002ff4:	9004      	str	r0, [sp, #16]
 8002ff6:	4621      	mov	r1, r4
 8002ff8:	4648      	mov	r0, r9
 8002ffa:	f000 fc63 	bl	80038c4 <__mdiff>
 8002ffe:	68c2      	ldr	r2, [r0, #12]
 8003000:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8003002:	4606      	mov	r6, r0
 8003004:	bb02      	cbnz	r2, 8003048 <_dtoa_r+0xa40>
 8003006:	4601      	mov	r1, r0
 8003008:	9802      	ldr	r0, [sp, #8]
 800300a:	f000 fc3f 	bl	800388c <__mcmp>
 800300e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8003010:	4602      	mov	r2, r0
 8003012:	4631      	mov	r1, r6
 8003014:	4648      	mov	r0, r9
 8003016:	920c      	str	r2, [sp, #48]	@ 0x30
 8003018:	9309      	str	r3, [sp, #36]	@ 0x24
 800301a:	f000 fa05 	bl	8003428 <_Bfree>
 800301e:	9b07      	ldr	r3, [sp, #28]
 8003020:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8003022:	9e00      	ldr	r6, [sp, #0]
 8003024:	ea42 0103 	orr.w	r1, r2, r3
 8003028:	9b06      	ldr	r3, [sp, #24]
 800302a:	4319      	orrs	r1, r3
 800302c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800302e:	d10d      	bne.n	800304c <_dtoa_r+0xa44>
 8003030:	2b39      	cmp	r3, #57	@ 0x39
 8003032:	d027      	beq.n	8003084 <_dtoa_r+0xa7c>
 8003034:	9a04      	ldr	r2, [sp, #16]
 8003036:	2a00      	cmp	r2, #0
 8003038:	dd01      	ble.n	800303e <_dtoa_r+0xa36>
 800303a:	9b03      	ldr	r3, [sp, #12]
 800303c:	3331      	adds	r3, #49	@ 0x31
 800303e:	f88b 3000 	strb.w	r3, [fp]
 8003042:	e52e      	b.n	8002aa2 <_dtoa_r+0x49a>
 8003044:	4628      	mov	r0, r5
 8003046:	e7b9      	b.n	8002fbc <_dtoa_r+0x9b4>
 8003048:	2201      	movs	r2, #1
 800304a:	e7e2      	b.n	8003012 <_dtoa_r+0xa0a>
 800304c:	9904      	ldr	r1, [sp, #16]
 800304e:	2900      	cmp	r1, #0
 8003050:	db04      	blt.n	800305c <_dtoa_r+0xa54>
 8003052:	9807      	ldr	r0, [sp, #28]
 8003054:	4301      	orrs	r1, r0
 8003056:	9806      	ldr	r0, [sp, #24]
 8003058:	4301      	orrs	r1, r0
 800305a:	d120      	bne.n	800309e <_dtoa_r+0xa96>
 800305c:	2a00      	cmp	r2, #0
 800305e:	ddee      	ble.n	800303e <_dtoa_r+0xa36>
 8003060:	9902      	ldr	r1, [sp, #8]
 8003062:	9300      	str	r3, [sp, #0]
 8003064:	2201      	movs	r2, #1
 8003066:	4648      	mov	r0, r9
 8003068:	f000 fba4 	bl	80037b4 <__lshift>
 800306c:	4621      	mov	r1, r4
 800306e:	9002      	str	r0, [sp, #8]
 8003070:	f000 fc0c 	bl	800388c <__mcmp>
 8003074:	2800      	cmp	r0, #0
 8003076:	9b00      	ldr	r3, [sp, #0]
 8003078:	dc02      	bgt.n	8003080 <_dtoa_r+0xa78>
 800307a:	d1e0      	bne.n	800303e <_dtoa_r+0xa36>
 800307c:	07da      	lsls	r2, r3, #31
 800307e:	d5de      	bpl.n	800303e <_dtoa_r+0xa36>
 8003080:	2b39      	cmp	r3, #57	@ 0x39
 8003082:	d1da      	bne.n	800303a <_dtoa_r+0xa32>
 8003084:	2339      	movs	r3, #57	@ 0x39
 8003086:	f88b 3000 	strb.w	r3, [fp]
 800308a:	4633      	mov	r3, r6
 800308c:	461e      	mov	r6, r3
 800308e:	3b01      	subs	r3, #1
 8003090:	f816 2c01 	ldrb.w	r2, [r6, #-1]
 8003094:	2a39      	cmp	r2, #57	@ 0x39
 8003096:	d04e      	beq.n	8003136 <_dtoa_r+0xb2e>
 8003098:	3201      	adds	r2, #1
 800309a:	701a      	strb	r2, [r3, #0]
 800309c:	e501      	b.n	8002aa2 <_dtoa_r+0x49a>
 800309e:	2a00      	cmp	r2, #0
 80030a0:	dd03      	ble.n	80030aa <_dtoa_r+0xaa2>
 80030a2:	2b39      	cmp	r3, #57	@ 0x39
 80030a4:	d0ee      	beq.n	8003084 <_dtoa_r+0xa7c>
 80030a6:	3301      	adds	r3, #1
 80030a8:	e7c9      	b.n	800303e <_dtoa_r+0xa36>
 80030aa:	9a00      	ldr	r2, [sp, #0]
 80030ac:	9908      	ldr	r1, [sp, #32]
 80030ae:	f802 3c01 	strb.w	r3, [r2, #-1]
 80030b2:	428a      	cmp	r2, r1
 80030b4:	d028      	beq.n	8003108 <_dtoa_r+0xb00>
 80030b6:	9902      	ldr	r1, [sp, #8]
 80030b8:	2300      	movs	r3, #0
 80030ba:	220a      	movs	r2, #10
 80030bc:	4648      	mov	r0, r9
 80030be:	f000 f9d5 	bl	800346c <__multadd>
 80030c2:	42af      	cmp	r7, r5
 80030c4:	9002      	str	r0, [sp, #8]
 80030c6:	f04f 0300 	mov.w	r3, #0
 80030ca:	f04f 020a 	mov.w	r2, #10
 80030ce:	4639      	mov	r1, r7
 80030d0:	4648      	mov	r0, r9
 80030d2:	d107      	bne.n	80030e4 <_dtoa_r+0xadc>
 80030d4:	f000 f9ca 	bl	800346c <__multadd>
 80030d8:	4607      	mov	r7, r0
 80030da:	4605      	mov	r5, r0
 80030dc:	9b00      	ldr	r3, [sp, #0]
 80030de:	3301      	adds	r3, #1
 80030e0:	9300      	str	r3, [sp, #0]
 80030e2:	e777      	b.n	8002fd4 <_dtoa_r+0x9cc>
 80030e4:	f000 f9c2 	bl	800346c <__multadd>
 80030e8:	4629      	mov	r1, r5
 80030ea:	4607      	mov	r7, r0
 80030ec:	2300      	movs	r3, #0
 80030ee:	220a      	movs	r2, #10
 80030f0:	4648      	mov	r0, r9
 80030f2:	f000 f9bb 	bl	800346c <__multadd>
 80030f6:	4605      	mov	r5, r0
 80030f8:	e7f0      	b.n	80030dc <_dtoa_r+0xad4>
 80030fa:	f1bb 0f00 	cmp.w	fp, #0
 80030fe:	bfcc      	ite	gt
 8003100:	465e      	movgt	r6, fp
 8003102:	2601      	movle	r6, #1
 8003104:	4456      	add	r6, sl
 8003106:	2700      	movs	r7, #0
 8003108:	9902      	ldr	r1, [sp, #8]
 800310a:	9300      	str	r3, [sp, #0]
 800310c:	2201      	movs	r2, #1
 800310e:	4648      	mov	r0, r9
 8003110:	f000 fb50 	bl	80037b4 <__lshift>
 8003114:	4621      	mov	r1, r4
 8003116:	9002      	str	r0, [sp, #8]
 8003118:	f000 fbb8 	bl	800388c <__mcmp>
 800311c:	2800      	cmp	r0, #0
 800311e:	dcb4      	bgt.n	800308a <_dtoa_r+0xa82>
 8003120:	d102      	bne.n	8003128 <_dtoa_r+0xb20>
 8003122:	9b00      	ldr	r3, [sp, #0]
 8003124:	07db      	lsls	r3, r3, #31
 8003126:	d4b0      	bmi.n	800308a <_dtoa_r+0xa82>
 8003128:	4633      	mov	r3, r6
 800312a:	461e      	mov	r6, r3
 800312c:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8003130:	2a30      	cmp	r2, #48	@ 0x30
 8003132:	d0fa      	beq.n	800312a <_dtoa_r+0xb22>
 8003134:	e4b5      	b.n	8002aa2 <_dtoa_r+0x49a>
 8003136:	459a      	cmp	sl, r3
 8003138:	d1a8      	bne.n	800308c <_dtoa_r+0xa84>
 800313a:	2331      	movs	r3, #49	@ 0x31
 800313c:	f108 0801 	add.w	r8, r8, #1
 8003140:	f88a 3000 	strb.w	r3, [sl]
 8003144:	e4ad      	b.n	8002aa2 <_dtoa_r+0x49a>
 8003146:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8003148:	f8df a058 	ldr.w	sl, [pc, #88]	@ 80031a4 <_dtoa_r+0xb9c>
 800314c:	b11b      	cbz	r3, 8003156 <_dtoa_r+0xb4e>
 800314e:	f10a 0308 	add.w	r3, sl, #8
 8003152:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 8003154:	6013      	str	r3, [r2, #0]
 8003156:	4650      	mov	r0, sl
 8003158:	b017      	add	sp, #92	@ 0x5c
 800315a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800315e:	9b07      	ldr	r3, [sp, #28]
 8003160:	2b01      	cmp	r3, #1
 8003162:	f77f ae2e 	ble.w	8002dc2 <_dtoa_r+0x7ba>
 8003166:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8003168:	9308      	str	r3, [sp, #32]
 800316a:	2001      	movs	r0, #1
 800316c:	e64d      	b.n	8002e0a <_dtoa_r+0x802>
 800316e:	f1bb 0f00 	cmp.w	fp, #0
 8003172:	f77f aed9 	ble.w	8002f28 <_dtoa_r+0x920>
 8003176:	4656      	mov	r6, sl
 8003178:	9802      	ldr	r0, [sp, #8]
 800317a:	4621      	mov	r1, r4
 800317c:	f7ff f9bb 	bl	80024f6 <quorem>
 8003180:	f100 0330 	add.w	r3, r0, #48	@ 0x30
 8003184:	f806 3b01 	strb.w	r3, [r6], #1
 8003188:	eba6 020a 	sub.w	r2, r6, sl
 800318c:	4593      	cmp	fp, r2
 800318e:	ddb4      	ble.n	80030fa <_dtoa_r+0xaf2>
 8003190:	9902      	ldr	r1, [sp, #8]
 8003192:	2300      	movs	r3, #0
 8003194:	220a      	movs	r2, #10
 8003196:	4648      	mov	r0, r9
 8003198:	f000 f968 	bl	800346c <__multadd>
 800319c:	9002      	str	r0, [sp, #8]
 800319e:	e7eb      	b.n	8003178 <_dtoa_r+0xb70>
 80031a0:	0800434c 	.word	0x0800434c
 80031a4:	080042d0 	.word	0x080042d0

080031a8 <_free_r>:
 80031a8:	b538      	push	{r3, r4, r5, lr}
 80031aa:	4605      	mov	r5, r0
 80031ac:	2900      	cmp	r1, #0
 80031ae:	d041      	beq.n	8003234 <_free_r+0x8c>
 80031b0:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80031b4:	1f0c      	subs	r4, r1, #4
 80031b6:	2b00      	cmp	r3, #0
 80031b8:	bfb8      	it	lt
 80031ba:	18e4      	addlt	r4, r4, r3
 80031bc:	f000 f8e8 	bl	8003390 <__malloc_lock>
 80031c0:	4a1d      	ldr	r2, [pc, #116]	@ (8003238 <_free_r+0x90>)
 80031c2:	6813      	ldr	r3, [r2, #0]
 80031c4:	b933      	cbnz	r3, 80031d4 <_free_r+0x2c>
 80031c6:	6063      	str	r3, [r4, #4]
 80031c8:	6014      	str	r4, [r2, #0]
 80031ca:	4628      	mov	r0, r5
 80031cc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80031d0:	f000 b8e4 	b.w	800339c <__malloc_unlock>
 80031d4:	42a3      	cmp	r3, r4
 80031d6:	d908      	bls.n	80031ea <_free_r+0x42>
 80031d8:	6820      	ldr	r0, [r4, #0]
 80031da:	1821      	adds	r1, r4, r0
 80031dc:	428b      	cmp	r3, r1
 80031de:	bf01      	itttt	eq
 80031e0:	6819      	ldreq	r1, [r3, #0]
 80031e2:	685b      	ldreq	r3, [r3, #4]
 80031e4:	1809      	addeq	r1, r1, r0
 80031e6:	6021      	streq	r1, [r4, #0]
 80031e8:	e7ed      	b.n	80031c6 <_free_r+0x1e>
 80031ea:	461a      	mov	r2, r3
 80031ec:	685b      	ldr	r3, [r3, #4]
 80031ee:	b10b      	cbz	r3, 80031f4 <_free_r+0x4c>
 80031f0:	42a3      	cmp	r3, r4
 80031f2:	d9fa      	bls.n	80031ea <_free_r+0x42>
 80031f4:	6811      	ldr	r1, [r2, #0]
 80031f6:	1850      	adds	r0, r2, r1
 80031f8:	42a0      	cmp	r0, r4
 80031fa:	d10b      	bne.n	8003214 <_free_r+0x6c>
 80031fc:	6820      	ldr	r0, [r4, #0]
 80031fe:	4401      	add	r1, r0
 8003200:	1850      	adds	r0, r2, r1
 8003202:	4283      	cmp	r3, r0
 8003204:	6011      	str	r1, [r2, #0]
 8003206:	d1e0      	bne.n	80031ca <_free_r+0x22>
 8003208:	6818      	ldr	r0, [r3, #0]
 800320a:	685b      	ldr	r3, [r3, #4]
 800320c:	6053      	str	r3, [r2, #4]
 800320e:	4408      	add	r0, r1
 8003210:	6010      	str	r0, [r2, #0]
 8003212:	e7da      	b.n	80031ca <_free_r+0x22>
 8003214:	d902      	bls.n	800321c <_free_r+0x74>
 8003216:	230c      	movs	r3, #12
 8003218:	602b      	str	r3, [r5, #0]
 800321a:	e7d6      	b.n	80031ca <_free_r+0x22>
 800321c:	6820      	ldr	r0, [r4, #0]
 800321e:	1821      	adds	r1, r4, r0
 8003220:	428b      	cmp	r3, r1
 8003222:	bf04      	itt	eq
 8003224:	6819      	ldreq	r1, [r3, #0]
 8003226:	685b      	ldreq	r3, [r3, #4]
 8003228:	6063      	str	r3, [r4, #4]
 800322a:	bf04      	itt	eq
 800322c:	1809      	addeq	r1, r1, r0
 800322e:	6021      	streq	r1, [r4, #0]
 8003230:	6054      	str	r4, [r2, #4]
 8003232:	e7ca      	b.n	80031ca <_free_r+0x22>
 8003234:	bd38      	pop	{r3, r4, r5, pc}
 8003236:	bf00      	nop
 8003238:	20000340 	.word	0x20000340

0800323c <malloc>:
 800323c:	4b02      	ldr	r3, [pc, #8]	@ (8003248 <malloc+0xc>)
 800323e:	4601      	mov	r1, r0
 8003240:	6818      	ldr	r0, [r3, #0]
 8003242:	f000 b825 	b.w	8003290 <_malloc_r>
 8003246:	bf00      	nop
 8003248:	2000000c 	.word	0x2000000c

0800324c <sbrk_aligned>:
 800324c:	b570      	push	{r4, r5, r6, lr}
 800324e:	4e0f      	ldr	r6, [pc, #60]	@ (800328c <sbrk_aligned+0x40>)
 8003250:	460c      	mov	r4, r1
 8003252:	6831      	ldr	r1, [r6, #0]
 8003254:	4605      	mov	r5, r0
 8003256:	b911      	cbnz	r1, 800325e <sbrk_aligned+0x12>
 8003258:	f000 fea2 	bl	8003fa0 <_sbrk_r>
 800325c:	6030      	str	r0, [r6, #0]
 800325e:	4621      	mov	r1, r4
 8003260:	4628      	mov	r0, r5
 8003262:	f000 fe9d 	bl	8003fa0 <_sbrk_r>
 8003266:	1c43      	adds	r3, r0, #1
 8003268:	d103      	bne.n	8003272 <sbrk_aligned+0x26>
 800326a:	f04f 34ff 	mov.w	r4, #4294967295	@ 0xffffffff
 800326e:	4620      	mov	r0, r4
 8003270:	bd70      	pop	{r4, r5, r6, pc}
 8003272:	1cc4      	adds	r4, r0, #3
 8003274:	f024 0403 	bic.w	r4, r4, #3
 8003278:	42a0      	cmp	r0, r4
 800327a:	d0f8      	beq.n	800326e <sbrk_aligned+0x22>
 800327c:	1a21      	subs	r1, r4, r0
 800327e:	4628      	mov	r0, r5
 8003280:	f000 fe8e 	bl	8003fa0 <_sbrk_r>
 8003284:	3001      	adds	r0, #1
 8003286:	d1f2      	bne.n	800326e <sbrk_aligned+0x22>
 8003288:	e7ef      	b.n	800326a <sbrk_aligned+0x1e>
 800328a:	bf00      	nop
 800328c:	2000033c 	.word	0x2000033c

08003290 <_malloc_r>:
 8003290:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8003294:	1ccd      	adds	r5, r1, #3
 8003296:	f025 0503 	bic.w	r5, r5, #3
 800329a:	3508      	adds	r5, #8
 800329c:	2d0c      	cmp	r5, #12
 800329e:	bf38      	it	cc
 80032a0:	250c      	movcc	r5, #12
 80032a2:	2d00      	cmp	r5, #0
 80032a4:	4606      	mov	r6, r0
 80032a6:	db01      	blt.n	80032ac <_malloc_r+0x1c>
 80032a8:	42a9      	cmp	r1, r5
 80032aa:	d904      	bls.n	80032b6 <_malloc_r+0x26>
 80032ac:	230c      	movs	r3, #12
 80032ae:	6033      	str	r3, [r6, #0]
 80032b0:	2000      	movs	r0, #0
 80032b2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80032b6:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 800338c <_malloc_r+0xfc>
 80032ba:	f000 f869 	bl	8003390 <__malloc_lock>
 80032be:	f8d8 3000 	ldr.w	r3, [r8]
 80032c2:	461c      	mov	r4, r3
 80032c4:	bb44      	cbnz	r4, 8003318 <_malloc_r+0x88>
 80032c6:	4629      	mov	r1, r5
 80032c8:	4630      	mov	r0, r6
 80032ca:	f7ff ffbf 	bl	800324c <sbrk_aligned>
 80032ce:	1c43      	adds	r3, r0, #1
 80032d0:	4604      	mov	r4, r0
 80032d2:	d158      	bne.n	8003386 <_malloc_r+0xf6>
 80032d4:	f8d8 4000 	ldr.w	r4, [r8]
 80032d8:	4627      	mov	r7, r4
 80032da:	2f00      	cmp	r7, #0
 80032dc:	d143      	bne.n	8003366 <_malloc_r+0xd6>
 80032de:	2c00      	cmp	r4, #0
 80032e0:	d04b      	beq.n	800337a <_malloc_r+0xea>
 80032e2:	6823      	ldr	r3, [r4, #0]
 80032e4:	4639      	mov	r1, r7
 80032e6:	4630      	mov	r0, r6
 80032e8:	eb04 0903 	add.w	r9, r4, r3
 80032ec:	f000 fe58 	bl	8003fa0 <_sbrk_r>
 80032f0:	4581      	cmp	r9, r0
 80032f2:	d142      	bne.n	800337a <_malloc_r+0xea>
 80032f4:	6821      	ldr	r1, [r4, #0]
 80032f6:	1a6d      	subs	r5, r5, r1
 80032f8:	4629      	mov	r1, r5
 80032fa:	4630      	mov	r0, r6
 80032fc:	f7ff ffa6 	bl	800324c <sbrk_aligned>
 8003300:	3001      	adds	r0, #1
 8003302:	d03a      	beq.n	800337a <_malloc_r+0xea>
 8003304:	6823      	ldr	r3, [r4, #0]
 8003306:	442b      	add	r3, r5
 8003308:	6023      	str	r3, [r4, #0]
 800330a:	f8d8 3000 	ldr.w	r3, [r8]
 800330e:	685a      	ldr	r2, [r3, #4]
 8003310:	bb62      	cbnz	r2, 800336c <_malloc_r+0xdc>
 8003312:	f8c8 7000 	str.w	r7, [r8]
 8003316:	e00f      	b.n	8003338 <_malloc_r+0xa8>
 8003318:	6822      	ldr	r2, [r4, #0]
 800331a:	1b52      	subs	r2, r2, r5
 800331c:	d420      	bmi.n	8003360 <_malloc_r+0xd0>
 800331e:	2a0b      	cmp	r2, #11
 8003320:	d917      	bls.n	8003352 <_malloc_r+0xc2>
 8003322:	1961      	adds	r1, r4, r5
 8003324:	42a3      	cmp	r3, r4
 8003326:	6025      	str	r5, [r4, #0]
 8003328:	bf18      	it	ne
 800332a:	6059      	strne	r1, [r3, #4]
 800332c:	6863      	ldr	r3, [r4, #4]
 800332e:	bf08      	it	eq
 8003330:	f8c8 1000 	streq.w	r1, [r8]
 8003334:	5162      	str	r2, [r4, r5]
 8003336:	604b      	str	r3, [r1, #4]
 8003338:	4630      	mov	r0, r6
 800333a:	f000 f82f 	bl	800339c <__malloc_unlock>
 800333e:	f104 000b 	add.w	r0, r4, #11
 8003342:	1d23      	adds	r3, r4, #4
 8003344:	f020 0007 	bic.w	r0, r0, #7
 8003348:	1ac2      	subs	r2, r0, r3
 800334a:	bf1c      	itt	ne
 800334c:	1a1b      	subne	r3, r3, r0
 800334e:	50a3      	strne	r3, [r4, r2]
 8003350:	e7af      	b.n	80032b2 <_malloc_r+0x22>
 8003352:	6862      	ldr	r2, [r4, #4]
 8003354:	42a3      	cmp	r3, r4
 8003356:	bf0c      	ite	eq
 8003358:	f8c8 2000 	streq.w	r2, [r8]
 800335c:	605a      	strne	r2, [r3, #4]
 800335e:	e7eb      	b.n	8003338 <_malloc_r+0xa8>
 8003360:	4623      	mov	r3, r4
 8003362:	6864      	ldr	r4, [r4, #4]
 8003364:	e7ae      	b.n	80032c4 <_malloc_r+0x34>
 8003366:	463c      	mov	r4, r7
 8003368:	687f      	ldr	r7, [r7, #4]
 800336a:	e7b6      	b.n	80032da <_malloc_r+0x4a>
 800336c:	461a      	mov	r2, r3
 800336e:	685b      	ldr	r3, [r3, #4]
 8003370:	42a3      	cmp	r3, r4
 8003372:	d1fb      	bne.n	800336c <_malloc_r+0xdc>
 8003374:	2300      	movs	r3, #0
 8003376:	6053      	str	r3, [r2, #4]
 8003378:	e7de      	b.n	8003338 <_malloc_r+0xa8>
 800337a:	230c      	movs	r3, #12
 800337c:	6033      	str	r3, [r6, #0]
 800337e:	4630      	mov	r0, r6
 8003380:	f000 f80c 	bl	800339c <__malloc_unlock>
 8003384:	e794      	b.n	80032b0 <_malloc_r+0x20>
 8003386:	6005      	str	r5, [r0, #0]
 8003388:	e7d6      	b.n	8003338 <_malloc_r+0xa8>
 800338a:	bf00      	nop
 800338c:	20000340 	.word	0x20000340

08003390 <__malloc_lock>:
 8003390:	4801      	ldr	r0, [pc, #4]	@ (8003398 <__malloc_lock+0x8>)
 8003392:	f7ff b8ae 	b.w	80024f2 <__retarget_lock_acquire_recursive>
 8003396:	bf00      	nop
 8003398:	20000338 	.word	0x20000338

0800339c <__malloc_unlock>:
 800339c:	4801      	ldr	r0, [pc, #4]	@ (80033a4 <__malloc_unlock+0x8>)
 800339e:	f7ff b8a9 	b.w	80024f4 <__retarget_lock_release_recursive>
 80033a2:	bf00      	nop
 80033a4:	20000338 	.word	0x20000338

080033a8 <_Balloc>:
 80033a8:	b570      	push	{r4, r5, r6, lr}
 80033aa:	69c6      	ldr	r6, [r0, #28]
 80033ac:	4604      	mov	r4, r0
 80033ae:	460d      	mov	r5, r1
 80033b0:	b976      	cbnz	r6, 80033d0 <_Balloc+0x28>
 80033b2:	2010      	movs	r0, #16
 80033b4:	f7ff ff42 	bl	800323c <malloc>
 80033b8:	4602      	mov	r2, r0
 80033ba:	61e0      	str	r0, [r4, #28]
 80033bc:	b920      	cbnz	r0, 80033c8 <_Balloc+0x20>
 80033be:	4b18      	ldr	r3, [pc, #96]	@ (8003420 <_Balloc+0x78>)
 80033c0:	4818      	ldr	r0, [pc, #96]	@ (8003424 <_Balloc+0x7c>)
 80033c2:	216b      	movs	r1, #107	@ 0x6b
 80033c4:	f000 fe0a 	bl	8003fdc <__assert_func>
 80033c8:	e9c0 6601 	strd	r6, r6, [r0, #4]
 80033cc:	6006      	str	r6, [r0, #0]
 80033ce:	60c6      	str	r6, [r0, #12]
 80033d0:	69e6      	ldr	r6, [r4, #28]
 80033d2:	68f3      	ldr	r3, [r6, #12]
 80033d4:	b183      	cbz	r3, 80033f8 <_Balloc+0x50>
 80033d6:	69e3      	ldr	r3, [r4, #28]
 80033d8:	68db      	ldr	r3, [r3, #12]
 80033da:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 80033de:	b9b8      	cbnz	r0, 8003410 <_Balloc+0x68>
 80033e0:	2101      	movs	r1, #1
 80033e2:	fa01 f605 	lsl.w	r6, r1, r5
 80033e6:	1d72      	adds	r2, r6, #5
 80033e8:	0092      	lsls	r2, r2, #2
 80033ea:	4620      	mov	r0, r4
 80033ec:	f000 fe14 	bl	8004018 <_calloc_r>
 80033f0:	b160      	cbz	r0, 800340c <_Balloc+0x64>
 80033f2:	e9c0 5601 	strd	r5, r6, [r0, #4]
 80033f6:	e00e      	b.n	8003416 <_Balloc+0x6e>
 80033f8:	2221      	movs	r2, #33	@ 0x21
 80033fa:	2104      	movs	r1, #4
 80033fc:	4620      	mov	r0, r4
 80033fe:	f000 fe0b 	bl	8004018 <_calloc_r>
 8003402:	69e3      	ldr	r3, [r4, #28]
 8003404:	60f0      	str	r0, [r6, #12]
 8003406:	68db      	ldr	r3, [r3, #12]
 8003408:	2b00      	cmp	r3, #0
 800340a:	d1e4      	bne.n	80033d6 <_Balloc+0x2e>
 800340c:	2000      	movs	r0, #0
 800340e:	bd70      	pop	{r4, r5, r6, pc}
 8003410:	6802      	ldr	r2, [r0, #0]
 8003412:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 8003416:	2300      	movs	r3, #0
 8003418:	e9c0 3303 	strd	r3, r3, [r0, #12]
 800341c:	e7f7      	b.n	800340e <_Balloc+0x66>
 800341e:	bf00      	nop
 8003420:	080042dd 	.word	0x080042dd
 8003424:	0800435d 	.word	0x0800435d

08003428 <_Bfree>:
 8003428:	b570      	push	{r4, r5, r6, lr}
 800342a:	69c6      	ldr	r6, [r0, #28]
 800342c:	4605      	mov	r5, r0
 800342e:	460c      	mov	r4, r1
 8003430:	b976      	cbnz	r6, 8003450 <_Bfree+0x28>
 8003432:	2010      	movs	r0, #16
 8003434:	f7ff ff02 	bl	800323c <malloc>
 8003438:	4602      	mov	r2, r0
 800343a:	61e8      	str	r0, [r5, #28]
 800343c:	b920      	cbnz	r0, 8003448 <_Bfree+0x20>
 800343e:	4b09      	ldr	r3, [pc, #36]	@ (8003464 <_Bfree+0x3c>)
 8003440:	4809      	ldr	r0, [pc, #36]	@ (8003468 <_Bfree+0x40>)
 8003442:	218f      	movs	r1, #143	@ 0x8f
 8003444:	f000 fdca 	bl	8003fdc <__assert_func>
 8003448:	e9c0 6601 	strd	r6, r6, [r0, #4]
 800344c:	6006      	str	r6, [r0, #0]
 800344e:	60c6      	str	r6, [r0, #12]
 8003450:	b13c      	cbz	r4, 8003462 <_Bfree+0x3a>
 8003452:	69eb      	ldr	r3, [r5, #28]
 8003454:	6862      	ldr	r2, [r4, #4]
 8003456:	68db      	ldr	r3, [r3, #12]
 8003458:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 800345c:	6021      	str	r1, [r4, #0]
 800345e:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 8003462:	bd70      	pop	{r4, r5, r6, pc}
 8003464:	080042dd 	.word	0x080042dd
 8003468:	0800435d 	.word	0x0800435d

0800346c <__multadd>:
 800346c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003470:	690d      	ldr	r5, [r1, #16]
 8003472:	4607      	mov	r7, r0
 8003474:	460c      	mov	r4, r1
 8003476:	461e      	mov	r6, r3
 8003478:	f101 0c14 	add.w	ip, r1, #20
 800347c:	2000      	movs	r0, #0
 800347e:	f8dc 3000 	ldr.w	r3, [ip]
 8003482:	b299      	uxth	r1, r3
 8003484:	fb02 6101 	mla	r1, r2, r1, r6
 8003488:	0c1e      	lsrs	r6, r3, #16
 800348a:	0c0b      	lsrs	r3, r1, #16
 800348c:	fb02 3306 	mla	r3, r2, r6, r3
 8003490:	b289      	uxth	r1, r1
 8003492:	3001      	adds	r0, #1
 8003494:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 8003498:	4285      	cmp	r5, r0
 800349a:	f84c 1b04 	str.w	r1, [ip], #4
 800349e:	ea4f 4613 	mov.w	r6, r3, lsr #16
 80034a2:	dcec      	bgt.n	800347e <__multadd+0x12>
 80034a4:	b30e      	cbz	r6, 80034ea <__multadd+0x7e>
 80034a6:	68a3      	ldr	r3, [r4, #8]
 80034a8:	42ab      	cmp	r3, r5
 80034aa:	dc19      	bgt.n	80034e0 <__multadd+0x74>
 80034ac:	6861      	ldr	r1, [r4, #4]
 80034ae:	4638      	mov	r0, r7
 80034b0:	3101      	adds	r1, #1
 80034b2:	f7ff ff79 	bl	80033a8 <_Balloc>
 80034b6:	4680      	mov	r8, r0
 80034b8:	b928      	cbnz	r0, 80034c6 <__multadd+0x5a>
 80034ba:	4602      	mov	r2, r0
 80034bc:	4b0c      	ldr	r3, [pc, #48]	@ (80034f0 <__multadd+0x84>)
 80034be:	480d      	ldr	r0, [pc, #52]	@ (80034f4 <__multadd+0x88>)
 80034c0:	21ba      	movs	r1, #186	@ 0xba
 80034c2:	f000 fd8b 	bl	8003fdc <__assert_func>
 80034c6:	6922      	ldr	r2, [r4, #16]
 80034c8:	3202      	adds	r2, #2
 80034ca:	f104 010c 	add.w	r1, r4, #12
 80034ce:	0092      	lsls	r2, r2, #2
 80034d0:	300c      	adds	r0, #12
 80034d2:	f000 fd75 	bl	8003fc0 <memcpy>
 80034d6:	4621      	mov	r1, r4
 80034d8:	4638      	mov	r0, r7
 80034da:	f7ff ffa5 	bl	8003428 <_Bfree>
 80034de:	4644      	mov	r4, r8
 80034e0:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 80034e4:	3501      	adds	r5, #1
 80034e6:	615e      	str	r6, [r3, #20]
 80034e8:	6125      	str	r5, [r4, #16]
 80034ea:	4620      	mov	r0, r4
 80034ec:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80034f0:	0800434c 	.word	0x0800434c
 80034f4:	0800435d 	.word	0x0800435d

080034f8 <__hi0bits>:
 80034f8:	f5b0 3f80 	cmp.w	r0, #65536	@ 0x10000
 80034fc:	4603      	mov	r3, r0
 80034fe:	bf36      	itet	cc
 8003500:	0403      	lslcc	r3, r0, #16
 8003502:	2000      	movcs	r0, #0
 8003504:	2010      	movcc	r0, #16
 8003506:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 800350a:	bf3c      	itt	cc
 800350c:	021b      	lslcc	r3, r3, #8
 800350e:	3008      	addcc	r0, #8
 8003510:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 8003514:	bf3c      	itt	cc
 8003516:	011b      	lslcc	r3, r3, #4
 8003518:	3004      	addcc	r0, #4
 800351a:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800351e:	bf3c      	itt	cc
 8003520:	009b      	lslcc	r3, r3, #2
 8003522:	3002      	addcc	r0, #2
 8003524:	2b00      	cmp	r3, #0
 8003526:	db05      	blt.n	8003534 <__hi0bits+0x3c>
 8003528:	f013 4f80 	tst.w	r3, #1073741824	@ 0x40000000
 800352c:	f100 0001 	add.w	r0, r0, #1
 8003530:	bf08      	it	eq
 8003532:	2020      	moveq	r0, #32
 8003534:	4770      	bx	lr

08003536 <__lo0bits>:
 8003536:	6803      	ldr	r3, [r0, #0]
 8003538:	4602      	mov	r2, r0
 800353a:	f013 0007 	ands.w	r0, r3, #7
 800353e:	d00b      	beq.n	8003558 <__lo0bits+0x22>
 8003540:	07d9      	lsls	r1, r3, #31
 8003542:	d421      	bmi.n	8003588 <__lo0bits+0x52>
 8003544:	0798      	lsls	r0, r3, #30
 8003546:	bf49      	itett	mi
 8003548:	085b      	lsrmi	r3, r3, #1
 800354a:	089b      	lsrpl	r3, r3, #2
 800354c:	2001      	movmi	r0, #1
 800354e:	6013      	strmi	r3, [r2, #0]
 8003550:	bf5c      	itt	pl
 8003552:	6013      	strpl	r3, [r2, #0]
 8003554:	2002      	movpl	r0, #2
 8003556:	4770      	bx	lr
 8003558:	b299      	uxth	r1, r3
 800355a:	b909      	cbnz	r1, 8003560 <__lo0bits+0x2a>
 800355c:	0c1b      	lsrs	r3, r3, #16
 800355e:	2010      	movs	r0, #16
 8003560:	b2d9      	uxtb	r1, r3
 8003562:	b909      	cbnz	r1, 8003568 <__lo0bits+0x32>
 8003564:	3008      	adds	r0, #8
 8003566:	0a1b      	lsrs	r3, r3, #8
 8003568:	0719      	lsls	r1, r3, #28
 800356a:	bf04      	itt	eq
 800356c:	091b      	lsreq	r3, r3, #4
 800356e:	3004      	addeq	r0, #4
 8003570:	0799      	lsls	r1, r3, #30
 8003572:	bf04      	itt	eq
 8003574:	089b      	lsreq	r3, r3, #2
 8003576:	3002      	addeq	r0, #2
 8003578:	07d9      	lsls	r1, r3, #31
 800357a:	d403      	bmi.n	8003584 <__lo0bits+0x4e>
 800357c:	085b      	lsrs	r3, r3, #1
 800357e:	f100 0001 	add.w	r0, r0, #1
 8003582:	d003      	beq.n	800358c <__lo0bits+0x56>
 8003584:	6013      	str	r3, [r2, #0]
 8003586:	4770      	bx	lr
 8003588:	2000      	movs	r0, #0
 800358a:	4770      	bx	lr
 800358c:	2020      	movs	r0, #32
 800358e:	4770      	bx	lr

08003590 <__i2b>:
 8003590:	b510      	push	{r4, lr}
 8003592:	460c      	mov	r4, r1
 8003594:	2101      	movs	r1, #1
 8003596:	f7ff ff07 	bl	80033a8 <_Balloc>
 800359a:	4602      	mov	r2, r0
 800359c:	b928      	cbnz	r0, 80035aa <__i2b+0x1a>
 800359e:	4b05      	ldr	r3, [pc, #20]	@ (80035b4 <__i2b+0x24>)
 80035a0:	4805      	ldr	r0, [pc, #20]	@ (80035b8 <__i2b+0x28>)
 80035a2:	f240 1145 	movw	r1, #325	@ 0x145
 80035a6:	f000 fd19 	bl	8003fdc <__assert_func>
 80035aa:	2301      	movs	r3, #1
 80035ac:	6144      	str	r4, [r0, #20]
 80035ae:	6103      	str	r3, [r0, #16]
 80035b0:	bd10      	pop	{r4, pc}
 80035b2:	bf00      	nop
 80035b4:	0800434c 	.word	0x0800434c
 80035b8:	0800435d 	.word	0x0800435d

080035bc <__multiply>:
 80035bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80035c0:	4617      	mov	r7, r2
 80035c2:	690a      	ldr	r2, [r1, #16]
 80035c4:	693b      	ldr	r3, [r7, #16]
 80035c6:	429a      	cmp	r2, r3
 80035c8:	bfa8      	it	ge
 80035ca:	463b      	movge	r3, r7
 80035cc:	4689      	mov	r9, r1
 80035ce:	bfa4      	itt	ge
 80035d0:	460f      	movge	r7, r1
 80035d2:	4699      	movge	r9, r3
 80035d4:	693d      	ldr	r5, [r7, #16]
 80035d6:	f8d9 a010 	ldr.w	sl, [r9, #16]
 80035da:	68bb      	ldr	r3, [r7, #8]
 80035dc:	6879      	ldr	r1, [r7, #4]
 80035de:	eb05 060a 	add.w	r6, r5, sl
 80035e2:	42b3      	cmp	r3, r6
 80035e4:	b085      	sub	sp, #20
 80035e6:	bfb8      	it	lt
 80035e8:	3101      	addlt	r1, #1
 80035ea:	f7ff fedd 	bl	80033a8 <_Balloc>
 80035ee:	b930      	cbnz	r0, 80035fe <__multiply+0x42>
 80035f0:	4602      	mov	r2, r0
 80035f2:	4b41      	ldr	r3, [pc, #260]	@ (80036f8 <__multiply+0x13c>)
 80035f4:	4841      	ldr	r0, [pc, #260]	@ (80036fc <__multiply+0x140>)
 80035f6:	f44f 71b1 	mov.w	r1, #354	@ 0x162
 80035fa:	f000 fcef 	bl	8003fdc <__assert_func>
 80035fe:	f100 0414 	add.w	r4, r0, #20
 8003602:	eb04 0e86 	add.w	lr, r4, r6, lsl #2
 8003606:	4623      	mov	r3, r4
 8003608:	2200      	movs	r2, #0
 800360a:	4573      	cmp	r3, lr
 800360c:	d320      	bcc.n	8003650 <__multiply+0x94>
 800360e:	f107 0814 	add.w	r8, r7, #20
 8003612:	f109 0114 	add.w	r1, r9, #20
 8003616:	eb08 0585 	add.w	r5, r8, r5, lsl #2
 800361a:	eb01 038a 	add.w	r3, r1, sl, lsl #2
 800361e:	9302      	str	r3, [sp, #8]
 8003620:	1beb      	subs	r3, r5, r7
 8003622:	3b15      	subs	r3, #21
 8003624:	f023 0303 	bic.w	r3, r3, #3
 8003628:	3304      	adds	r3, #4
 800362a:	3715      	adds	r7, #21
 800362c:	42bd      	cmp	r5, r7
 800362e:	bf38      	it	cc
 8003630:	2304      	movcc	r3, #4
 8003632:	9301      	str	r3, [sp, #4]
 8003634:	9b02      	ldr	r3, [sp, #8]
 8003636:	9103      	str	r1, [sp, #12]
 8003638:	428b      	cmp	r3, r1
 800363a:	d80c      	bhi.n	8003656 <__multiply+0x9a>
 800363c:	2e00      	cmp	r6, #0
 800363e:	dd03      	ble.n	8003648 <__multiply+0x8c>
 8003640:	f85e 3d04 	ldr.w	r3, [lr, #-4]!
 8003644:	2b00      	cmp	r3, #0
 8003646:	d055      	beq.n	80036f4 <__multiply+0x138>
 8003648:	6106      	str	r6, [r0, #16]
 800364a:	b005      	add	sp, #20
 800364c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003650:	f843 2b04 	str.w	r2, [r3], #4
 8003654:	e7d9      	b.n	800360a <__multiply+0x4e>
 8003656:	f8b1 a000 	ldrh.w	sl, [r1]
 800365a:	f1ba 0f00 	cmp.w	sl, #0
 800365e:	d01f      	beq.n	80036a0 <__multiply+0xe4>
 8003660:	46c4      	mov	ip, r8
 8003662:	46a1      	mov	r9, r4
 8003664:	2700      	movs	r7, #0
 8003666:	f85c 2b04 	ldr.w	r2, [ip], #4
 800366a:	f8d9 3000 	ldr.w	r3, [r9]
 800366e:	fa1f fb82 	uxth.w	fp, r2
 8003672:	b29b      	uxth	r3, r3
 8003674:	fb0a 330b 	mla	r3, sl, fp, r3
 8003678:	443b      	add	r3, r7
 800367a:	f8d9 7000 	ldr.w	r7, [r9]
 800367e:	0c12      	lsrs	r2, r2, #16
 8003680:	0c3f      	lsrs	r7, r7, #16
 8003682:	fb0a 7202 	mla	r2, sl, r2, r7
 8003686:	eb02 4213 	add.w	r2, r2, r3, lsr #16
 800368a:	b29b      	uxth	r3, r3
 800368c:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8003690:	4565      	cmp	r5, ip
 8003692:	f849 3b04 	str.w	r3, [r9], #4
 8003696:	ea4f 4712 	mov.w	r7, r2, lsr #16
 800369a:	d8e4      	bhi.n	8003666 <__multiply+0xaa>
 800369c:	9b01      	ldr	r3, [sp, #4]
 800369e:	50e7      	str	r7, [r4, r3]
 80036a0:	9b03      	ldr	r3, [sp, #12]
 80036a2:	f8b3 9002 	ldrh.w	r9, [r3, #2]
 80036a6:	3104      	adds	r1, #4
 80036a8:	f1b9 0f00 	cmp.w	r9, #0
 80036ac:	d020      	beq.n	80036f0 <__multiply+0x134>
 80036ae:	6823      	ldr	r3, [r4, #0]
 80036b0:	4647      	mov	r7, r8
 80036b2:	46a4      	mov	ip, r4
 80036b4:	f04f 0a00 	mov.w	sl, #0
 80036b8:	f8b7 b000 	ldrh.w	fp, [r7]
 80036bc:	f8bc 2002 	ldrh.w	r2, [ip, #2]
 80036c0:	fb09 220b 	mla	r2, r9, fp, r2
 80036c4:	4452      	add	r2, sl
 80036c6:	b29b      	uxth	r3, r3
 80036c8:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80036cc:	f84c 3b04 	str.w	r3, [ip], #4
 80036d0:	f857 3b04 	ldr.w	r3, [r7], #4
 80036d4:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 80036d8:	f8bc 3000 	ldrh.w	r3, [ip]
 80036dc:	fb09 330a 	mla	r3, r9, sl, r3
 80036e0:	eb03 4312 	add.w	r3, r3, r2, lsr #16
 80036e4:	42bd      	cmp	r5, r7
 80036e6:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 80036ea:	d8e5      	bhi.n	80036b8 <__multiply+0xfc>
 80036ec:	9a01      	ldr	r2, [sp, #4]
 80036ee:	50a3      	str	r3, [r4, r2]
 80036f0:	3404      	adds	r4, #4
 80036f2:	e79f      	b.n	8003634 <__multiply+0x78>
 80036f4:	3e01      	subs	r6, #1
 80036f6:	e7a1      	b.n	800363c <__multiply+0x80>
 80036f8:	0800434c 	.word	0x0800434c
 80036fc:	0800435d 	.word	0x0800435d

08003700 <__pow5mult>:
 8003700:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8003704:	4615      	mov	r5, r2
 8003706:	f012 0203 	ands.w	r2, r2, #3
 800370a:	4607      	mov	r7, r0
 800370c:	460e      	mov	r6, r1
 800370e:	d007      	beq.n	8003720 <__pow5mult+0x20>
 8003710:	4c25      	ldr	r4, [pc, #148]	@ (80037a8 <__pow5mult+0xa8>)
 8003712:	3a01      	subs	r2, #1
 8003714:	2300      	movs	r3, #0
 8003716:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 800371a:	f7ff fea7 	bl	800346c <__multadd>
 800371e:	4606      	mov	r6, r0
 8003720:	10ad      	asrs	r5, r5, #2
 8003722:	d03d      	beq.n	80037a0 <__pow5mult+0xa0>
 8003724:	69fc      	ldr	r4, [r7, #28]
 8003726:	b97c      	cbnz	r4, 8003748 <__pow5mult+0x48>
 8003728:	2010      	movs	r0, #16
 800372a:	f7ff fd87 	bl	800323c <malloc>
 800372e:	4602      	mov	r2, r0
 8003730:	61f8      	str	r0, [r7, #28]
 8003732:	b928      	cbnz	r0, 8003740 <__pow5mult+0x40>
 8003734:	4b1d      	ldr	r3, [pc, #116]	@ (80037ac <__pow5mult+0xac>)
 8003736:	481e      	ldr	r0, [pc, #120]	@ (80037b0 <__pow5mult+0xb0>)
 8003738:	f240 11b3 	movw	r1, #435	@ 0x1b3
 800373c:	f000 fc4e 	bl	8003fdc <__assert_func>
 8003740:	e9c0 4401 	strd	r4, r4, [r0, #4]
 8003744:	6004      	str	r4, [r0, #0]
 8003746:	60c4      	str	r4, [r0, #12]
 8003748:	f8d7 801c 	ldr.w	r8, [r7, #28]
 800374c:	f8d8 4008 	ldr.w	r4, [r8, #8]
 8003750:	b94c      	cbnz	r4, 8003766 <__pow5mult+0x66>
 8003752:	f240 2171 	movw	r1, #625	@ 0x271
 8003756:	4638      	mov	r0, r7
 8003758:	f7ff ff1a 	bl	8003590 <__i2b>
 800375c:	2300      	movs	r3, #0
 800375e:	f8c8 0008 	str.w	r0, [r8, #8]
 8003762:	4604      	mov	r4, r0
 8003764:	6003      	str	r3, [r0, #0]
 8003766:	f04f 0900 	mov.w	r9, #0
 800376a:	07eb      	lsls	r3, r5, #31
 800376c:	d50a      	bpl.n	8003784 <__pow5mult+0x84>
 800376e:	4631      	mov	r1, r6
 8003770:	4622      	mov	r2, r4
 8003772:	4638      	mov	r0, r7
 8003774:	f7ff ff22 	bl	80035bc <__multiply>
 8003778:	4631      	mov	r1, r6
 800377a:	4680      	mov	r8, r0
 800377c:	4638      	mov	r0, r7
 800377e:	f7ff fe53 	bl	8003428 <_Bfree>
 8003782:	4646      	mov	r6, r8
 8003784:	106d      	asrs	r5, r5, #1
 8003786:	d00b      	beq.n	80037a0 <__pow5mult+0xa0>
 8003788:	6820      	ldr	r0, [r4, #0]
 800378a:	b938      	cbnz	r0, 800379c <__pow5mult+0x9c>
 800378c:	4622      	mov	r2, r4
 800378e:	4621      	mov	r1, r4
 8003790:	4638      	mov	r0, r7
 8003792:	f7ff ff13 	bl	80035bc <__multiply>
 8003796:	6020      	str	r0, [r4, #0]
 8003798:	f8c0 9000 	str.w	r9, [r0]
 800379c:	4604      	mov	r4, r0
 800379e:	e7e4      	b.n	800376a <__pow5mult+0x6a>
 80037a0:	4630      	mov	r0, r6
 80037a2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80037a6:	bf00      	nop
 80037a8:	08004410 	.word	0x08004410
 80037ac:	080042dd 	.word	0x080042dd
 80037b0:	0800435d 	.word	0x0800435d

080037b4 <__lshift>:
 80037b4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80037b8:	460c      	mov	r4, r1
 80037ba:	6849      	ldr	r1, [r1, #4]
 80037bc:	6923      	ldr	r3, [r4, #16]
 80037be:	eb03 1862 	add.w	r8, r3, r2, asr #5
 80037c2:	68a3      	ldr	r3, [r4, #8]
 80037c4:	4607      	mov	r7, r0
 80037c6:	4691      	mov	r9, r2
 80037c8:	ea4f 1a62 	mov.w	sl, r2, asr #5
 80037cc:	f108 0601 	add.w	r6, r8, #1
 80037d0:	42b3      	cmp	r3, r6
 80037d2:	db0b      	blt.n	80037ec <__lshift+0x38>
 80037d4:	4638      	mov	r0, r7
 80037d6:	f7ff fde7 	bl	80033a8 <_Balloc>
 80037da:	4605      	mov	r5, r0
 80037dc:	b948      	cbnz	r0, 80037f2 <__lshift+0x3e>
 80037de:	4602      	mov	r2, r0
 80037e0:	4b28      	ldr	r3, [pc, #160]	@ (8003884 <__lshift+0xd0>)
 80037e2:	4829      	ldr	r0, [pc, #164]	@ (8003888 <__lshift+0xd4>)
 80037e4:	f44f 71ef 	mov.w	r1, #478	@ 0x1de
 80037e8:	f000 fbf8 	bl	8003fdc <__assert_func>
 80037ec:	3101      	adds	r1, #1
 80037ee:	005b      	lsls	r3, r3, #1
 80037f0:	e7ee      	b.n	80037d0 <__lshift+0x1c>
 80037f2:	2300      	movs	r3, #0
 80037f4:	f100 0114 	add.w	r1, r0, #20
 80037f8:	f100 0210 	add.w	r2, r0, #16
 80037fc:	4618      	mov	r0, r3
 80037fe:	4553      	cmp	r3, sl
 8003800:	db33      	blt.n	800386a <__lshift+0xb6>
 8003802:	6920      	ldr	r0, [r4, #16]
 8003804:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 8003808:	f104 0314 	add.w	r3, r4, #20
 800380c:	f019 091f 	ands.w	r9, r9, #31
 8003810:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 8003814:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 8003818:	d02b      	beq.n	8003872 <__lshift+0xbe>
 800381a:	f1c9 0e20 	rsb	lr, r9, #32
 800381e:	468a      	mov	sl, r1
 8003820:	2200      	movs	r2, #0
 8003822:	6818      	ldr	r0, [r3, #0]
 8003824:	fa00 f009 	lsl.w	r0, r0, r9
 8003828:	4310      	orrs	r0, r2
 800382a:	f84a 0b04 	str.w	r0, [sl], #4
 800382e:	f853 2b04 	ldr.w	r2, [r3], #4
 8003832:	459c      	cmp	ip, r3
 8003834:	fa22 f20e 	lsr.w	r2, r2, lr
 8003838:	d8f3      	bhi.n	8003822 <__lshift+0x6e>
 800383a:	ebac 0304 	sub.w	r3, ip, r4
 800383e:	3b15      	subs	r3, #21
 8003840:	f023 0303 	bic.w	r3, r3, #3
 8003844:	3304      	adds	r3, #4
 8003846:	f104 0015 	add.w	r0, r4, #21
 800384a:	4560      	cmp	r0, ip
 800384c:	bf88      	it	hi
 800384e:	2304      	movhi	r3, #4
 8003850:	50ca      	str	r2, [r1, r3]
 8003852:	b10a      	cbz	r2, 8003858 <__lshift+0xa4>
 8003854:	f108 0602 	add.w	r6, r8, #2
 8003858:	3e01      	subs	r6, #1
 800385a:	4638      	mov	r0, r7
 800385c:	612e      	str	r6, [r5, #16]
 800385e:	4621      	mov	r1, r4
 8003860:	f7ff fde2 	bl	8003428 <_Bfree>
 8003864:	4628      	mov	r0, r5
 8003866:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800386a:	f842 0f04 	str.w	r0, [r2, #4]!
 800386e:	3301      	adds	r3, #1
 8003870:	e7c5      	b.n	80037fe <__lshift+0x4a>
 8003872:	3904      	subs	r1, #4
 8003874:	f853 2b04 	ldr.w	r2, [r3], #4
 8003878:	f841 2f04 	str.w	r2, [r1, #4]!
 800387c:	459c      	cmp	ip, r3
 800387e:	d8f9      	bhi.n	8003874 <__lshift+0xc0>
 8003880:	e7ea      	b.n	8003858 <__lshift+0xa4>
 8003882:	bf00      	nop
 8003884:	0800434c 	.word	0x0800434c
 8003888:	0800435d 	.word	0x0800435d

0800388c <__mcmp>:
 800388c:	690a      	ldr	r2, [r1, #16]
 800388e:	4603      	mov	r3, r0
 8003890:	6900      	ldr	r0, [r0, #16]
 8003892:	1a80      	subs	r0, r0, r2
 8003894:	b530      	push	{r4, r5, lr}
 8003896:	d10e      	bne.n	80038b6 <__mcmp+0x2a>
 8003898:	3314      	adds	r3, #20
 800389a:	3114      	adds	r1, #20
 800389c:	eb03 0482 	add.w	r4, r3, r2, lsl #2
 80038a0:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 80038a4:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 80038a8:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 80038ac:	4295      	cmp	r5, r2
 80038ae:	d003      	beq.n	80038b8 <__mcmp+0x2c>
 80038b0:	d205      	bcs.n	80038be <__mcmp+0x32>
 80038b2:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 80038b6:	bd30      	pop	{r4, r5, pc}
 80038b8:	42a3      	cmp	r3, r4
 80038ba:	d3f3      	bcc.n	80038a4 <__mcmp+0x18>
 80038bc:	e7fb      	b.n	80038b6 <__mcmp+0x2a>
 80038be:	2001      	movs	r0, #1
 80038c0:	e7f9      	b.n	80038b6 <__mcmp+0x2a>
	...

080038c4 <__mdiff>:
 80038c4:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80038c8:	4689      	mov	r9, r1
 80038ca:	4606      	mov	r6, r0
 80038cc:	4611      	mov	r1, r2
 80038ce:	4648      	mov	r0, r9
 80038d0:	4614      	mov	r4, r2
 80038d2:	f7ff ffdb 	bl	800388c <__mcmp>
 80038d6:	1e05      	subs	r5, r0, #0
 80038d8:	d112      	bne.n	8003900 <__mdiff+0x3c>
 80038da:	4629      	mov	r1, r5
 80038dc:	4630      	mov	r0, r6
 80038de:	f7ff fd63 	bl	80033a8 <_Balloc>
 80038e2:	4602      	mov	r2, r0
 80038e4:	b928      	cbnz	r0, 80038f2 <__mdiff+0x2e>
 80038e6:	4b3f      	ldr	r3, [pc, #252]	@ (80039e4 <__mdiff+0x120>)
 80038e8:	f240 2137 	movw	r1, #567	@ 0x237
 80038ec:	483e      	ldr	r0, [pc, #248]	@ (80039e8 <__mdiff+0x124>)
 80038ee:	f000 fb75 	bl	8003fdc <__assert_func>
 80038f2:	2301      	movs	r3, #1
 80038f4:	e9c0 3504 	strd	r3, r5, [r0, #16]
 80038f8:	4610      	mov	r0, r2
 80038fa:	b003      	add	sp, #12
 80038fc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003900:	bfbc      	itt	lt
 8003902:	464b      	movlt	r3, r9
 8003904:	46a1      	movlt	r9, r4
 8003906:	4630      	mov	r0, r6
 8003908:	f8d9 1004 	ldr.w	r1, [r9, #4]
 800390c:	bfba      	itte	lt
 800390e:	461c      	movlt	r4, r3
 8003910:	2501      	movlt	r5, #1
 8003912:	2500      	movge	r5, #0
 8003914:	f7ff fd48 	bl	80033a8 <_Balloc>
 8003918:	4602      	mov	r2, r0
 800391a:	b918      	cbnz	r0, 8003924 <__mdiff+0x60>
 800391c:	4b31      	ldr	r3, [pc, #196]	@ (80039e4 <__mdiff+0x120>)
 800391e:	f240 2145 	movw	r1, #581	@ 0x245
 8003922:	e7e3      	b.n	80038ec <__mdiff+0x28>
 8003924:	f8d9 7010 	ldr.w	r7, [r9, #16]
 8003928:	6926      	ldr	r6, [r4, #16]
 800392a:	60c5      	str	r5, [r0, #12]
 800392c:	f109 0310 	add.w	r3, r9, #16
 8003930:	f109 0514 	add.w	r5, r9, #20
 8003934:	f104 0e14 	add.w	lr, r4, #20
 8003938:	f100 0b14 	add.w	fp, r0, #20
 800393c:	eb05 0887 	add.w	r8, r5, r7, lsl #2
 8003940:	eb0e 0686 	add.w	r6, lr, r6, lsl #2
 8003944:	9301      	str	r3, [sp, #4]
 8003946:	46d9      	mov	r9, fp
 8003948:	f04f 0c00 	mov.w	ip, #0
 800394c:	9b01      	ldr	r3, [sp, #4]
 800394e:	f85e 0b04 	ldr.w	r0, [lr], #4
 8003952:	f853 af04 	ldr.w	sl, [r3, #4]!
 8003956:	9301      	str	r3, [sp, #4]
 8003958:	fa1f f38a 	uxth.w	r3, sl
 800395c:	4619      	mov	r1, r3
 800395e:	b283      	uxth	r3, r0
 8003960:	1acb      	subs	r3, r1, r3
 8003962:	0c00      	lsrs	r0, r0, #16
 8003964:	4463      	add	r3, ip
 8003966:	ebc0 401a 	rsb	r0, r0, sl, lsr #16
 800396a:	eb00 4023 	add.w	r0, r0, r3, asr #16
 800396e:	b29b      	uxth	r3, r3
 8003970:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 8003974:	4576      	cmp	r6, lr
 8003976:	f849 3b04 	str.w	r3, [r9], #4
 800397a:	ea4f 4c20 	mov.w	ip, r0, asr #16
 800397e:	d8e5      	bhi.n	800394c <__mdiff+0x88>
 8003980:	1b33      	subs	r3, r6, r4
 8003982:	3b15      	subs	r3, #21
 8003984:	f023 0303 	bic.w	r3, r3, #3
 8003988:	3415      	adds	r4, #21
 800398a:	3304      	adds	r3, #4
 800398c:	42a6      	cmp	r6, r4
 800398e:	bf38      	it	cc
 8003990:	2304      	movcc	r3, #4
 8003992:	441d      	add	r5, r3
 8003994:	445b      	add	r3, fp
 8003996:	461e      	mov	r6, r3
 8003998:	462c      	mov	r4, r5
 800399a:	4544      	cmp	r4, r8
 800399c:	d30e      	bcc.n	80039bc <__mdiff+0xf8>
 800399e:	f108 0103 	add.w	r1, r8, #3
 80039a2:	1b49      	subs	r1, r1, r5
 80039a4:	f021 0103 	bic.w	r1, r1, #3
 80039a8:	3d03      	subs	r5, #3
 80039aa:	45a8      	cmp	r8, r5
 80039ac:	bf38      	it	cc
 80039ae:	2100      	movcc	r1, #0
 80039b0:	440b      	add	r3, r1
 80039b2:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 80039b6:	b191      	cbz	r1, 80039de <__mdiff+0x11a>
 80039b8:	6117      	str	r7, [r2, #16]
 80039ba:	e79d      	b.n	80038f8 <__mdiff+0x34>
 80039bc:	f854 1b04 	ldr.w	r1, [r4], #4
 80039c0:	46e6      	mov	lr, ip
 80039c2:	0c08      	lsrs	r0, r1, #16
 80039c4:	fa1c fc81 	uxtah	ip, ip, r1
 80039c8:	4471      	add	r1, lr
 80039ca:	eb00 402c 	add.w	r0, r0, ip, asr #16
 80039ce:	b289      	uxth	r1, r1
 80039d0:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 80039d4:	f846 1b04 	str.w	r1, [r6], #4
 80039d8:	ea4f 4c20 	mov.w	ip, r0, asr #16
 80039dc:	e7dd      	b.n	800399a <__mdiff+0xd6>
 80039de:	3f01      	subs	r7, #1
 80039e0:	e7e7      	b.n	80039b2 <__mdiff+0xee>
 80039e2:	bf00      	nop
 80039e4:	0800434c 	.word	0x0800434c
 80039e8:	0800435d 	.word	0x0800435d

080039ec <__d2b>:
 80039ec:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80039f0:	460f      	mov	r7, r1
 80039f2:	2101      	movs	r1, #1
 80039f4:	ec59 8b10 	vmov	r8, r9, d0
 80039f8:	4616      	mov	r6, r2
 80039fa:	f7ff fcd5 	bl	80033a8 <_Balloc>
 80039fe:	4604      	mov	r4, r0
 8003a00:	b930      	cbnz	r0, 8003a10 <__d2b+0x24>
 8003a02:	4602      	mov	r2, r0
 8003a04:	4b23      	ldr	r3, [pc, #140]	@ (8003a94 <__d2b+0xa8>)
 8003a06:	4824      	ldr	r0, [pc, #144]	@ (8003a98 <__d2b+0xac>)
 8003a08:	f240 310f 	movw	r1, #783	@ 0x30f
 8003a0c:	f000 fae6 	bl	8003fdc <__assert_func>
 8003a10:	f3c9 550a 	ubfx	r5, r9, #20, #11
 8003a14:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8003a18:	b10d      	cbz	r5, 8003a1e <__d2b+0x32>
 8003a1a:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8003a1e:	9301      	str	r3, [sp, #4]
 8003a20:	f1b8 0300 	subs.w	r3, r8, #0
 8003a24:	d023      	beq.n	8003a6e <__d2b+0x82>
 8003a26:	4668      	mov	r0, sp
 8003a28:	9300      	str	r3, [sp, #0]
 8003a2a:	f7ff fd84 	bl	8003536 <__lo0bits>
 8003a2e:	e9dd 1200 	ldrd	r1, r2, [sp]
 8003a32:	b1d0      	cbz	r0, 8003a6a <__d2b+0x7e>
 8003a34:	f1c0 0320 	rsb	r3, r0, #32
 8003a38:	fa02 f303 	lsl.w	r3, r2, r3
 8003a3c:	430b      	orrs	r3, r1
 8003a3e:	40c2      	lsrs	r2, r0
 8003a40:	6163      	str	r3, [r4, #20]
 8003a42:	9201      	str	r2, [sp, #4]
 8003a44:	9b01      	ldr	r3, [sp, #4]
 8003a46:	61a3      	str	r3, [r4, #24]
 8003a48:	2b00      	cmp	r3, #0
 8003a4a:	bf0c      	ite	eq
 8003a4c:	2201      	moveq	r2, #1
 8003a4e:	2202      	movne	r2, #2
 8003a50:	6122      	str	r2, [r4, #16]
 8003a52:	b1a5      	cbz	r5, 8003a7e <__d2b+0x92>
 8003a54:	f2a5 4533 	subw	r5, r5, #1075	@ 0x433
 8003a58:	4405      	add	r5, r0
 8003a5a:	603d      	str	r5, [r7, #0]
 8003a5c:	f1c0 0035 	rsb	r0, r0, #53	@ 0x35
 8003a60:	6030      	str	r0, [r6, #0]
 8003a62:	4620      	mov	r0, r4
 8003a64:	b003      	add	sp, #12
 8003a66:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8003a6a:	6161      	str	r1, [r4, #20]
 8003a6c:	e7ea      	b.n	8003a44 <__d2b+0x58>
 8003a6e:	a801      	add	r0, sp, #4
 8003a70:	f7ff fd61 	bl	8003536 <__lo0bits>
 8003a74:	9b01      	ldr	r3, [sp, #4]
 8003a76:	6163      	str	r3, [r4, #20]
 8003a78:	3020      	adds	r0, #32
 8003a7a:	2201      	movs	r2, #1
 8003a7c:	e7e8      	b.n	8003a50 <__d2b+0x64>
 8003a7e:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 8003a82:	f2a0 4032 	subw	r0, r0, #1074	@ 0x432
 8003a86:	6038      	str	r0, [r7, #0]
 8003a88:	6918      	ldr	r0, [r3, #16]
 8003a8a:	f7ff fd35 	bl	80034f8 <__hi0bits>
 8003a8e:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 8003a92:	e7e5      	b.n	8003a60 <__d2b+0x74>
 8003a94:	0800434c 	.word	0x0800434c
 8003a98:	0800435d 	.word	0x0800435d

08003a9c <__sfputc_r>:
 8003a9c:	6893      	ldr	r3, [r2, #8]
 8003a9e:	3b01      	subs	r3, #1
 8003aa0:	2b00      	cmp	r3, #0
 8003aa2:	b410      	push	{r4}
 8003aa4:	6093      	str	r3, [r2, #8]
 8003aa6:	da08      	bge.n	8003aba <__sfputc_r+0x1e>
 8003aa8:	6994      	ldr	r4, [r2, #24]
 8003aaa:	42a3      	cmp	r3, r4
 8003aac:	db01      	blt.n	8003ab2 <__sfputc_r+0x16>
 8003aae:	290a      	cmp	r1, #10
 8003ab0:	d103      	bne.n	8003aba <__sfputc_r+0x1e>
 8003ab2:	f85d 4b04 	ldr.w	r4, [sp], #4
 8003ab6:	f000 b9df 	b.w	8003e78 <__swbuf_r>
 8003aba:	6813      	ldr	r3, [r2, #0]
 8003abc:	1c58      	adds	r0, r3, #1
 8003abe:	6010      	str	r0, [r2, #0]
 8003ac0:	7019      	strb	r1, [r3, #0]
 8003ac2:	4608      	mov	r0, r1
 8003ac4:	f85d 4b04 	ldr.w	r4, [sp], #4
 8003ac8:	4770      	bx	lr

08003aca <__sfputs_r>:
 8003aca:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003acc:	4606      	mov	r6, r0
 8003ace:	460f      	mov	r7, r1
 8003ad0:	4614      	mov	r4, r2
 8003ad2:	18d5      	adds	r5, r2, r3
 8003ad4:	42ac      	cmp	r4, r5
 8003ad6:	d101      	bne.n	8003adc <__sfputs_r+0x12>
 8003ad8:	2000      	movs	r0, #0
 8003ada:	e007      	b.n	8003aec <__sfputs_r+0x22>
 8003adc:	f814 1b01 	ldrb.w	r1, [r4], #1
 8003ae0:	463a      	mov	r2, r7
 8003ae2:	4630      	mov	r0, r6
 8003ae4:	f7ff ffda 	bl	8003a9c <__sfputc_r>
 8003ae8:	1c43      	adds	r3, r0, #1
 8003aea:	d1f3      	bne.n	8003ad4 <__sfputs_r+0xa>
 8003aec:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08003af0 <_vfiprintf_r>:
 8003af0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003af4:	460d      	mov	r5, r1
 8003af6:	b09d      	sub	sp, #116	@ 0x74
 8003af8:	4614      	mov	r4, r2
 8003afa:	4698      	mov	r8, r3
 8003afc:	4606      	mov	r6, r0
 8003afe:	b118      	cbz	r0, 8003b08 <_vfiprintf_r+0x18>
 8003b00:	6a03      	ldr	r3, [r0, #32]
 8003b02:	b90b      	cbnz	r3, 8003b08 <_vfiprintf_r+0x18>
 8003b04:	f7fe fbec 	bl	80022e0 <__sinit>
 8003b08:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8003b0a:	07d9      	lsls	r1, r3, #31
 8003b0c:	d405      	bmi.n	8003b1a <_vfiprintf_r+0x2a>
 8003b0e:	89ab      	ldrh	r3, [r5, #12]
 8003b10:	059a      	lsls	r2, r3, #22
 8003b12:	d402      	bmi.n	8003b1a <_vfiprintf_r+0x2a>
 8003b14:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8003b16:	f7fe fcec 	bl	80024f2 <__retarget_lock_acquire_recursive>
 8003b1a:	89ab      	ldrh	r3, [r5, #12]
 8003b1c:	071b      	lsls	r3, r3, #28
 8003b1e:	d501      	bpl.n	8003b24 <_vfiprintf_r+0x34>
 8003b20:	692b      	ldr	r3, [r5, #16]
 8003b22:	b99b      	cbnz	r3, 8003b4c <_vfiprintf_r+0x5c>
 8003b24:	4629      	mov	r1, r5
 8003b26:	4630      	mov	r0, r6
 8003b28:	f000 f9e4 	bl	8003ef4 <__swsetup_r>
 8003b2c:	b170      	cbz	r0, 8003b4c <_vfiprintf_r+0x5c>
 8003b2e:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8003b30:	07dc      	lsls	r4, r3, #31
 8003b32:	d504      	bpl.n	8003b3e <_vfiprintf_r+0x4e>
 8003b34:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8003b38:	b01d      	add	sp, #116	@ 0x74
 8003b3a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003b3e:	89ab      	ldrh	r3, [r5, #12]
 8003b40:	0598      	lsls	r0, r3, #22
 8003b42:	d4f7      	bmi.n	8003b34 <_vfiprintf_r+0x44>
 8003b44:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8003b46:	f7fe fcd5 	bl	80024f4 <__retarget_lock_release_recursive>
 8003b4a:	e7f3      	b.n	8003b34 <_vfiprintf_r+0x44>
 8003b4c:	2300      	movs	r3, #0
 8003b4e:	9309      	str	r3, [sp, #36]	@ 0x24
 8003b50:	2320      	movs	r3, #32
 8003b52:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8003b56:	f8cd 800c 	str.w	r8, [sp, #12]
 8003b5a:	2330      	movs	r3, #48	@ 0x30
 8003b5c:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 8003d0c <_vfiprintf_r+0x21c>
 8003b60:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8003b64:	f04f 0901 	mov.w	r9, #1
 8003b68:	4623      	mov	r3, r4
 8003b6a:	469a      	mov	sl, r3
 8003b6c:	f813 2b01 	ldrb.w	r2, [r3], #1
 8003b70:	b10a      	cbz	r2, 8003b76 <_vfiprintf_r+0x86>
 8003b72:	2a25      	cmp	r2, #37	@ 0x25
 8003b74:	d1f9      	bne.n	8003b6a <_vfiprintf_r+0x7a>
 8003b76:	ebba 0b04 	subs.w	fp, sl, r4
 8003b7a:	d00b      	beq.n	8003b94 <_vfiprintf_r+0xa4>
 8003b7c:	465b      	mov	r3, fp
 8003b7e:	4622      	mov	r2, r4
 8003b80:	4629      	mov	r1, r5
 8003b82:	4630      	mov	r0, r6
 8003b84:	f7ff ffa1 	bl	8003aca <__sfputs_r>
 8003b88:	3001      	adds	r0, #1
 8003b8a:	f000 80a7 	beq.w	8003cdc <_vfiprintf_r+0x1ec>
 8003b8e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8003b90:	445a      	add	r2, fp
 8003b92:	9209      	str	r2, [sp, #36]	@ 0x24
 8003b94:	f89a 3000 	ldrb.w	r3, [sl]
 8003b98:	2b00      	cmp	r3, #0
 8003b9a:	f000 809f 	beq.w	8003cdc <_vfiprintf_r+0x1ec>
 8003b9e:	2300      	movs	r3, #0
 8003ba0:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 8003ba4:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8003ba8:	f10a 0a01 	add.w	sl, sl, #1
 8003bac:	9304      	str	r3, [sp, #16]
 8003bae:	9307      	str	r3, [sp, #28]
 8003bb0:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8003bb4:	931a      	str	r3, [sp, #104]	@ 0x68
 8003bb6:	4654      	mov	r4, sl
 8003bb8:	2205      	movs	r2, #5
 8003bba:	f814 1b01 	ldrb.w	r1, [r4], #1
 8003bbe:	4853      	ldr	r0, [pc, #332]	@ (8003d0c <_vfiprintf_r+0x21c>)
 8003bc0:	f7fc fb0e 	bl	80001e0 <memchr>
 8003bc4:	9a04      	ldr	r2, [sp, #16]
 8003bc6:	b9d8      	cbnz	r0, 8003c00 <_vfiprintf_r+0x110>
 8003bc8:	06d1      	lsls	r1, r2, #27
 8003bca:	bf44      	itt	mi
 8003bcc:	2320      	movmi	r3, #32
 8003bce:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8003bd2:	0713      	lsls	r3, r2, #28
 8003bd4:	bf44      	itt	mi
 8003bd6:	232b      	movmi	r3, #43	@ 0x2b
 8003bd8:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8003bdc:	f89a 3000 	ldrb.w	r3, [sl]
 8003be0:	2b2a      	cmp	r3, #42	@ 0x2a
 8003be2:	d015      	beq.n	8003c10 <_vfiprintf_r+0x120>
 8003be4:	9a07      	ldr	r2, [sp, #28]
 8003be6:	4654      	mov	r4, sl
 8003be8:	2000      	movs	r0, #0
 8003bea:	f04f 0c0a 	mov.w	ip, #10
 8003bee:	4621      	mov	r1, r4
 8003bf0:	f811 3b01 	ldrb.w	r3, [r1], #1
 8003bf4:	3b30      	subs	r3, #48	@ 0x30
 8003bf6:	2b09      	cmp	r3, #9
 8003bf8:	d94b      	bls.n	8003c92 <_vfiprintf_r+0x1a2>
 8003bfa:	b1b0      	cbz	r0, 8003c2a <_vfiprintf_r+0x13a>
 8003bfc:	9207      	str	r2, [sp, #28]
 8003bfe:	e014      	b.n	8003c2a <_vfiprintf_r+0x13a>
 8003c00:	eba0 0308 	sub.w	r3, r0, r8
 8003c04:	fa09 f303 	lsl.w	r3, r9, r3
 8003c08:	4313      	orrs	r3, r2
 8003c0a:	9304      	str	r3, [sp, #16]
 8003c0c:	46a2      	mov	sl, r4
 8003c0e:	e7d2      	b.n	8003bb6 <_vfiprintf_r+0xc6>
 8003c10:	9b03      	ldr	r3, [sp, #12]
 8003c12:	1d19      	adds	r1, r3, #4
 8003c14:	681b      	ldr	r3, [r3, #0]
 8003c16:	9103      	str	r1, [sp, #12]
 8003c18:	2b00      	cmp	r3, #0
 8003c1a:	bfbb      	ittet	lt
 8003c1c:	425b      	neglt	r3, r3
 8003c1e:	f042 0202 	orrlt.w	r2, r2, #2
 8003c22:	9307      	strge	r3, [sp, #28]
 8003c24:	9307      	strlt	r3, [sp, #28]
 8003c26:	bfb8      	it	lt
 8003c28:	9204      	strlt	r2, [sp, #16]
 8003c2a:	7823      	ldrb	r3, [r4, #0]
 8003c2c:	2b2e      	cmp	r3, #46	@ 0x2e
 8003c2e:	d10a      	bne.n	8003c46 <_vfiprintf_r+0x156>
 8003c30:	7863      	ldrb	r3, [r4, #1]
 8003c32:	2b2a      	cmp	r3, #42	@ 0x2a
 8003c34:	d132      	bne.n	8003c9c <_vfiprintf_r+0x1ac>
 8003c36:	9b03      	ldr	r3, [sp, #12]
 8003c38:	1d1a      	adds	r2, r3, #4
 8003c3a:	681b      	ldr	r3, [r3, #0]
 8003c3c:	9203      	str	r2, [sp, #12]
 8003c3e:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8003c42:	3402      	adds	r4, #2
 8003c44:	9305      	str	r3, [sp, #20]
 8003c46:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 8003d1c <_vfiprintf_r+0x22c>
 8003c4a:	7821      	ldrb	r1, [r4, #0]
 8003c4c:	2203      	movs	r2, #3
 8003c4e:	4650      	mov	r0, sl
 8003c50:	f7fc fac6 	bl	80001e0 <memchr>
 8003c54:	b138      	cbz	r0, 8003c66 <_vfiprintf_r+0x176>
 8003c56:	9b04      	ldr	r3, [sp, #16]
 8003c58:	eba0 000a 	sub.w	r0, r0, sl
 8003c5c:	2240      	movs	r2, #64	@ 0x40
 8003c5e:	4082      	lsls	r2, r0
 8003c60:	4313      	orrs	r3, r2
 8003c62:	3401      	adds	r4, #1
 8003c64:	9304      	str	r3, [sp, #16]
 8003c66:	f814 1b01 	ldrb.w	r1, [r4], #1
 8003c6a:	4829      	ldr	r0, [pc, #164]	@ (8003d10 <_vfiprintf_r+0x220>)
 8003c6c:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8003c70:	2206      	movs	r2, #6
 8003c72:	f7fc fab5 	bl	80001e0 <memchr>
 8003c76:	2800      	cmp	r0, #0
 8003c78:	d03f      	beq.n	8003cfa <_vfiprintf_r+0x20a>
 8003c7a:	4b26      	ldr	r3, [pc, #152]	@ (8003d14 <_vfiprintf_r+0x224>)
 8003c7c:	bb1b      	cbnz	r3, 8003cc6 <_vfiprintf_r+0x1d6>
 8003c7e:	9b03      	ldr	r3, [sp, #12]
 8003c80:	3307      	adds	r3, #7
 8003c82:	f023 0307 	bic.w	r3, r3, #7
 8003c86:	3308      	adds	r3, #8
 8003c88:	9303      	str	r3, [sp, #12]
 8003c8a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8003c8c:	443b      	add	r3, r7
 8003c8e:	9309      	str	r3, [sp, #36]	@ 0x24
 8003c90:	e76a      	b.n	8003b68 <_vfiprintf_r+0x78>
 8003c92:	fb0c 3202 	mla	r2, ip, r2, r3
 8003c96:	460c      	mov	r4, r1
 8003c98:	2001      	movs	r0, #1
 8003c9a:	e7a8      	b.n	8003bee <_vfiprintf_r+0xfe>
 8003c9c:	2300      	movs	r3, #0
 8003c9e:	3401      	adds	r4, #1
 8003ca0:	9305      	str	r3, [sp, #20]
 8003ca2:	4619      	mov	r1, r3
 8003ca4:	f04f 0c0a 	mov.w	ip, #10
 8003ca8:	4620      	mov	r0, r4
 8003caa:	f810 2b01 	ldrb.w	r2, [r0], #1
 8003cae:	3a30      	subs	r2, #48	@ 0x30
 8003cb0:	2a09      	cmp	r2, #9
 8003cb2:	d903      	bls.n	8003cbc <_vfiprintf_r+0x1cc>
 8003cb4:	2b00      	cmp	r3, #0
 8003cb6:	d0c6      	beq.n	8003c46 <_vfiprintf_r+0x156>
 8003cb8:	9105      	str	r1, [sp, #20]
 8003cba:	e7c4      	b.n	8003c46 <_vfiprintf_r+0x156>
 8003cbc:	fb0c 2101 	mla	r1, ip, r1, r2
 8003cc0:	4604      	mov	r4, r0
 8003cc2:	2301      	movs	r3, #1
 8003cc4:	e7f0      	b.n	8003ca8 <_vfiprintf_r+0x1b8>
 8003cc6:	ab03      	add	r3, sp, #12
 8003cc8:	9300      	str	r3, [sp, #0]
 8003cca:	462a      	mov	r2, r5
 8003ccc:	4b12      	ldr	r3, [pc, #72]	@ (8003d18 <_vfiprintf_r+0x228>)
 8003cce:	a904      	add	r1, sp, #16
 8003cd0:	4630      	mov	r0, r6
 8003cd2:	f7fd fec3 	bl	8001a5c <_printf_float>
 8003cd6:	4607      	mov	r7, r0
 8003cd8:	1c78      	adds	r0, r7, #1
 8003cda:	d1d6      	bne.n	8003c8a <_vfiprintf_r+0x19a>
 8003cdc:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8003cde:	07d9      	lsls	r1, r3, #31
 8003ce0:	d405      	bmi.n	8003cee <_vfiprintf_r+0x1fe>
 8003ce2:	89ab      	ldrh	r3, [r5, #12]
 8003ce4:	059a      	lsls	r2, r3, #22
 8003ce6:	d402      	bmi.n	8003cee <_vfiprintf_r+0x1fe>
 8003ce8:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8003cea:	f7fe fc03 	bl	80024f4 <__retarget_lock_release_recursive>
 8003cee:	89ab      	ldrh	r3, [r5, #12]
 8003cf0:	065b      	lsls	r3, r3, #25
 8003cf2:	f53f af1f 	bmi.w	8003b34 <_vfiprintf_r+0x44>
 8003cf6:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8003cf8:	e71e      	b.n	8003b38 <_vfiprintf_r+0x48>
 8003cfa:	ab03      	add	r3, sp, #12
 8003cfc:	9300      	str	r3, [sp, #0]
 8003cfe:	462a      	mov	r2, r5
 8003d00:	4b05      	ldr	r3, [pc, #20]	@ (8003d18 <_vfiprintf_r+0x228>)
 8003d02:	a904      	add	r1, sp, #16
 8003d04:	4630      	mov	r0, r6
 8003d06:	f7fe f941 	bl	8001f8c <_printf_i>
 8003d0a:	e7e4      	b.n	8003cd6 <_vfiprintf_r+0x1e6>
 8003d0c:	080043b6 	.word	0x080043b6
 8003d10:	080043c0 	.word	0x080043c0
 8003d14:	08001a5d 	.word	0x08001a5d
 8003d18:	08003acb 	.word	0x08003acb
 8003d1c:	080043bc 	.word	0x080043bc

08003d20 <__sflush_r>:
 8003d20:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8003d24:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003d28:	0716      	lsls	r6, r2, #28
 8003d2a:	4605      	mov	r5, r0
 8003d2c:	460c      	mov	r4, r1
 8003d2e:	d454      	bmi.n	8003dda <__sflush_r+0xba>
 8003d30:	684b      	ldr	r3, [r1, #4]
 8003d32:	2b00      	cmp	r3, #0
 8003d34:	dc02      	bgt.n	8003d3c <__sflush_r+0x1c>
 8003d36:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 8003d38:	2b00      	cmp	r3, #0
 8003d3a:	dd48      	ble.n	8003dce <__sflush_r+0xae>
 8003d3c:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8003d3e:	2e00      	cmp	r6, #0
 8003d40:	d045      	beq.n	8003dce <__sflush_r+0xae>
 8003d42:	2300      	movs	r3, #0
 8003d44:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 8003d48:	682f      	ldr	r7, [r5, #0]
 8003d4a:	6a21      	ldr	r1, [r4, #32]
 8003d4c:	602b      	str	r3, [r5, #0]
 8003d4e:	d030      	beq.n	8003db2 <__sflush_r+0x92>
 8003d50:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8003d52:	89a3      	ldrh	r3, [r4, #12]
 8003d54:	0759      	lsls	r1, r3, #29
 8003d56:	d505      	bpl.n	8003d64 <__sflush_r+0x44>
 8003d58:	6863      	ldr	r3, [r4, #4]
 8003d5a:	1ad2      	subs	r2, r2, r3
 8003d5c:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8003d5e:	b10b      	cbz	r3, 8003d64 <__sflush_r+0x44>
 8003d60:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8003d62:	1ad2      	subs	r2, r2, r3
 8003d64:	2300      	movs	r3, #0
 8003d66:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8003d68:	6a21      	ldr	r1, [r4, #32]
 8003d6a:	4628      	mov	r0, r5
 8003d6c:	47b0      	blx	r6
 8003d6e:	1c43      	adds	r3, r0, #1
 8003d70:	89a3      	ldrh	r3, [r4, #12]
 8003d72:	d106      	bne.n	8003d82 <__sflush_r+0x62>
 8003d74:	6829      	ldr	r1, [r5, #0]
 8003d76:	291d      	cmp	r1, #29
 8003d78:	d82b      	bhi.n	8003dd2 <__sflush_r+0xb2>
 8003d7a:	4a2a      	ldr	r2, [pc, #168]	@ (8003e24 <__sflush_r+0x104>)
 8003d7c:	40ca      	lsrs	r2, r1
 8003d7e:	07d6      	lsls	r6, r2, #31
 8003d80:	d527      	bpl.n	8003dd2 <__sflush_r+0xb2>
 8003d82:	2200      	movs	r2, #0
 8003d84:	6062      	str	r2, [r4, #4]
 8003d86:	04d9      	lsls	r1, r3, #19
 8003d88:	6922      	ldr	r2, [r4, #16]
 8003d8a:	6022      	str	r2, [r4, #0]
 8003d8c:	d504      	bpl.n	8003d98 <__sflush_r+0x78>
 8003d8e:	1c42      	adds	r2, r0, #1
 8003d90:	d101      	bne.n	8003d96 <__sflush_r+0x76>
 8003d92:	682b      	ldr	r3, [r5, #0]
 8003d94:	b903      	cbnz	r3, 8003d98 <__sflush_r+0x78>
 8003d96:	6560      	str	r0, [r4, #84]	@ 0x54
 8003d98:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8003d9a:	602f      	str	r7, [r5, #0]
 8003d9c:	b1b9      	cbz	r1, 8003dce <__sflush_r+0xae>
 8003d9e:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8003da2:	4299      	cmp	r1, r3
 8003da4:	d002      	beq.n	8003dac <__sflush_r+0x8c>
 8003da6:	4628      	mov	r0, r5
 8003da8:	f7ff f9fe 	bl	80031a8 <_free_r>
 8003dac:	2300      	movs	r3, #0
 8003dae:	6363      	str	r3, [r4, #52]	@ 0x34
 8003db0:	e00d      	b.n	8003dce <__sflush_r+0xae>
 8003db2:	2301      	movs	r3, #1
 8003db4:	4628      	mov	r0, r5
 8003db6:	47b0      	blx	r6
 8003db8:	4602      	mov	r2, r0
 8003dba:	1c50      	adds	r0, r2, #1
 8003dbc:	d1c9      	bne.n	8003d52 <__sflush_r+0x32>
 8003dbe:	682b      	ldr	r3, [r5, #0]
 8003dc0:	2b00      	cmp	r3, #0
 8003dc2:	d0c6      	beq.n	8003d52 <__sflush_r+0x32>
 8003dc4:	2b1d      	cmp	r3, #29
 8003dc6:	d001      	beq.n	8003dcc <__sflush_r+0xac>
 8003dc8:	2b16      	cmp	r3, #22
 8003dca:	d11e      	bne.n	8003e0a <__sflush_r+0xea>
 8003dcc:	602f      	str	r7, [r5, #0]
 8003dce:	2000      	movs	r0, #0
 8003dd0:	e022      	b.n	8003e18 <__sflush_r+0xf8>
 8003dd2:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8003dd6:	b21b      	sxth	r3, r3
 8003dd8:	e01b      	b.n	8003e12 <__sflush_r+0xf2>
 8003dda:	690f      	ldr	r7, [r1, #16]
 8003ddc:	2f00      	cmp	r7, #0
 8003dde:	d0f6      	beq.n	8003dce <__sflush_r+0xae>
 8003de0:	0793      	lsls	r3, r2, #30
 8003de2:	680e      	ldr	r6, [r1, #0]
 8003de4:	bf08      	it	eq
 8003de6:	694b      	ldreq	r3, [r1, #20]
 8003de8:	600f      	str	r7, [r1, #0]
 8003dea:	bf18      	it	ne
 8003dec:	2300      	movne	r3, #0
 8003dee:	eba6 0807 	sub.w	r8, r6, r7
 8003df2:	608b      	str	r3, [r1, #8]
 8003df4:	f1b8 0f00 	cmp.w	r8, #0
 8003df8:	dde9      	ble.n	8003dce <__sflush_r+0xae>
 8003dfa:	6a21      	ldr	r1, [r4, #32]
 8003dfc:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 8003dfe:	4643      	mov	r3, r8
 8003e00:	463a      	mov	r2, r7
 8003e02:	4628      	mov	r0, r5
 8003e04:	47b0      	blx	r6
 8003e06:	2800      	cmp	r0, #0
 8003e08:	dc08      	bgt.n	8003e1c <__sflush_r+0xfc>
 8003e0a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8003e0e:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8003e12:	81a3      	strh	r3, [r4, #12]
 8003e14:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8003e18:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8003e1c:	4407      	add	r7, r0
 8003e1e:	eba8 0800 	sub.w	r8, r8, r0
 8003e22:	e7e7      	b.n	8003df4 <__sflush_r+0xd4>
 8003e24:	20400001 	.word	0x20400001

08003e28 <_fflush_r>:
 8003e28:	b538      	push	{r3, r4, r5, lr}
 8003e2a:	690b      	ldr	r3, [r1, #16]
 8003e2c:	4605      	mov	r5, r0
 8003e2e:	460c      	mov	r4, r1
 8003e30:	b913      	cbnz	r3, 8003e38 <_fflush_r+0x10>
 8003e32:	2500      	movs	r5, #0
 8003e34:	4628      	mov	r0, r5
 8003e36:	bd38      	pop	{r3, r4, r5, pc}
 8003e38:	b118      	cbz	r0, 8003e42 <_fflush_r+0x1a>
 8003e3a:	6a03      	ldr	r3, [r0, #32]
 8003e3c:	b90b      	cbnz	r3, 8003e42 <_fflush_r+0x1a>
 8003e3e:	f7fe fa4f 	bl	80022e0 <__sinit>
 8003e42:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8003e46:	2b00      	cmp	r3, #0
 8003e48:	d0f3      	beq.n	8003e32 <_fflush_r+0xa>
 8003e4a:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8003e4c:	07d0      	lsls	r0, r2, #31
 8003e4e:	d404      	bmi.n	8003e5a <_fflush_r+0x32>
 8003e50:	0599      	lsls	r1, r3, #22
 8003e52:	d402      	bmi.n	8003e5a <_fflush_r+0x32>
 8003e54:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8003e56:	f7fe fb4c 	bl	80024f2 <__retarget_lock_acquire_recursive>
 8003e5a:	4628      	mov	r0, r5
 8003e5c:	4621      	mov	r1, r4
 8003e5e:	f7ff ff5f 	bl	8003d20 <__sflush_r>
 8003e62:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8003e64:	07da      	lsls	r2, r3, #31
 8003e66:	4605      	mov	r5, r0
 8003e68:	d4e4      	bmi.n	8003e34 <_fflush_r+0xc>
 8003e6a:	89a3      	ldrh	r3, [r4, #12]
 8003e6c:	059b      	lsls	r3, r3, #22
 8003e6e:	d4e1      	bmi.n	8003e34 <_fflush_r+0xc>
 8003e70:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8003e72:	f7fe fb3f 	bl	80024f4 <__retarget_lock_release_recursive>
 8003e76:	e7dd      	b.n	8003e34 <_fflush_r+0xc>

08003e78 <__swbuf_r>:
 8003e78:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003e7a:	460e      	mov	r6, r1
 8003e7c:	4614      	mov	r4, r2
 8003e7e:	4605      	mov	r5, r0
 8003e80:	b118      	cbz	r0, 8003e8a <__swbuf_r+0x12>
 8003e82:	6a03      	ldr	r3, [r0, #32]
 8003e84:	b90b      	cbnz	r3, 8003e8a <__swbuf_r+0x12>
 8003e86:	f7fe fa2b 	bl	80022e0 <__sinit>
 8003e8a:	69a3      	ldr	r3, [r4, #24]
 8003e8c:	60a3      	str	r3, [r4, #8]
 8003e8e:	89a3      	ldrh	r3, [r4, #12]
 8003e90:	071a      	lsls	r2, r3, #28
 8003e92:	d501      	bpl.n	8003e98 <__swbuf_r+0x20>
 8003e94:	6923      	ldr	r3, [r4, #16]
 8003e96:	b943      	cbnz	r3, 8003eaa <__swbuf_r+0x32>
 8003e98:	4621      	mov	r1, r4
 8003e9a:	4628      	mov	r0, r5
 8003e9c:	f000 f82a 	bl	8003ef4 <__swsetup_r>
 8003ea0:	b118      	cbz	r0, 8003eaa <__swbuf_r+0x32>
 8003ea2:	f04f 37ff 	mov.w	r7, #4294967295	@ 0xffffffff
 8003ea6:	4638      	mov	r0, r7
 8003ea8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8003eaa:	6823      	ldr	r3, [r4, #0]
 8003eac:	6922      	ldr	r2, [r4, #16]
 8003eae:	1a98      	subs	r0, r3, r2
 8003eb0:	6963      	ldr	r3, [r4, #20]
 8003eb2:	b2f6      	uxtb	r6, r6
 8003eb4:	4283      	cmp	r3, r0
 8003eb6:	4637      	mov	r7, r6
 8003eb8:	dc05      	bgt.n	8003ec6 <__swbuf_r+0x4e>
 8003eba:	4621      	mov	r1, r4
 8003ebc:	4628      	mov	r0, r5
 8003ebe:	f7ff ffb3 	bl	8003e28 <_fflush_r>
 8003ec2:	2800      	cmp	r0, #0
 8003ec4:	d1ed      	bne.n	8003ea2 <__swbuf_r+0x2a>
 8003ec6:	68a3      	ldr	r3, [r4, #8]
 8003ec8:	3b01      	subs	r3, #1
 8003eca:	60a3      	str	r3, [r4, #8]
 8003ecc:	6823      	ldr	r3, [r4, #0]
 8003ece:	1c5a      	adds	r2, r3, #1
 8003ed0:	6022      	str	r2, [r4, #0]
 8003ed2:	701e      	strb	r6, [r3, #0]
 8003ed4:	6962      	ldr	r2, [r4, #20]
 8003ed6:	1c43      	adds	r3, r0, #1
 8003ed8:	429a      	cmp	r2, r3
 8003eda:	d004      	beq.n	8003ee6 <__swbuf_r+0x6e>
 8003edc:	89a3      	ldrh	r3, [r4, #12]
 8003ede:	07db      	lsls	r3, r3, #31
 8003ee0:	d5e1      	bpl.n	8003ea6 <__swbuf_r+0x2e>
 8003ee2:	2e0a      	cmp	r6, #10
 8003ee4:	d1df      	bne.n	8003ea6 <__swbuf_r+0x2e>
 8003ee6:	4621      	mov	r1, r4
 8003ee8:	4628      	mov	r0, r5
 8003eea:	f7ff ff9d 	bl	8003e28 <_fflush_r>
 8003eee:	2800      	cmp	r0, #0
 8003ef0:	d0d9      	beq.n	8003ea6 <__swbuf_r+0x2e>
 8003ef2:	e7d6      	b.n	8003ea2 <__swbuf_r+0x2a>

08003ef4 <__swsetup_r>:
 8003ef4:	b538      	push	{r3, r4, r5, lr}
 8003ef6:	4b29      	ldr	r3, [pc, #164]	@ (8003f9c <__swsetup_r+0xa8>)
 8003ef8:	4605      	mov	r5, r0
 8003efa:	6818      	ldr	r0, [r3, #0]
 8003efc:	460c      	mov	r4, r1
 8003efe:	b118      	cbz	r0, 8003f08 <__swsetup_r+0x14>
 8003f00:	6a03      	ldr	r3, [r0, #32]
 8003f02:	b90b      	cbnz	r3, 8003f08 <__swsetup_r+0x14>
 8003f04:	f7fe f9ec 	bl	80022e0 <__sinit>
 8003f08:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8003f0c:	0719      	lsls	r1, r3, #28
 8003f0e:	d422      	bmi.n	8003f56 <__swsetup_r+0x62>
 8003f10:	06da      	lsls	r2, r3, #27
 8003f12:	d407      	bmi.n	8003f24 <__swsetup_r+0x30>
 8003f14:	2209      	movs	r2, #9
 8003f16:	602a      	str	r2, [r5, #0]
 8003f18:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8003f1c:	81a3      	strh	r3, [r4, #12]
 8003f1e:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8003f22:	e033      	b.n	8003f8c <__swsetup_r+0x98>
 8003f24:	0758      	lsls	r0, r3, #29
 8003f26:	d512      	bpl.n	8003f4e <__swsetup_r+0x5a>
 8003f28:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8003f2a:	b141      	cbz	r1, 8003f3e <__swsetup_r+0x4a>
 8003f2c:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8003f30:	4299      	cmp	r1, r3
 8003f32:	d002      	beq.n	8003f3a <__swsetup_r+0x46>
 8003f34:	4628      	mov	r0, r5
 8003f36:	f7ff f937 	bl	80031a8 <_free_r>
 8003f3a:	2300      	movs	r3, #0
 8003f3c:	6363      	str	r3, [r4, #52]	@ 0x34
 8003f3e:	89a3      	ldrh	r3, [r4, #12]
 8003f40:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 8003f44:	81a3      	strh	r3, [r4, #12]
 8003f46:	2300      	movs	r3, #0
 8003f48:	6063      	str	r3, [r4, #4]
 8003f4a:	6923      	ldr	r3, [r4, #16]
 8003f4c:	6023      	str	r3, [r4, #0]
 8003f4e:	89a3      	ldrh	r3, [r4, #12]
 8003f50:	f043 0308 	orr.w	r3, r3, #8
 8003f54:	81a3      	strh	r3, [r4, #12]
 8003f56:	6923      	ldr	r3, [r4, #16]
 8003f58:	b94b      	cbnz	r3, 8003f6e <__swsetup_r+0x7a>
 8003f5a:	89a3      	ldrh	r3, [r4, #12]
 8003f5c:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 8003f60:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8003f64:	d003      	beq.n	8003f6e <__swsetup_r+0x7a>
 8003f66:	4621      	mov	r1, r4
 8003f68:	4628      	mov	r0, r5
 8003f6a:	f000 f8c1 	bl	80040f0 <__smakebuf_r>
 8003f6e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8003f72:	f013 0201 	ands.w	r2, r3, #1
 8003f76:	d00a      	beq.n	8003f8e <__swsetup_r+0x9a>
 8003f78:	2200      	movs	r2, #0
 8003f7a:	60a2      	str	r2, [r4, #8]
 8003f7c:	6962      	ldr	r2, [r4, #20]
 8003f7e:	4252      	negs	r2, r2
 8003f80:	61a2      	str	r2, [r4, #24]
 8003f82:	6922      	ldr	r2, [r4, #16]
 8003f84:	b942      	cbnz	r2, 8003f98 <__swsetup_r+0xa4>
 8003f86:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 8003f8a:	d1c5      	bne.n	8003f18 <__swsetup_r+0x24>
 8003f8c:	bd38      	pop	{r3, r4, r5, pc}
 8003f8e:	0799      	lsls	r1, r3, #30
 8003f90:	bf58      	it	pl
 8003f92:	6962      	ldrpl	r2, [r4, #20]
 8003f94:	60a2      	str	r2, [r4, #8]
 8003f96:	e7f4      	b.n	8003f82 <__swsetup_r+0x8e>
 8003f98:	2000      	movs	r0, #0
 8003f9a:	e7f7      	b.n	8003f8c <__swsetup_r+0x98>
 8003f9c:	2000000c 	.word	0x2000000c

08003fa0 <_sbrk_r>:
 8003fa0:	b538      	push	{r3, r4, r5, lr}
 8003fa2:	4d06      	ldr	r5, [pc, #24]	@ (8003fbc <_sbrk_r+0x1c>)
 8003fa4:	2300      	movs	r3, #0
 8003fa6:	4604      	mov	r4, r0
 8003fa8:	4608      	mov	r0, r1
 8003faa:	602b      	str	r3, [r5, #0]
 8003fac:	f7fd fc58 	bl	8001860 <_sbrk>
 8003fb0:	1c43      	adds	r3, r0, #1
 8003fb2:	d102      	bne.n	8003fba <_sbrk_r+0x1a>
 8003fb4:	682b      	ldr	r3, [r5, #0]
 8003fb6:	b103      	cbz	r3, 8003fba <_sbrk_r+0x1a>
 8003fb8:	6023      	str	r3, [r4, #0]
 8003fba:	bd38      	pop	{r3, r4, r5, pc}
 8003fbc:	20000334 	.word	0x20000334

08003fc0 <memcpy>:
 8003fc0:	440a      	add	r2, r1
 8003fc2:	4291      	cmp	r1, r2
 8003fc4:	f100 33ff 	add.w	r3, r0, #4294967295	@ 0xffffffff
 8003fc8:	d100      	bne.n	8003fcc <memcpy+0xc>
 8003fca:	4770      	bx	lr
 8003fcc:	b510      	push	{r4, lr}
 8003fce:	f811 4b01 	ldrb.w	r4, [r1], #1
 8003fd2:	f803 4f01 	strb.w	r4, [r3, #1]!
 8003fd6:	4291      	cmp	r1, r2
 8003fd8:	d1f9      	bne.n	8003fce <memcpy+0xe>
 8003fda:	bd10      	pop	{r4, pc}

08003fdc <__assert_func>:
 8003fdc:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8003fde:	4614      	mov	r4, r2
 8003fe0:	461a      	mov	r2, r3
 8003fe2:	4b09      	ldr	r3, [pc, #36]	@ (8004008 <__assert_func+0x2c>)
 8003fe4:	681b      	ldr	r3, [r3, #0]
 8003fe6:	4605      	mov	r5, r0
 8003fe8:	68d8      	ldr	r0, [r3, #12]
 8003fea:	b14c      	cbz	r4, 8004000 <__assert_func+0x24>
 8003fec:	4b07      	ldr	r3, [pc, #28]	@ (800400c <__assert_func+0x30>)
 8003fee:	9100      	str	r1, [sp, #0]
 8003ff0:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8003ff4:	4906      	ldr	r1, [pc, #24]	@ (8004010 <__assert_func+0x34>)
 8003ff6:	462b      	mov	r3, r5
 8003ff8:	f000 f842 	bl	8004080 <fiprintf>
 8003ffc:	f000 f8d6 	bl	80041ac <abort>
 8004000:	4b04      	ldr	r3, [pc, #16]	@ (8004014 <__assert_func+0x38>)
 8004002:	461c      	mov	r4, r3
 8004004:	e7f3      	b.n	8003fee <__assert_func+0x12>
 8004006:	bf00      	nop
 8004008:	2000000c 	.word	0x2000000c
 800400c:	080043d1 	.word	0x080043d1
 8004010:	080043de 	.word	0x080043de
 8004014:	0800440c 	.word	0x0800440c

08004018 <_calloc_r>:
 8004018:	b570      	push	{r4, r5, r6, lr}
 800401a:	fba1 5402 	umull	r5, r4, r1, r2
 800401e:	b934      	cbnz	r4, 800402e <_calloc_r+0x16>
 8004020:	4629      	mov	r1, r5
 8004022:	f7ff f935 	bl	8003290 <_malloc_r>
 8004026:	4606      	mov	r6, r0
 8004028:	b928      	cbnz	r0, 8004036 <_calloc_r+0x1e>
 800402a:	4630      	mov	r0, r6
 800402c:	bd70      	pop	{r4, r5, r6, pc}
 800402e:	220c      	movs	r2, #12
 8004030:	6002      	str	r2, [r0, #0]
 8004032:	2600      	movs	r6, #0
 8004034:	e7f9      	b.n	800402a <_calloc_r+0x12>
 8004036:	462a      	mov	r2, r5
 8004038:	4621      	mov	r1, r4
 800403a:	f7fe f9dc 	bl	80023f6 <memset>
 800403e:	e7f4      	b.n	800402a <_calloc_r+0x12>

08004040 <__ascii_mbtowc>:
 8004040:	b082      	sub	sp, #8
 8004042:	b901      	cbnz	r1, 8004046 <__ascii_mbtowc+0x6>
 8004044:	a901      	add	r1, sp, #4
 8004046:	b142      	cbz	r2, 800405a <__ascii_mbtowc+0x1a>
 8004048:	b14b      	cbz	r3, 800405e <__ascii_mbtowc+0x1e>
 800404a:	7813      	ldrb	r3, [r2, #0]
 800404c:	600b      	str	r3, [r1, #0]
 800404e:	7812      	ldrb	r2, [r2, #0]
 8004050:	1e10      	subs	r0, r2, #0
 8004052:	bf18      	it	ne
 8004054:	2001      	movne	r0, #1
 8004056:	b002      	add	sp, #8
 8004058:	4770      	bx	lr
 800405a:	4610      	mov	r0, r2
 800405c:	e7fb      	b.n	8004056 <__ascii_mbtowc+0x16>
 800405e:	f06f 0001 	mvn.w	r0, #1
 8004062:	e7f8      	b.n	8004056 <__ascii_mbtowc+0x16>

08004064 <__ascii_wctomb>:
 8004064:	4603      	mov	r3, r0
 8004066:	4608      	mov	r0, r1
 8004068:	b141      	cbz	r1, 800407c <__ascii_wctomb+0x18>
 800406a:	2aff      	cmp	r2, #255	@ 0xff
 800406c:	d904      	bls.n	8004078 <__ascii_wctomb+0x14>
 800406e:	228a      	movs	r2, #138	@ 0x8a
 8004070:	601a      	str	r2, [r3, #0]
 8004072:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8004076:	4770      	bx	lr
 8004078:	700a      	strb	r2, [r1, #0]
 800407a:	2001      	movs	r0, #1
 800407c:	4770      	bx	lr
	...

08004080 <fiprintf>:
 8004080:	b40e      	push	{r1, r2, r3}
 8004082:	b503      	push	{r0, r1, lr}
 8004084:	4601      	mov	r1, r0
 8004086:	ab03      	add	r3, sp, #12
 8004088:	4805      	ldr	r0, [pc, #20]	@ (80040a0 <fiprintf+0x20>)
 800408a:	f853 2b04 	ldr.w	r2, [r3], #4
 800408e:	6800      	ldr	r0, [r0, #0]
 8004090:	9301      	str	r3, [sp, #4]
 8004092:	f7ff fd2d 	bl	8003af0 <_vfiprintf_r>
 8004096:	b002      	add	sp, #8
 8004098:	f85d eb04 	ldr.w	lr, [sp], #4
 800409c:	b003      	add	sp, #12
 800409e:	4770      	bx	lr
 80040a0:	2000000c 	.word	0x2000000c

080040a4 <__swhatbuf_r>:
 80040a4:	b570      	push	{r4, r5, r6, lr}
 80040a6:	460c      	mov	r4, r1
 80040a8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80040ac:	2900      	cmp	r1, #0
 80040ae:	b096      	sub	sp, #88	@ 0x58
 80040b0:	4615      	mov	r5, r2
 80040b2:	461e      	mov	r6, r3
 80040b4:	da0d      	bge.n	80040d2 <__swhatbuf_r+0x2e>
 80040b6:	89a3      	ldrh	r3, [r4, #12]
 80040b8:	f013 0f80 	tst.w	r3, #128	@ 0x80
 80040bc:	f04f 0100 	mov.w	r1, #0
 80040c0:	bf14      	ite	ne
 80040c2:	2340      	movne	r3, #64	@ 0x40
 80040c4:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 80040c8:	2000      	movs	r0, #0
 80040ca:	6031      	str	r1, [r6, #0]
 80040cc:	602b      	str	r3, [r5, #0]
 80040ce:	b016      	add	sp, #88	@ 0x58
 80040d0:	bd70      	pop	{r4, r5, r6, pc}
 80040d2:	466a      	mov	r2, sp
 80040d4:	f000 f848 	bl	8004168 <_fstat_r>
 80040d8:	2800      	cmp	r0, #0
 80040da:	dbec      	blt.n	80040b6 <__swhatbuf_r+0x12>
 80040dc:	9901      	ldr	r1, [sp, #4]
 80040de:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 80040e2:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 80040e6:	4259      	negs	r1, r3
 80040e8:	4159      	adcs	r1, r3
 80040ea:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 80040ee:	e7eb      	b.n	80040c8 <__swhatbuf_r+0x24>

080040f0 <__smakebuf_r>:
 80040f0:	898b      	ldrh	r3, [r1, #12]
 80040f2:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80040f4:	079d      	lsls	r5, r3, #30
 80040f6:	4606      	mov	r6, r0
 80040f8:	460c      	mov	r4, r1
 80040fa:	d507      	bpl.n	800410c <__smakebuf_r+0x1c>
 80040fc:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 8004100:	6023      	str	r3, [r4, #0]
 8004102:	6123      	str	r3, [r4, #16]
 8004104:	2301      	movs	r3, #1
 8004106:	6163      	str	r3, [r4, #20]
 8004108:	b003      	add	sp, #12
 800410a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800410c:	ab01      	add	r3, sp, #4
 800410e:	466a      	mov	r2, sp
 8004110:	f7ff ffc8 	bl	80040a4 <__swhatbuf_r>
 8004114:	9f00      	ldr	r7, [sp, #0]
 8004116:	4605      	mov	r5, r0
 8004118:	4639      	mov	r1, r7
 800411a:	4630      	mov	r0, r6
 800411c:	f7ff f8b8 	bl	8003290 <_malloc_r>
 8004120:	b948      	cbnz	r0, 8004136 <__smakebuf_r+0x46>
 8004122:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8004126:	059a      	lsls	r2, r3, #22
 8004128:	d4ee      	bmi.n	8004108 <__smakebuf_r+0x18>
 800412a:	f023 0303 	bic.w	r3, r3, #3
 800412e:	f043 0302 	orr.w	r3, r3, #2
 8004132:	81a3      	strh	r3, [r4, #12]
 8004134:	e7e2      	b.n	80040fc <__smakebuf_r+0xc>
 8004136:	89a3      	ldrh	r3, [r4, #12]
 8004138:	6020      	str	r0, [r4, #0]
 800413a:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800413e:	81a3      	strh	r3, [r4, #12]
 8004140:	9b01      	ldr	r3, [sp, #4]
 8004142:	e9c4 0704 	strd	r0, r7, [r4, #16]
 8004146:	b15b      	cbz	r3, 8004160 <__smakebuf_r+0x70>
 8004148:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800414c:	4630      	mov	r0, r6
 800414e:	f000 f81d 	bl	800418c <_isatty_r>
 8004152:	b128      	cbz	r0, 8004160 <__smakebuf_r+0x70>
 8004154:	89a3      	ldrh	r3, [r4, #12]
 8004156:	f023 0303 	bic.w	r3, r3, #3
 800415a:	f043 0301 	orr.w	r3, r3, #1
 800415e:	81a3      	strh	r3, [r4, #12]
 8004160:	89a3      	ldrh	r3, [r4, #12]
 8004162:	431d      	orrs	r5, r3
 8004164:	81a5      	strh	r5, [r4, #12]
 8004166:	e7cf      	b.n	8004108 <__smakebuf_r+0x18>

08004168 <_fstat_r>:
 8004168:	b538      	push	{r3, r4, r5, lr}
 800416a:	4d07      	ldr	r5, [pc, #28]	@ (8004188 <_fstat_r+0x20>)
 800416c:	2300      	movs	r3, #0
 800416e:	4604      	mov	r4, r0
 8004170:	4608      	mov	r0, r1
 8004172:	4611      	mov	r1, r2
 8004174:	602b      	str	r3, [r5, #0]
 8004176:	f7fd fb4b 	bl	8001810 <_fstat>
 800417a:	1c43      	adds	r3, r0, #1
 800417c:	d102      	bne.n	8004184 <_fstat_r+0x1c>
 800417e:	682b      	ldr	r3, [r5, #0]
 8004180:	b103      	cbz	r3, 8004184 <_fstat_r+0x1c>
 8004182:	6023      	str	r3, [r4, #0]
 8004184:	bd38      	pop	{r3, r4, r5, pc}
 8004186:	bf00      	nop
 8004188:	20000334 	.word	0x20000334

0800418c <_isatty_r>:
 800418c:	b538      	push	{r3, r4, r5, lr}
 800418e:	4d06      	ldr	r5, [pc, #24]	@ (80041a8 <_isatty_r+0x1c>)
 8004190:	2300      	movs	r3, #0
 8004192:	4604      	mov	r4, r0
 8004194:	4608      	mov	r0, r1
 8004196:	602b      	str	r3, [r5, #0]
 8004198:	f7fd fb4a 	bl	8001830 <_isatty>
 800419c:	1c43      	adds	r3, r0, #1
 800419e:	d102      	bne.n	80041a6 <_isatty_r+0x1a>
 80041a0:	682b      	ldr	r3, [r5, #0]
 80041a2:	b103      	cbz	r3, 80041a6 <_isatty_r+0x1a>
 80041a4:	6023      	str	r3, [r4, #0]
 80041a6:	bd38      	pop	{r3, r4, r5, pc}
 80041a8:	20000334 	.word	0x20000334

080041ac <abort>:
 80041ac:	b508      	push	{r3, lr}
 80041ae:	2006      	movs	r0, #6
 80041b0:	f000 f82c 	bl	800420c <raise>
 80041b4:	2001      	movs	r0, #1
 80041b6:	f7fd fadb 	bl	8001770 <_exit>

080041ba <_raise_r>:
 80041ba:	291f      	cmp	r1, #31
 80041bc:	b538      	push	{r3, r4, r5, lr}
 80041be:	4605      	mov	r5, r0
 80041c0:	460c      	mov	r4, r1
 80041c2:	d904      	bls.n	80041ce <_raise_r+0x14>
 80041c4:	2316      	movs	r3, #22
 80041c6:	6003      	str	r3, [r0, #0]
 80041c8:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 80041cc:	bd38      	pop	{r3, r4, r5, pc}
 80041ce:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 80041d0:	b112      	cbz	r2, 80041d8 <_raise_r+0x1e>
 80041d2:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 80041d6:	b94b      	cbnz	r3, 80041ec <_raise_r+0x32>
 80041d8:	4628      	mov	r0, r5
 80041da:	f000 f831 	bl	8004240 <_getpid_r>
 80041de:	4622      	mov	r2, r4
 80041e0:	4601      	mov	r1, r0
 80041e2:	4628      	mov	r0, r5
 80041e4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80041e8:	f000 b818 	b.w	800421c <_kill_r>
 80041ec:	2b01      	cmp	r3, #1
 80041ee:	d00a      	beq.n	8004206 <_raise_r+0x4c>
 80041f0:	1c59      	adds	r1, r3, #1
 80041f2:	d103      	bne.n	80041fc <_raise_r+0x42>
 80041f4:	2316      	movs	r3, #22
 80041f6:	6003      	str	r3, [r0, #0]
 80041f8:	2001      	movs	r0, #1
 80041fa:	e7e7      	b.n	80041cc <_raise_r+0x12>
 80041fc:	2100      	movs	r1, #0
 80041fe:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 8004202:	4620      	mov	r0, r4
 8004204:	4798      	blx	r3
 8004206:	2000      	movs	r0, #0
 8004208:	e7e0      	b.n	80041cc <_raise_r+0x12>
	...

0800420c <raise>:
 800420c:	4b02      	ldr	r3, [pc, #8]	@ (8004218 <raise+0xc>)
 800420e:	4601      	mov	r1, r0
 8004210:	6818      	ldr	r0, [r3, #0]
 8004212:	f7ff bfd2 	b.w	80041ba <_raise_r>
 8004216:	bf00      	nop
 8004218:	2000000c 	.word	0x2000000c

0800421c <_kill_r>:
 800421c:	b538      	push	{r3, r4, r5, lr}
 800421e:	4d07      	ldr	r5, [pc, #28]	@ (800423c <_kill_r+0x20>)
 8004220:	2300      	movs	r3, #0
 8004222:	4604      	mov	r4, r0
 8004224:	4608      	mov	r0, r1
 8004226:	4611      	mov	r1, r2
 8004228:	602b      	str	r3, [r5, #0]
 800422a:	f7fd fa91 	bl	8001750 <_kill>
 800422e:	1c43      	adds	r3, r0, #1
 8004230:	d102      	bne.n	8004238 <_kill_r+0x1c>
 8004232:	682b      	ldr	r3, [r5, #0]
 8004234:	b103      	cbz	r3, 8004238 <_kill_r+0x1c>
 8004236:	6023      	str	r3, [r4, #0]
 8004238:	bd38      	pop	{r3, r4, r5, pc}
 800423a:	bf00      	nop
 800423c:	20000334 	.word	0x20000334

08004240 <_getpid_r>:
 8004240:	f7fd ba7e 	b.w	8001740 <_getpid>

08004244 <_init>:
 8004244:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004246:	bf00      	nop
 8004248:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800424a:	bc08      	pop	{r3}
 800424c:	469e      	mov	lr, r3
 800424e:	4770      	bx	lr

08004250 <_fini>:
 8004250:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004252:	bf00      	nop
 8004254:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8004256:	bc08      	pop	{r3}
 8004258:	469e      	mov	lr, r3
 800425a:	4770      	bx	lr
